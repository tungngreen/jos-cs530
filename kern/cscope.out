cscope 15 $HOME/igjae/LAB5/jos/kern               0000234607
	@console.c

3 
	~<öc/x86.h
>

4 
	~<öc/memœyout.h
>

5 
	~<öc/kbdªg.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/c⁄sﬁe.h
>

10 
	~<kîn/picúq.h
>

12 
c⁄s_öå
((*
¥oc
)());

13 
	`c⁄s_putc
(
c
);

17 
	$dñay
()

19 
	`öb
(0x84);

20 
	`öb
(0x84);

21 
	`öb
(0x84);

22 
	`öb
(0x84);

23 
	}
}

27 
	#COM1
 0x3F8

	)

29 
	#COM_RX
 0

30 
	#COM_TX
 0

31 
	#COM_DLL
 0

32 
	#COM_DLM
 1

33 
	#COM_IER
 1

34 
	#COM_IER_RDI
 0x01

35 
	#COM_IIR
 2

36 
	#COM_FCR
 2

37 
	#COM_LCR
 3

38 
	#COM_LCR_DLAB
 0x80

39 
	#COM_LCR_WLEN8
 0x03

40 
	#COM_MCR
 4

41 
	#COM_MCR_RTS
 0x02

42 
	#COM_MCR_DTR
 0x01

43 
	#COM_MCR_OUT2
 0x08

44 
	#COM_LSR
 5

45 
	#COM_LSR_DATA
 0x01

46 
	#COM_LSR_TXRDY
 0x20

47 
	#COM_LSR_TSRE
 0x40

48 

	)

49 
boﬁ
 
	g£rül_exi°s
;

52 
	$£rül_¥oc_d©a
()

54 i‡(!(
	`öb
(
COM1
+
COM_LSR
Ë& 
COM_LSR_DATA
))

56  
	`öb
(
COM1
+
COM_RX
);

57 
	}
}

60 
	$£rül_öå
()

62 i‡(
£rül_exi°s
)

63 
	`c⁄s_öå
(
£rül_¥oc_d©a
);

64 
	}
}

67 
	$£rül_putc
(
c
)

69 
i
;

71 
i
 = 0;

72 !(
	`öb
(
COM1
 + 
COM_LSR
Ë& 
COM_LSR_TXRDY
Ë&& 
i
 < 12800;

73 
i
++)

74 
	`dñay
();

76 
	`outb
(
COM1
 + 
COM_TX
, 
c
);

77 
	}
}

80 
	$£rül_öô
()

83 
	`outb
(
COM1
+
COM_FCR
, 0);

86 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_DLAB
);

87 
	`outb
(
COM1
+
COM_DLL
, (
uöt8_t
) (115200 / 9600));

88 
	`outb
(
COM1
+
COM_DLM
, 0);

91 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_WLEN8
 & ~
COM_LCR_DLAB
);

94 
	`outb
(
COM1
+
COM_MCR
, 0);

96 
	`outb
(
COM1
+
COM_IER
, 
COM_IER_RDI
);

100 
£rül_exi°s
 = (
	`öb
(
COM1
+
COM_LSR
) != 0xFF);

101 (Ë
	`öb
(
COM1
+
COM_IIR
);

102 (Ë
	`öb
(
COM1
+
COM_RX
);

105 i‡(
£rül_exi°s
)

106 
	`úq_£tmask_8259A
(
úq_mask_8259A
 & ~(1<<4));

107 
	}
}

116 
	$Õt_putc
(
c
)

118 
i
;

120 
i
 = 0; !(
	`öb
(0x378+1) & 0x80) && i < 12800; i++)

121 
	`dñay
();

122 
	`outb
(0x378+0, 
c
);

123 
	`outb
(0x378+2, 0x08|0x04|0x01);

124 
	`outb
(0x378+2, 0x08);

125 
	}
}

132 
	gaddr_6845
;

133 
uöt16_t
 *
	g¸t_buf
;

134 
uöt16_t
 
	g¸t_pos
;

137 
	$cga_öô
()

139 vﬁ©ûê
uöt16_t
 *
˝
;

140 
uöt16_t
 
was
;

141 
pos
;

143 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
CGA_BUF
);

144 
was
 = *
˝
;

145 *
˝
 = (
uöt16_t
) 0xA55A;

146 i‡(*
˝
 != 0xA55A) {

147 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
MONO_BUF
);

148 
addr_6845
 = 
MONO_BASE
;

150 *
˝
 = 
was
;

151 
addr_6845
 = 
CGA_BASE
;

155 
	`outb
(
addr_6845
, 14);

156 
pos
 = 
	`öb
(
addr_6845
 + 1) << 8;

157 
	`outb
(
addr_6845
, 15);

158 
pos
 |
	`öb
(
addr_6845
 + 1);

160 
¸t_buf
 = (
uöt16_t
*Ë
˝
;

161 
¸t_pos
 = 
pos
;

162 
	}
}

167 
	$cga_putc
(
c
)

170 i‡(!(
c
 & ~0xFF))

171 
c
 |= 0x0700;

173 
c
 & 0xff) {

175 i‡(
¸t_pos
 > 0) {

176 
¸t_pos
--;

177 
¸t_buf
[
¸t_pos
] = (
c
 & ~0xff) | ' ';

181 
¸t_pos
 +
CRT_COLS
;

184 
¸t_pos
 -(¸t_po†% 
CRT_COLS
);

187 
	`c⁄s_putc
(' ');

188 
	`c⁄s_putc
(' ');

189 
	`c⁄s_putc
(' ');

190 
	`c⁄s_putc
(' ');

191 
	`c⁄s_putc
(' ');

194 
¸t_buf
[
¸t_pos
++] = 
c
;

199 i‡(
¸t_pos
 >
CRT_SIZE
) {

200 
i
;

202 
	`memmove
(
¸t_buf
, cπ_bu‡+ 
CRT_COLS
, (
CRT_SIZE
 - CRT_COLSË* (
uöt16_t
));

203 
i
 = 
CRT_SIZE
 - 
CRT_COLS
; i < CRT_SIZE; i++)

204 
¸t_buf
[
i
] = 0x0700 | ' ';

205 
¸t_pos
 -
CRT_COLS
;

209 
	`outb
(
addr_6845
, 14);

210 
	`outb
(
addr_6845
 + 1, 
¸t_pos
 >> 8);

211 
	`outb
(
addr_6845
, 15);

212 
	`outb
(
addr_6845
 + 1, 
¸t_pos
);

213 
	}
}

218 
	#NO
 0

	)

220 
	#SHIFT
 (1<<0)

	)

221 
	#CTL
 (1<<1)

	)

222 
	#ALT
 (1<<2)

	)

224 
	#CAPSLOCK
 (1<<3)

	)

225 
	#NUMLOCK
 (1<<4)

	)

226 
	#SCROLLLOCK
 (1<<5)

	)

228 
	#E0ESC
 (1<<6)

	)

230 
uöt8_t
 
	gshi·code
[256] =

232 [0x1D] = 
CTL
,

233 [0x2A] = 
SHIFT
,

234 [0x36] = 
SHIFT
,

235 [0x38] = 
ALT
,

236 [0x9D] = 
CTL
,

237 [0xB8] = 
ALT


240 
uöt8_t
 
	gtoggÀcode
[256] =

242 [0x3A] = 
CAPSLOCK
,

243 [0x45] = 
NUMLOCK
,

244 [0x46] = 
SCROLLLOCK


247 
uöt8_t
 
	gn‹mÆm≠
[256] =

249 
NO
, 0x1B, '1', '2', '3', '4', '5', '6',

252 'o', 'p', '[', ']', '\n', 
NO
, 'a', 's',

254 '\'', '`', 
NO
, '\\', 'z', 'x', 'c', 'v',

255 'b', 'n', 'm', ',', '.', '/', 
NO
, '*',

256 
NO
, ' ', NO, NO, NO, NO, NO, NO,

257 
NO
, NO, NO, NO, NO, NO, NO, '7',

259 '2', '3', '0', '.', 
NO
, NO, NO, NO,

260 [0xC7] = 
KEY_HOME
, [0x9C] = '\n' ,

261 [0xB5] = '/' , [0xC8] = 
KEY_UP
,

262 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

263 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

264 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

265 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


268 
uöt8_t
 
	gshi·m≠
[256] =

270 
NO
, 033, '!', '@', '#', '$', '%', '^',

273 'O', 'P', '{', '}', '\n', 
NO
, 'A', 'S',

275 '"', '~', 
NO
, '|', 'Z', 'X', 'C', 'V',

276 'B', 'N', 'M', '<', '>', '?', 
NO
, '*',

277 
NO
, ' ', NO, NO, NO, NO, NO, NO,

278 
NO
, NO, NO, NO, NO, NO, NO, '7',

280 '2', '3', '0', '.', 
NO
, NO, NO, NO,

281 [0xC7] = 
KEY_HOME
, [0x9C] = '\n' ,

282 [0xB5] = '/' , [0xC8] = 
KEY_UP
,

283 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

284 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

285 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

286 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


289 
	#C
(
x
Ë(x - '@')

	)

291 
uöt8_t
 
	g˘lm≠
[256] =

293 
NO
, NO, NO, NO, NO, NO, NO, NO,

294 
NO
, NO, NO, NO, NO, NO, NO, NO,

295 
C
('Q'), C('W'), C('E'), C('R'), C('T'), C('Y'), C('U'), C('I'),

296 
C
('O'), C('P'), 
NO
, NO, '\r', NO, C('A'), C('S'),

297 
C
('D'), C('F'), C('G'), C('H'), C('J'), C('K'), C('L'), 
NO
,

298 
NO
, NO, NO, 
C
('\\'), C('Z'), C('X'), C('C'), C('V'),

299 
C
('B'), C('N'), C('M'), 
NO
, NO, C('/'), NO, NO,

300 [0x97] = 
KEY_HOME
,

301 [0xB5] = 
C
('/'), [0xC8] = 
KEY_UP
,

302 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

303 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

304 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

305 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


308 
uöt8_t
 *
	gch¨code
[4] = {

309 
n‹mÆm≠
,

310 
shi·m≠
,

311 
˘lm≠
,

312 
˘lm≠


320 
	$kbd_¥oc_d©a
()

322 
c
;

323 
uöt8_t
 
d©a
;

324 
uöt32_t
 
shi·
;

325 
r
;

326 i‡((
	`öb
(
KBSTATP
Ë& 
KBS_DIB
) == 0)

329 
d©a
 = 
	`öb
(
KBDATAP
);

331 i‡(
d©a
 == 0xE0) {

333 
shi·
 |
E0ESC
;

335 } i‡(
d©a
 & 0x80) {

337 
d©a
 = (
shi·
 & 
E0ESC
 ? data : data & 0x7F);

338 
shi·
 &~(
shi·code
[
d©a
] | 
E0ESC
);

340 } i‡(
shi·
 & 
E0ESC
) {

342 
d©a
 |= 0x80;

343 
shi·
 &~
E0ESC
;

346 
shi·
 |
shi·code
[
d©a
];

347 
shi·
 ^
toggÀcode
[
d©a
];

349 
c
 = 
ch¨code
[
shi·
 & (
CTL
 | 
SHIFT
)][
d©a
];

350 i‡(
shi·
 & 
CAPSLOCK
) {

351 i‡('a' <
c
 && c <= 'z')

352 
c
 += 'A' - 'a';

353 i‡('A' <
c
 && c <= 'Z')

354 
c
 += 'a' - 'A';

359 i‡(!(~
shi·
 & (
CTL
 | 
ALT
)Ë&& 
c
 =
KEY_DEL
) {

360 
	`˝rötf
("Rebooting!\n");

361 
	`outb
(0x92, 0x3);

363  
c
;

364 
	}
}

367 
	$kbd_öå
()

369 
	`c⁄s_öå
(
kbd_¥oc_d©a
);

370 
	}
}

373 
	$kbd_öô
()

376 
	`kbd_öå
();

377 
	`úq_£tmask_8259A
(
úq_mask_8259A
 & ~(1<<1));

378 
	}
}

387 
	#CONSBUFSIZE
 512

	)

390 
uöt8_t
 
	mbuf
[
CONSBUFSIZE
];

391 
uöt32_t
 
	mΩos
;

392 
uöt32_t
 
	mwpos
;

393 } 
	gc⁄s
;

398 
	$c⁄s_öå
((*
¥oc
)())

400 
c
;

402 (
c
 = (*
¥oc
)()) != -1) {

403 i‡(
c
 == 0)

405 
c⁄s
.
buf
[c⁄s.
wpos
++] = 
c
;

406 i‡(
c⁄s
.
wpos
 =
CONSBUFSIZE
)

407 
c⁄s
.
wpos
 = 0;

409 
	}
}

413 
	$c⁄s_gëc
()

415 
c
;

420 
	`£rül_öå
();

421 
	`kbd_öå
();

424 i‡(
c⁄s
.
Ωos
 !c⁄s.
wpos
) {

425 
c
 = 
c⁄s
.
buf
[c⁄s.
Ωos
++];

426 i‡(
c⁄s
.
Ωos
 =
CONSBUFSIZE
)

427 
c⁄s
.
Ωos
 = 0;

428  
c
;

431 
	}
}

435 
	$c⁄s_putc
(
c
)

437 
	`£rül_putc
(
c
);

438 
	`Õt_putc
(
c
);

439 
	`cga_putc
(
c
);

440 
	}
}

444 
	$c⁄s_öô
()

446 
	`cga_öô
();

447 
	`kbd_öô
();

448 
	`£rül_öô
();

450 i‡(!
£rül_exi°s
)

451 
	`˝rötf
("SerialÖort doesÇotÉxist!\n");

452 
	}
}

458 
	$˝utch¨
(
c
)

460 
	`c⁄s_putc
(
c
);

461 
	}
}

464 
	$gëch¨
()

466 
c
;

468 (
c
 = 
	`c⁄s_gëc
()) == 0)

470  
c
;

471 
	}
}

474 
	$isc⁄s
(
fdnum
)

478 
	}
}

	@console.h

3 #i‚de‡
_CONSOLE_H_


4 
	#_CONSOLE_H_


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/ty≥s.h
>

11 
	#MONO_BASE
 0x3B4

	)

12 
	#MONO_BUF
 0xB0000

	)

13 
	#CGA_BASE
 0x3D4

	)

14 
	#CGA_BUF
 0xB8000

	)

16 
	#CRT_ROWS
 25

	)

17 
	#CRT_COLS
 80

	)

18 
	#CRT_SIZE
 (
CRT_ROWS
 * 
CRT_COLS
)

	)

20 
c⁄s_öô
();

21 
c⁄s_gëc
();

23 
kbd_öå
();

24 
£rül_öå
();

	@cpu.h

2 #i‚de‡
JOS_INC_CPU_H


3 
	#JOS_INC_CPU_H


	)

5 
	~<öc/ty≥s.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/mmu.h
>

8 
	~<öc/ív.h
>

11 
	#NCPU
 8

	)

17 
	mCPU_UNUSED
 = 0,

18 
	mCPU_STARTED
,

19 
	mCPU_HALTED
,

23 
	sCpuInfo
 {

24 
uöt8_t
 
	m˝u_id
;

25 vﬁ©ûê
	m˝u_°©us
;

26 
Env
 *
	m˝u_ív
;

27 
Task°©e
 
	m˝u_ts
;

31 
CpuInfo
 
˝us
[
NCPU
];

32 
n˝u
;

33 
CpuInfo
 *
boŸ˝u
;

34 
phyßddr_t
 
œpiˇddr
;

37 
≥r˝u_k°acks
[
NCPU
][
KSTKSIZE
];

39 
˝unum
();

40 
	#this˝u
 (&
˝us
[
	`˝unum
()])

	)

42 
mp_öô
();

43 
œpic_öô
();

44 
œpic_°¨èp
(
uöt8_t
 
≠icid
, 
uöt32_t
 
addr
);

45 
œpic_eoi
();

46 
œpic_ùi
(
ve˘‹
);

	@dwarf.h

1 #i‚de‡
DWARF_H


2 
	#DWARF_H


	)

4 
	#NATTRDEF
 32

5 
	#NATTRVAL
 120

6 

	)

7 
	g_Dw¨f_Dõ
;

10 
	tDw¨f_Boﬁ
;

11 
off_t
 
	tDw¨f_Off
;

12 
uöt64_t
 
	tDw¨f_Unsig√d
;

13 
uöt16_t
 
	tDw¨f_HÆf
;

14 
uöt8_t
 
	tDw¨f_SmÆl
;

15 
öt64_t
 
	tDw¨f_Sig√d
;

16 
uöt64_t
 
	tDw¨f_Addr
;

17 *
	tDw¨f_På
;

19 
_Dw¨f_Debug
 *
	tDw¨f_Debug
;

20 
_Dw¨f_Fde
 *
	tDw¨f_Fde
;

21 
_Dw¨f_Fde
 *
	tDw¨f_P_Fde
;

22 
_Dw¨f_Cõ
 *
	tDw¨f_Cõ
;

25 #i‚de‡
DW_FRAME_HIGHEST_NORMAL_REGISTER


26 
	#DW_FRAME_HIGHEST_NORMAL_REGISTER
 63

	)

29 
	#DW_FRAME_RA_COL
 (
DW_FRAME_HIGHEST_NORMAL_REGISTER
 + 1)

	)

30 
	#DW_FRAME_STATIC_LINK
 (
DW_FRAME_HIGHEST_NORMAL_REGISTER
 + 2)

	)

32 #i‚de‡
DW_FRAME_LAST_REG_NUM


33 
	#DW_FRAME_LAST_REG_NUM
 (
DW_FRAME_HIGHEST_NORMAL_REGISTER
 + 3)

	)

36 #i‚de‡
DW_FRAME_REG_INITIAL_VALUE


37 
	#DW_FRAME_REG_INITIAL_VALUE
 
DW_FRAME_SAME_VAL


	)

40 
	#DW_FRAME_UNDEFINED_VAL
 1034

	)

41 
	#DW_FRAME_SAME_VAL
 1035

	)

42 
	#DW_FRAME_CFA_COL3
 1436

	)

44 
	#DW_EXPR_OFFSET
 0

	)

45 
	#DW_EXPR_VAL_OFFSET
 1

	)

46 
	#DW_EXPR_EXPRESSION
 2

	)

47 
	#DW_EXPR_VAL_EXPRESSION
 3

	)

49 
	#DW_FRAME_CFA_COL
 0

	)

51 #i‚de‡
DW_REG_TABLE_SIZE


52 
	#DW_REG_TABLE_SIZE
 66

	)

55 
	#DW_OP_fbªg
 0x91

	)

58 
Dw¨f_SmÆl
 
	mdw_off£t_ªÀv™t
;

59 
Dw¨f_SmÆl
 
	mdw_vÆue_ty≥
;

60 
Dw¨f_HÆf
 
	mdw_ªgnum
;

61 
Dw¨f_Unsig√d
 
	mdw_off£t_‹_block_Àn
;

62 
Dw¨f_På
 
	mdw_block_±r
;

63 } 
	tDw¨f_RegèbÀ_E¡ry3
;

66 
Dw¨f_RegèbÀ_E¡ry3
 
	mπ3_cÁ_ruÀ
;

67 
Dw¨f_HÆf
 
	mπ3_ªg_èbÀ_size
;

68 
Dw¨f_RegèbÀ_E¡ry3
 *
	mπ3_ruÀs
;

69 } 
	tDw¨f_RegèbÀ3
;

72 
Dw¨f_SmÆl
 
	mdw_off£t_ªÀv™t
;

73 
Dw¨f_SmÆl
 
	mdw_vÆue_ty≥
;

74 
Dw¨f_HÆf
 
	mdw_ªgnum
;

75 
Dw¨f_Addr
 
	mdw_off£t
;

76 } 
	tDw¨f_RegèbÀ_E¡ry
;

79 
Dw¨f_RegèbÀ_E¡ry
 
	mcÁ_ruÀ
;

80 
Dw¨f_RegèbÀ_E¡ry
 
	mruÀs
[
DW_REG_TABLE_SIZE
];

81 } 
	tDw¨f_RegèbÀ
;

83 
	s_Dw¨f_AârDef
 {

84 
uöt64_t
 
	mad_©åib
;

85 
uöt64_t
 
	mad_f‹m
;

86 
uöt64_t
 
	mad_off£t
;

87 }
	tDw¨f_AârDef
;

89 
	s_Dw¨f_Abbªv
 {

90 
uöt64_t
 
	mab_íåy
;

91 
uöt64_t
 
	mab_èg
;

92 
uöt8_t
 
	mab_chûdªn
;

93 
uöt64_t
 
	mab_off£t
;

94 
uöt64_t
 
	mab_Àngth
;

95 
uöt64_t
 
	mab_©num
;

96 
Dw¨f_AârDef
 
	mab_©ådef
[
NATTRDEF
];

97 }
	tDw¨f_Abbªv
;

99 
	s_Dw¨f_CU


102 
uöt64_t
 
	mcu_Àngth
;

103 
uöt16_t
 
	mvîsi⁄
;

104 
uöt8_t
 
	maddr_size
;

105 
uöt64_t
 
	mdebug_abbªv_off£t
;

108 
uöt8_t
 
	mcu_Àngth_size
;

109 
uöt8_t
 
	mcu_dw¨f_size
;

110 
uöt64_t
 
	mcu_√xt_off£t
;

111 
uöt64_t
 
	mcu_dõ_off£t
;

112 
uöt64_t
 
	mcu_off£t
;

113 }
	tDw¨f_CU
;

115 
	s_Dw¨f_Debug


117 
uöt64_t
 
	mcuº_off_dbgöfo
;

118 
uöt64_t
 
	mdbg_öfo_off£t_ñf
;

119 
uöt64_t
 
	mdbg_öfo_size
;

120 
uöt64_t
 (*
ªad
)(
	muöt8_t
 *, 
	muöt64_t
 *, );

121 
uöt64_t
 (*
decode
)(
	muöt8_t
 **, );

122 
	mdbg_poöãr_size
;

124 
uöt64_t
 
	mcuº_off_eh
;

125 
uöt64_t
 
	mdbg_eh_off£t
;

126 
uöt64_t
 
	mdbg_eh_size
;

128 
Dw¨f_HÆf
 
	mdbg_‰ame_ruÀ_èbÀ_size
;

129 
Dw¨f_HÆf
 
	mdbg_‰ame_ruÀ_öôül_vÆue
;

130 
Dw¨f_HÆf
 
	mdbg_‰ame_cÁ_vÆue
;

131 
Dw¨f_HÆf
 
	mdbg_‰ame_ßme_vÆue
;

132 
Dw¨f_HÆf
 
	mdbg_‰ame_undeföed_vÆue
;

134 
Dw¨f_RegèbÀ3
 *
	mdbg_öã∫Æ_ªg_èbÀ
;

138 
uöt8_t
 
	mÃ_©om
;

139 
uöt64_t
 
	mÃ_numbî
;

140 
uöt64_t
 
	mÃ_numbî2
;

141 
uöt64_t
 
	mÃ_off£t
;

142 } 
	tDw¨f_Loc
;

145 
uöt64_t
 
	mld_l›c
;

146 
uöt64_t
 
	mld_hùc
;

147 
uöt16_t
 
	mld_˚¡s
;

148 
Dw¨f_Loc
 
	mld_s
;;

149 } 
	tDw¨f_Locdesc
;

152 
uöt64_t
 
	mbl_Àn
;

153 *
	mbl_d©a
;

154 } 
	tDw¨f_Block
;

156 
	s_Dw¨f_Aâribuã
 {

157 
_Dw¨f_Dõ
 *
	m©_dõ
;

159 
uöt64_t
 
	m©_off£t
;

160 
uöt64_t
 
	m©_©åib
;

161 
uöt64_t
 
	m©_f‹m
;

162 
	m©_ödúe˘
;

164 
uöt64_t
 
	mu64
;

165 
öt64_t
 
	ms64
;

166 *
	ms
;

167 
uöt8_t
 *
	mu8p
;

168 } 
	mu
[2];

169 
Dw¨f_Block
 
	m©_block
;

170 
Dw¨f_Locdesc
 *
	m©_ld
;

171 
uöt64_t
 
	m©_ªlsym
;

172 c⁄° *
	m©_ªl£c
;

173 }
	tDw¨f_Aâribuã
;

175 
	s_Dw¨f_Dõ
 {

176 
uöt64_t
 
	mdõ_off£t
;

177 
uöt64_t
 
	mdõ_√xt_off
;

178 
uöt64_t
 
	mdõ_abnum
;

179 
uöt64_t
 
	mdõ_èg
;

180 
Dw¨f_Abbªv
 
	mdõ_ab
;

181 *
	mdõ_«me
;

182 
uöt8_t
 
	mdõ_©å_cou¡
;

183 
Dw¨f_CU
 *
	mcu_hódî
;

184 
_Dw¨f_Dõ
 *
	mcu_dõ
;

185 
Dw¨f_Aâribuã
 
	mdõ_©å
[
NATTRVAL
];

186 }
	tDw¨f_Dõ
;

189 
	mDW_OBJECT_MSB
,

190 
	mDW_OBJECT_LSB


191 } 
	tDw¨f_Endü¬ess
;

193 
	s_Dw¨f_Cõ
 {

194 
Dw¨f_Debug
 
	mcõ_dbg
;

195 
Dw¨f_Unsig√d
 
	mcõ_ödex
;

196 
Dw¨f_Unsig√d
 
	mcõ_off£t
;

197 
Dw¨f_Unsig√d
 
	mcõ_Àngth
;

198 
Dw¨f_HÆf
 
	mcõ_vîsi⁄
;

199 
uöt8_t
 *
	mcõ_augmít
;

200 
Dw¨f_Unsig√d
 
	mcõ_ehd©a
;

201 
Dw¨f_Unsig√d
 
	mcõ_ˇf
;

202 
Dw¨f_Sig√d
 
	mcõ_daf
;

203 
Dw¨f_Unsig√d
 
	mcõ_ø
;

204 
Dw¨f_Unsig√d
 
	mcõ_augÀn
;

205 
uöt8_t
 *
	mcõ_augd©a
;

206 
uöt8_t
 
	mcõ_fde_ícode
;

207 
Dw¨f_På
 
	mcõ_öôö°
;

208 
Dw¨f_Unsig√d
 
	mcõ_ö°Àn
;

211 
	s_Dw¨f_Fde
 {

212 
Dw¨f_Debug
 
	mfde_dbg
;

213 
Dw¨f_Cõ
 
	mfde_cõ
;

214 
Dw¨f_På
 
	mfde_addr
;

215 
Dw¨f_Unsig√d
 
	mfde_off£t
;

216 
Dw¨f_Unsig√d
 
	mfde_Àngth
;

217 
Dw¨f_Unsig√d
 
	mfde_cõoff
;

218 
Dw¨f_Unsig√d
 
	mfde_öôloc
;

219 
Dw¨f_Unsig√d
 
	mfde_adønge
;

220 
Dw¨f_Unsig√d
 
	mfde_augÀn
;

221 
uöt8_t
 *
	mfde_augd©a
;

222 
uöt8_t
 *
	mfde_ö°
;

223 
Dw¨f_Unsig√d
 
	mfde_ö°Àn
;

224 
Dw¨f_Unsig√d
 
	mfde_ö°ˇp
;

225 
Dw¨f_Unsig√d
 
	mfde_symndx
;

226 
Dw¨f_Unsig√d
 
	mfde_esymndx
;

227 
Dw¨f_Addr
 
	mfde_eoff
;

230 
	s_Dw¨f_Eº‹
 {

231 
	mîr_îr‹
;

232 
	mîr_ñ„º‹
;

233 c⁄° *
	mîr_func
;

234 
	mîr_löe
;

235 
	mîr_msg
[1024];

236 } 
	tDw¨f_Eº‹
;

238 
	s_Dw¨f_Se˘i⁄
 {

239 c⁄° *
	mds_«me
;

240 
Dw¨f_SmÆl
 *
	mds_d©a
;

241 
Dw¨f_Unsig√d
 
	mds_addr
;

242 
Dw¨f_Unsig√d
 
	mds_size
;

243 } 
	tDw¨f_Se˘i⁄
;

245 
	s_Dw¨f_Löe_
 {

247 
Dw¨f_Addr
 
	m _addr
;

248 
Dw¨f_Unsig√d
 
	m _symndx
;

249 
Dw¨f_Unsig√d
 
	m _fûío
;

250 
Dw¨f_Unsig√d
 
	m _löío
;

251 
Dw¨f_Sig√d
 
	m _cﬁumn
;

252 
Dw¨f_Boﬁ
 
	m _bblock
;

253 
Dw¨f_Boﬁ
 
	m _°mt
;

254 
Dw¨f_Boﬁ
 
	m _íd£q
;

256 }
	t_Dw¨f_Löe
;

258 
	s_Dw¨f_LöeInfo_
 {

259 
Dw¨f_Unsig√d
 
	mli_Àngth
;

260 
Dw¨f_HÆf
 
	mli_vîsi⁄
;

261 
Dw¨f_Unsig√d
 
	mli_hdæí
;

262 
Dw¨f_SmÆl
 
	mli_möÀn
;

263 
Dw¨f_SmÆl
 
	mli_def°mt
;

264 
öt8_t
 
	mli_lba£
;

265 
Dw¨f_SmÆl
 
	mli_Ã™ge
;

266 
Dw¨f_SmÆl
 
	mli_›ba£
;

267 
Dw¨f_SmÆl
 *
	mli_›Àn
;

268 **
	mli_öcdús
;

269 
Dw¨f_Unsig√d
 
	mli_ö˛í
;

270 **
	mli_l‚¨øy
;

271 
Dw¨f_Unsig√d
 
	mli_lÊí
;

273 
_Dw¨f_Löe
 
	mli_löe
;

274 
Dw¨f_Unsig√d
 
	mli_ Àn
;

276 }
	t_Dw¨f_LöeInfo
;

278 
_Dw¨f_LöeInfo
 *
	tDw¨f_LöeInfo
;

279 
_Dw¨f_Löe
 *
	tDw¨f_Löe
;

281 
dw¨f_§˛öes
(
Dw¨f_Dõ
 *
dõ
, 
Dw¨f_Löe
 
löebuf
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
);

	@dwarf_api.h

1 #i‚de‡
DWARF_API_H


2 
	#DWARF_API_H


	)

3 
	~<kîn/kdebug.h
>

5 
uöçå_t
 
ªad_£˘i⁄_hódîs
(uintptr_t, uintptr_t);

6 
föd_debug_£˘i⁄s
(
uöçå_t
);

7 
dw¨f_gë_pc_öfo
(
uöçå_t
 
addr
, 
Rùdebugöfo
 *
öfo
);

	@dwarf_define.h

29 #i‚def 
_DWARF_DEFINE_H_


30 
	#_DWARF_DEFINE_H_


	)

32 
	#DW_TAG_¨øy_ty≥
 0x01

	)

33 
	#DW_TAG_˛ass_ty≥
 0x02

	)

34 
	#DW_TAG_íåy_poöt
 0x03

	)

35 
	#DW_TAG_íumî©i⁄_ty≥
 0x04

	)

36 
	#DW_TAG_f‹mÆ_∑ømëî
 0x05

	)

37 
	#DW_TAG_imp‹ãd_de˛¨©i⁄
 0x08

	)

38 
	#DW_TAG_œbñ
 0x0a

	)

39 
	#DW_TAG_Àxiˇl_block
 0x0b

	)

40 
	#DW_TAG_membî
 0x0d

	)

41 
	#DW_TAG_poöãr_ty≥
 0x0f

	)

42 
	#DW_TAG_ª„ªn˚_ty≥
 0x10

	)

43 
	#DW_TAG_compûe_unô
 0x11

	)

44 
	#DW_TAG_°rög_ty≥
 0x12

	)

45 
	#DW_TAG_°ru˘uª_ty≥
 0x13

	)

46 
	#DW_TAG_subroutöe_ty≥
 0x15

	)

47 
	#DW_TAG_ty≥def
 0x16

	)

48 
	#DW_TAG_uni⁄_ty≥
 0x17

	)

49 
	#DW_TAG_un•ecifõd_∑ømëîs
 0x18

	)

50 
	#DW_TAG_v¨ü¡
 0x19

	)

51 
	#DW_TAG_comm⁄_block
 0x1a

	)

52 
	#DW_TAG_comm⁄_ö˛usi⁄
 0x1b

	)

53 
	#DW_TAG_öhîô™˚
 0x1c

	)

54 
	#DW_TAG_ölöed_subroutöe
 0x1d

	)

55 
	#DW_TAG_moduÀ
 0x1e

	)

56 
	#DW_TAG_±r_to_membî_ty≥
 0x1f

	)

57 
	#DW_TAG_£t_ty≥
 0x20

	)

58 
	#DW_TAG_subønge_ty≥
 0x21

	)

59 
	#DW_TAG_wôh_°mt
 0x22

	)

60 
	#DW_TAG_ac˚ss_de˛¨©i⁄
 0x23

	)

61 
	#DW_TAG_ba£_ty≥
 0x24

	)

62 
	#DW_TAG_ˇtch_block
 0x25

	)

63 
	#DW_TAG_c⁄°_ty≥
 0x26

	)

64 
	#DW_TAG_c⁄°™t
 0x27

	)

65 
	#DW_TAG_íumî©‹
 0x28

	)

66 
	#DW_TAG_‰õnd
 0x2a

	)

67 
	#DW_TAG_«mñi°
 0x2b

	)

68 
	#DW_TAG_«mñi°_ôem
 0x2c

	)

69 
	#DW_TAG_∑cked_ty≥
 0x2d

	)

70 
	#DW_TAG_sub¥ogøm
 0x2e

	)

71 
	#DW_TAG_ãm∂©e_ty≥_∑ømëî
 0x2f

	)

72 
	#DW_TAG_ãm∂©e_ty≥_∑øm
 0x2f

	)

73 
	#DW_TAG_ãm∂©e_vÆue_∑ømëî
 0x30

	)

74 
	#DW_TAG_ãm∂©e_vÆue_∑øm
 0x30

	)

75 
	#DW_TAG_thrown_ty≥
 0x31

	)

76 
	#DW_TAG_åy_block
 0x32

	)

77 
	#DW_TAG_v¨ü¡_∑π
 0x33

	)

78 
	#DW_TAG_v¨übÀ
 0x34

	)

79 
	#DW_TAG_vﬁ©ûe_ty≥
 0x35

	)

80 
	#DW_TAG_dw¨f_¥o˚duª
 0x36

	)

81 
	#DW_TAG_ª°ri˘_ty≥
 0x37

	)

82 
	#DW_TAG_öãrÁ˚_ty≥
 0x38

	)

83 
	#DW_TAG_«me•a˚
 0x39

	)

84 
	#DW_TAG_imp‹ãd_moduÀ
 0x3a

	)

85 
	#DW_TAG_un•ecifõd_ty≥
 0x3b

	)

86 
	#DW_TAG_∑πül_unô
 0x3c

	)

87 
	#DW_TAG_imp‹ãd_unô
 0x3d

	)

88 
	#DW_TAG_c⁄dôi⁄
 0x3f

	)

89 
	#DW_TAG_sh¨ed_ty≥
 0x40

	)

90 
	#DW_TAG_ty≥_unô
 0x41

	)

91 
	#DW_TAG_rvÆue_ª„ªn˚_ty≥
 0x42

	)

92 
	#DW_TAG_ãm∂©e_Æüs
 0x43

	)

93 
	#DW_TAG_lo_u£r
 0x4080

	)

94 
	#DW_TAG_hi_u£r
 0xffff

	)

96 
	#DW_CHILDREN_no
 0x00

	)

97 
	#DW_CHILDREN_yes
 0x01

	)

99 
	#DW_AT_siblög
 0x01

	)

100 
	#DW_AT_loˇti⁄
 0x02

	)

101 
	#DW_AT_«me
 0x03

	)

102 
	#DW_AT_‹dîög
 0x09

	)

103 
	#DW_AT_subs¸_d©a
 0x0a

	)

104 
	#DW_AT_byã_size
 0x0b

	)

105 
	#DW_AT_bô_off£t
 0x0c

	)

106 
	#DW_AT_bô_size
 0x0d

	)

107 
	#DW_AT_ñemít_li°
 0x0f

	)

108 
	#DW_AT_°mt_li°
 0x10

	)

109 
	#DW_AT_low_pc
 0x11

	)

110 
	#DW_AT_high_pc
 0x12

	)

111 
	#DW_AT_œnguage
 0x13

	)

112 
	#DW_AT_membî
 0x14

	)

113 
	#DW_AT_dis¸
 0x15

	)

114 
	#DW_AT_dis¸_vÆue
 0x16

	)

115 
	#DW_AT_visibûôy
 0x17

	)

116 
	#DW_AT_imp‹t
 0x18

	)

117 
	#DW_AT_°rög_Àngth
 0x19

	)

118 
	#DW_AT_comm⁄_ª„ªn˚
 0x1a

	)

119 
	#DW_AT_comp_dú
 0x1b

	)

120 
	#DW_AT_c⁄°_vÆue
 0x1c

	)

121 
	#DW_AT_c⁄èöög_ty≥
 0x1d

	)

122 
	#DW_AT_deÁu…_vÆue
 0x1e

	)

123 
	#DW_AT_ölöe
 0x20

	)

124 
	#DW_AT_is_›ti⁄Æ
 0x21

	)

125 
	#DW_AT_lowî_bound
 0x22

	)

126 
	#DW_AT_¥odu˚r
 0x25

	)

127 
	#DW_AT_¥ŸŸy≥d
 0x27

	)

128 
	#DW_AT_ªtu∫_addr
 0x2a

	)

129 
	#DW_AT_°¨t_sc›e
 0x2c

	)

130 
	#DW_AT_bô_°ride
 0x2e

	)

131 
	#DW_AT_°ride_size
 0x2e

	)

132 
	#DW_AT_uµî_bound
 0x2f

	)

133 
	#DW_AT_ab°ø˘_‹igö
 0x31

	)

134 
	#DW_AT_ac˚ssibûôy
 0x32

	)

135 
	#DW_AT_addªss_˛ass
 0x33

	)

136 
	#DW_AT_¨tificül
 0x34

	)

137 
	#DW_AT_ba£_ty≥s
 0x35

	)

138 
	#DW_AT_ˇŒög_c⁄víti⁄
 0x36

	)

139 
	#DW_AT_cou¡
 0x37

	)

140 
	#DW_AT_d©a_membî_loˇti⁄
 0x38

	)

141 
	#DW_AT_de˛_cﬁumn
 0x39

	)

142 
	#DW_AT_de˛_fûe
 0x3a

	)

143 
	#DW_AT_de˛_löe
 0x3b

	)

144 
	#DW_AT_de˛¨©i⁄
 0x3c

	)

145 
	#DW_AT_dis¸_li°
 0x3d

	)

146 
	#DW_AT_ícodög
 0x3e

	)

147 
	#DW_AT_exã∫Æ
 0x3f

	)

148 
	#DW_AT_‰ame_ba£
 0x40

	)

149 
	#DW_AT_‰õnd
 0x41

	)

150 
	#DW_AT_idítifõr_ˇ£
 0x42

	)

151 
	#DW_AT_ma¸o_öfo
 0x43

	)

152 
	#DW_AT_«mñi°_ôem
 0x44

	)

153 
	#DW_AT_¥i‹ôy
 0x45

	)

154 
	#DW_AT_£gmít
 0x46

	)

155 
	#DW_AT_•ecifiˇti⁄
 0x47

	)

156 
	#DW_AT_°©ic_lök
 0x48

	)

157 
	#DW_AT_ty≥
 0x49

	)

158 
	#DW_AT_u£_loˇti⁄
 0x4a

	)

159 
	#DW_AT_v¨übÀ_∑ømëî
 0x4b

	)

160 
	#DW_AT_vútuÆôy
 0x4c

	)

161 
	#DW_AT_vèbÀ_ñem_loˇti⁄
 0x4d

	)

162 
	#DW_AT_Æloˇãd
 0x4e

	)

163 
	#DW_AT_assocüãd
 0x4f

	)

164 
	#DW_AT_d©a_loˇti⁄
 0x50

	)

165 
	#DW_AT_byã_°ride
 0x51

	)

166 
	#DW_AT_íåy_pc
 0x52

	)

167 
	#DW_AT_u£_UTF8
 0x53

	)

168 
	#DW_AT_exãnsi⁄
 0x54

	)

169 
	#DW_AT_ønges
 0x55

	)

170 
	#DW_AT_åampﬁöe
 0x56

	)

171 
	#DW_AT_ˇŒ_cﬁumn
 0x57

	)

172 
	#DW_AT_ˇŒ_fûe
 0x58

	)

173 
	#DW_AT_ˇŒ_löe
 0x59

	)

174 
	#DW_AT_des¸ùti⁄
 0x5a

	)

175 
	#DW_AT_bö¨y_sˇÀ
 0x5b

	)

176 
	#DW_AT_decimÆ_sˇÀ
 0x5c

	)

177 
	#DW_AT_smÆl
 0x5d

	)

178 
	#DW_AT_decimÆ_sign
 0x5e

	)

179 
	#DW_AT_digô_cou¡
 0x5f

	)

180 
	#DW_AT_pi˘uª_°rög
 0x60

	)

181 
	#DW_AT_muèbÀ
 0x61

	)

182 
	#DW_AT_thªads_sˇÀd
 0x62

	)

183 
	#DW_AT_ex∂icô
 0x63

	)

184 
	#DW_AT_obje˘_poöãr
 0x64

	)

185 
	#DW_AT_ídünôy
 0x65

	)

186 
	#DW_AT_ñemíèl
 0x66

	)

187 
	#DW_AT_puª
 0x67

	)

188 
	#DW_AT_ªcursive
 0x68

	)

189 
	#DW_AT_sig«tuª
 0x69

	)

190 
	#DW_AT_maö_sub¥ogøm
 0x6a

	)

191 
	#DW_AT_d©a_bô_off£t
 0x6b

	)

192 
	#DW_AT_c⁄°_ex¥
 0x6c

	)

193 
	#DW_AT_íum_˛ass
 0x6d

	)

194 
	#DW_AT_lökage_«me
 0x6e

	)

195 
	#DW_AT_lo_u£r
 0x2000

	)

196 
	#DW_AT_hi_u£r
 0x3fff

	)

198 
	#DW_FORM_addr
 0x01

	)

199 
	#DW_FORM_block2
 0x03

	)

200 
	#DW_FORM_block4
 0x04

	)

201 
	#DW_FORM_d©a2
 0x05

	)

202 
	#DW_FORM_d©a4
 0x06

	)

203 
	#DW_FORM_d©a8
 0x07

	)

204 
	#DW_FORM_°rög
 0x08

	)

205 
	#DW_FORM_block
 0x09

	)

206 
	#DW_FORM_block1
 0x0a

	)

207 
	#DW_FORM_d©a1
 0x0b

	)

208 
	#DW_FORM_Êag
 0x0c

	)

209 
	#DW_FORM_sd©a
 0x0d

	)

210 
	#DW_FORM_°Ω
 0x0e

	)

211 
	#DW_FORM_ud©a
 0x0f

	)

212 
	#DW_FORM_ªf_addr
 0x10

	)

213 
	#DW_FORM_ªf1
 0x11

	)

214 
	#DW_FORM_ªf2
 0x12

	)

215 
	#DW_FORM_ªf4
 0x13

	)

216 
	#DW_FORM_ªf8
 0x14

	)

217 
	#DW_FORM_ªf_ud©a
 0x15

	)

218 
	#DW_FORM_ödúe˘
 0x16

	)

219 
	#DW_FORM_£c_off£t
 0x17

	)

220 
	#DW_FORM_ex¥loc
 0x18

	)

221 
	#DW_FORM_Êag_¥e£¡
 0x19

	)

222 
	#DW_FORM_ªf_sig8
 0x20

	)

224 
	#DW_OP_addr
 0x03

	)

225 
	#DW_OP_dîef
 0x06

	)

226 
	#DW_OP_c⁄°1u
 0x08

	)

227 
	#DW_OP_c⁄°1s
 0x09

	)

228 
	#DW_OP_c⁄°2u
 0x0a

	)

229 
	#DW_OP_c⁄°2s
 0x0b

	)

230 
	#DW_OP_c⁄°4u
 0x0c

	)

231 
	#DW_OP_c⁄°4s
 0x0d

	)

232 
	#DW_OP_c⁄°8u
 0x0e

	)

233 
	#DW_OP_c⁄°8s
 0x0f

	)

234 
	#DW_OP_c⁄°u
 0x10

	)

235 
	#DW_OP_c⁄°s
 0x11

	)

236 
	#DW_OP_dup
 0x12

	)

237 
	#DW_OP_dr›
 0x13

	)

238 
	#DW_OP_ovî
 0x14

	)

239 
	#DW_OP_pick
 0x15

	)

240 
	#DW_OP_sw≠
 0x16

	)

241 
	#DW_OP_rŸ
 0x17

	)

242 
	#DW_OP_xdîef
 0x18

	)

243 
	#DW_OP_abs
 0x19

	)

244 
	#DW_OP_™d
 0x1a

	)

245 
	#DW_OP_div
 0x1b

	)

246 
	#DW_OP_möus
 0x1c

	)

247 
	#DW_OP_mod
 0x1d

	)

248 
	#DW_OP_mul
 0x1e

	)

249 
	#DW_OP_√g
 0x1f

	)

250 
	#DW_OP_nŸ
 0x20

	)

251 
	#DW_OP_‹
 0x21

	)

252 
	#DW_OP_∂us
 0x22

	)

253 
	#DW_OP_∂us_uc⁄°
 0x23

	)

254 
	#DW_OP_shl
 0x24

	)

255 
	#DW_OP_shr
 0x25

	)

256 
	#DW_OP_shø
 0x26

	)

257 
	#DW_OP_x‹
 0x27

	)

258 
	#DW_OP_bø
 0x28

	)

259 
	#DW_OP_eq
 0x29

	)

260 
	#DW_OP_ge
 0x2a

	)

261 
	#DW_OP_gt
 0x2b

	)

262 
	#DW_OP_À
 0x2c

	)

263 
	#DW_OP_…
 0x2d

	)

264 
	#DW_OP_√
 0x2e

	)

265 
	#DW_OP_skù
 0x2f

	)

266 
	#DW_OP_lô0
 0x30

	)

267 
	#DW_OP_lô1
 0x31

	)

268 
	#DW_OP_lô2
 0x32

	)

269 
	#DW_OP_lô3
 0x33

	)

270 
	#DW_OP_lô4
 0x34

	)

271 
	#DW_OP_lô5
 0x35

	)

272 
	#DW_OP_lô6
 0x36

	)

273 
	#DW_OP_lô7
 0x37

	)

274 
	#DW_OP_lô8
 0x38

	)

275 
	#DW_OP_lô9
 0x39

	)

276 
	#DW_OP_lô10
 0x3a

	)

277 
	#DW_OP_lô11
 0x3b

	)

278 
	#DW_OP_lô12
 0x3c

	)

279 
	#DW_OP_lô13
 0x3d

	)

280 
	#DW_OP_lô14
 0x3e

	)

281 
	#DW_OP_lô15
 0x3f

	)

282 
	#DW_OP_lô16
 0x40

	)

283 
	#DW_OP_lô17
 0x41

	)

284 
	#DW_OP_lô18
 0x42

	)

285 
	#DW_OP_lô19
 0x43

	)

286 
	#DW_OP_lô20
 0x44

	)

287 
	#DW_OP_lô21
 0x45

	)

288 
	#DW_OP_lô22
 0x46

	)

289 
	#DW_OP_lô23
 0x47

	)

290 
	#DW_OP_lô24
 0x48

	)

291 
	#DW_OP_lô25
 0x49

	)

292 
	#DW_OP_lô26
 0x4a

	)

293 
	#DW_OP_lô27
 0x4b

	)

294 
	#DW_OP_lô28
 0x4c

	)

295 
	#DW_OP_lô29
 0x4d

	)

296 
	#DW_OP_lô30
 0x4e

	)

297 
	#DW_OP_lô31
 0x4f

	)

298 
	#DW_OP_ªg0
 0x50

	)

299 
	#DW_OP_ªg1
 0x51

	)

300 
	#DW_OP_ªg2
 0x52

	)

301 
	#DW_OP_ªg3
 0x53

	)

302 
	#DW_OP_ªg4
 0x54

	)

303 
	#DW_OP_ªg5
 0x55

	)

304 
	#DW_OP_ªg6
 0x56

	)

305 
	#DW_OP_ªg7
 0x57

	)

306 
	#DW_OP_ªg8
 0x58

	)

307 
	#DW_OP_ªg9
 0x59

	)

308 
	#DW_OP_ªg10
 0x5a

	)

309 
	#DW_OP_ªg11
 0x5b

	)

310 
	#DW_OP_ªg12
 0x5c

	)

311 
	#DW_OP_ªg13
 0x5d

	)

312 
	#DW_OP_ªg14
 0x5e

	)

313 
	#DW_OP_ªg15
 0x5f

	)

314 
	#DW_OP_ªg16
 0x60

	)

315 
	#DW_OP_ªg17
 0x61

	)

316 
	#DW_OP_ªg18
 0x62

	)

317 
	#DW_OP_ªg19
 0x63

	)

318 
	#DW_OP_ªg20
 0x64

	)

319 
	#DW_OP_ªg21
 0x65

	)

320 
	#DW_OP_ªg22
 0x66

	)

321 
	#DW_OP_ªg23
 0x67

	)

322 
	#DW_OP_ªg24
 0x68

	)

323 
	#DW_OP_ªg25
 0x69

	)

324 
	#DW_OP_ªg26
 0x6a

	)

325 
	#DW_OP_ªg27
 0x6b

	)

326 
	#DW_OP_ªg28
 0x6c

	)

327 
	#DW_OP_ªg29
 0x6d

	)

328 
	#DW_OP_ªg30
 0x6e

	)

329 
	#DW_OP_ªg31
 0x6f

	)

330 
	#DW_OP_bªg0
 0x70

	)

331 
	#DW_OP_bªg1
 0x71

	)

332 
	#DW_OP_bªg2
 0x72

	)

333 
	#DW_OP_bªg3
 0x73

	)

334 
	#DW_OP_bªg4
 0x74

	)

335 
	#DW_OP_bªg5
 0x75

	)

336 
	#DW_OP_bªg6
 0x76

	)

337 
	#DW_OP_bªg7
 0x77

	)

338 
	#DW_OP_bªg8
 0x78

	)

339 
	#DW_OP_bªg9
 0x79

	)

340 
	#DW_OP_bªg10
 0x7a

	)

341 
	#DW_OP_bªg11
 0x7b

	)

342 
	#DW_OP_bªg12
 0x7c

	)

343 
	#DW_OP_bªg13
 0x7d

	)

344 
	#DW_OP_bªg14
 0x7e

	)

345 
	#DW_OP_bªg15
 0x7f

	)

346 
	#DW_OP_bªg16
 0x80

	)

347 
	#DW_OP_bªg17
 0x81

	)

348 
	#DW_OP_bªg18
 0x82

	)

349 
	#DW_OP_bªg19
 0x83

	)

350 
	#DW_OP_bªg20
 0x84

	)

351 
	#DW_OP_bªg21
 0x85

	)

352 
	#DW_OP_bªg22
 0x86

	)

353 
	#DW_OP_bªg23
 0x87

	)

354 
	#DW_OP_bªg24
 0x88

	)

355 
	#DW_OP_bªg25
 0x89

	)

356 
	#DW_OP_bªg26
 0x8a

	)

357 
	#DW_OP_bªg27
 0x8b

	)

358 
	#DW_OP_bªg28
 0x8c

	)

359 
	#DW_OP_bªg29
 0x8d

	)

360 
	#DW_OP_bªg30
 0x8e

	)

361 
	#DW_OP_bªg31
 0x8f

	)

362 
	#DW_OP_ªgx
 0x90

	)

363 
	#DW_OP_fbªg
 0x91

	)

364 
	#DW_OP_bªgx
 0x92

	)

365 
	#DW_OP_põ˚
 0x93

	)

366 
	#DW_OP_dîef_size
 0x94

	)

367 
	#DW_OP_xdîef_size
 0x95

	)

368 
	#DW_OP_n›
 0x96

	)

369 
	#DW_OP_push_obje˘_addªss
 0x97

	)

370 
	#DW_OP_ˇŒ2
 0x98

	)

371 
	#DW_OP_ˇŒ4
 0x99

	)

372 
	#DW_OP_ˇŒ_ªf
 0x9a

	)

373 
	#DW_OP_f‹m_és_addªss
 0x9b

	)

374 
	#DW_OP_ˇŒ_‰ame_cÁ
 0x9c

	)

375 
	#DW_OP_bô_põ˚
 0x9d

	)

376 
	#DW_OP_im∂icô_vÆue
 0x9e

	)

377 
	#DW_OP_°ack_vÆue
 0x9f

	)

378 
	#DW_OP_lo_u£r
 0xe0

	)

379 
	#DW_OP_GNU_push_és_addªss
 0xe0

	)

380 
	#DW_OP_hi_u£r
 0xff

	)

382 
	#DW_ATE_addªss
 0x1

	)

383 
	#DW_ATE_boﬁón
 0x2

	)

384 
	#DW_ATE_com∂ex_Êﬂt
 0x3

	)

385 
	#DW_ATE_Êﬂt
 0x4

	)

386 
	#DW_ATE_sig√d
 0x5

	)

387 
	#DW_ATE_sig√d_ch¨
 0x6

	)

388 
	#DW_ATE_unsig√d
 0x7

	)

389 
	#DW_ATE_unsig√d_ch¨
 0x8

	)

390 
	#DW_ATE_imagö¨y_Êﬂt
 0x9

	)

391 
	#DW_ATE_∑cked_decimÆ
 0xa

	)

392 
	#DW_ATE_numîic_°rög
 0xb

	)

393 
	#DW_ATE_edôed
 0xc

	)

394 
	#DW_ATE_sig√d_fixed
 0xd

	)

395 
	#DW_ATE_unsig√d_fixed
 0xe

	)

396 
	#DW_ATE_decimÆ_Êﬂt
 0xf

	)

397 
	#DW_ATE_lo_u£r
 0x80

	)

398 
	#DW_ATE_hi_u£r
 0xff

	)

400 
	#DW_ACCESS_public
 0x01

	)

401 
	#DW_ACCESS_¥Ÿe˘ed
 0x02

	)

402 
	#DW_ACCESS_¥iv©e
 0x03

	)

404 
	#DW_END_deÁu…
 0x00

	)

405 
	#DW_END_big
 0x01

	)

406 
	#DW_END_lôée
 0x02

	)

407 
	#DW_END_lo_u£r
 0x40

	)

408 
	#DW_END_high_u£r
 0xff

	)

410 
	#DW_VIS_loˇl
 0x01

	)

411 
	#DW_VIS_exp‹ãd
 0x02

	)

412 
	#DW_VIS_quÆifõd
 0x03

	)

414 
	#DW_VIRTUALITY_n⁄e
 0x00

	)

415 
	#DW_VIRTUALITY_vútuÆ
 0x01

	)

416 
	#DW_VIRTUALITY_puª_vútuÆ
 0x02

	)

418 
	#DW_LANG_C89
 0x0001

	)

419 
	#DW_LANG_C
 0x0002

	)

420 
	#DW_LANG_Ada83
 0x0003

	)

421 
	#DW_LANG_C_∂us_∂us
 0x0004

	)

422 
	#DW_LANG_Cobﬁ74
 0x0005

	)

423 
	#DW_LANG_Cobﬁ85
 0x0006

	)

424 
	#DW_LANG_F‹å™77
 0x0007

	)

425 
	#DW_LANG_F‹å™90
 0x0008

	)

426 
	#DW_LANG_Pasˇl83
 0x0009

	)

427 
	#DW_LANG_Moduœ2
 0x000a

	)

428 
	#DW_LANG_Java
 0x000b

	)

429 
	#DW_LANG_C99
 0x000c

	)

430 
	#DW_LANG_Ada95
 0x000d

	)

431 
	#DW_LANG_F‹å™95
 0x000e

	)

432 
	#DW_LANG_PLI
 0x000f

	)

433 
	#DW_LANG_ObjC
 0x0010

	)

434 
	#DW_LANG_ObjC_∂us_∂us
 0x0011

	)

435 
	#DW_LANG_UPC
 0x0012

	)

436 
	#DW_LANG_D
 0x0013

	)

437 
	#DW_LANG_lo_u£r
 0x8000

	)

438 
	#DW_LANG_hi_u£r
 0xffff

	)

440 
	#DW_ID_ˇ£_£nsôive
 0x00

	)

441 
	#DW_ID_up_ˇ£
 0x01

	)

442 
	#DW_ID_down_ˇ£
 0x02

	)

443 
	#DW_ID_ˇ£_ö£nsôive
 0x03

	)

445 
	#DW_CC_n‹mÆ
 0x01

	)

446 
	#DW_CC_¥ogøm
 0x02

	)

447 
	#DW_CC_noˇŒ
 0x03

	)

448 
	#DW_CC_lo_u£r
 0x40

	)

449 
	#DW_CC_hi_u£r
 0xff

	)

451 
	#DW_INL_nŸ_ölöed
 0x00

	)

452 
	#DW_INL_ölöed
 0x01

	)

453 
	#DW_INL_de˛¨ed_nŸ_ölöed
 0x02

	)

454 
	#DW_INL_de˛¨ed_ölöed
 0x03

	)

456 
	#DW_ORD_row_maj‹
 0x00

	)

457 
	#DW_ORD_cﬁ_maj‹
 0x01

	)

459 
	#DW_DS_unsig√d
 0x01

	)

460 
	#DW_DS_Àadög_ovîpunch
 0x02

	)

461 
	#DW_DS_åaûög_ovîpunch
 0x03

	)

462 
	#DW_DS_Àadög_£∑øã
 0x04

	)

463 
	#DW_DS_åaûög_£∑øã
 0x05

	)

465 
	#DW_DSC_œbñ
 0x00

	)

466 
	#DW_DSC_ønge
 0x01

	)

468 
	#DW_LNS_c›y
 0x01

	)

469 
	#DW_LNS_adv™˚_pc
 0x02

	)

470 
	#DW_LNS_adv™˚_löe
 0x03

	)

471 
	#DW_LNS_£t_fûe
 0x04

	)

472 
	#DW_LNS_£t_cﬁumn
 0x05

	)

473 
	#DW_LNS_√g©e_°mt
 0x06

	)

474 
	#DW_LNS_£t_basic_block
 0x07

	)

475 
	#DW_LNS_c⁄°_add_pc
 0x08

	)

476 
	#DW_LNS_fixed_adv™˚_pc
 0x09

	)

477 
	#DW_LNS_£t_¥ﬁogue_íd
 0x0a

	)

478 
	#DW_LNS_£t_ïûogue_begö
 0x0b

	)

479 
	#DW_LNS_£t_iß
 0x0c

	)

481 
	#DW_LNE_íd_£quí˚
 0x01

	)

482 
	#DW_LNE_£t_addªss
 0x02

	)

483 
	#DW_LNE_deföe_fûe
 0x03

	)

484 
	#DW_LNE_lo_u£r
 0x80

	)

485 
	#DW_LNE_hi_u£r
 0xff

	)

487 
	#DW_MACINFO_deföe
 0x01

	)

488 
	#DW_MACINFO_undef
 0x02

	)

489 
	#DW_MACINFO_°¨t_fûe
 0x03

	)

490 
	#DW_MACINFO_íd_fûe
 0x04

	)

491 
	#DW_MACINFO_víd‹_ext
 0xff

	)

493 
	#DW_CFA_adv™˚_loc
 0x40

	)

494 
	#DW_CFA_off£t
 0x80

	)

495 
	#DW_CFA_ª°‹e
 0xc0

	)

496 
	#DW_CFA_exãnded
 0

	)

498 
	#DW_CFA_n›
 0x00

	)

499 
	#DW_CFA_£t_loc
 0x01

	)

500 
	#DW_CFA_adv™˚_loc1
 0x02

	)

501 
	#DW_CFA_adv™˚_loc2
 0x03

	)

502 
	#DW_CFA_adv™˚_loc4
 0x04

	)

503 
	#DW_CFA_off£t_exãnded
 0x05

	)

504 
	#DW_CFA_ª°‹e_exãnded
 0x06

	)

505 
	#DW_CFA_undeföed
 0x07

	)

506 
	#DW_CFA_ßme_vÆue
 0x08

	)

507 
	#DW_CFA_ªgi°î
 0x09

	)

508 
	#DW_CFA_ªmembî_°©e
 0x0a

	)

509 
	#DW_CFA_ª°‹e_°©e
 0x0b

	)

510 
	#DW_CFA_def_cÁ
 0x0c

	)

511 
	#DW_CFA_def_cÁ_ªgi°î
 0x0d

	)

512 
	#DW_CFA_def_cÁ_off£t
 0x0e

	)

513 
	#DW_CFA_def_cÁ_ex¥essi⁄
 0x0f

	)

514 
	#DW_CFA_ex¥essi⁄
 0x10

	)

515 
	#DW_CFA_off£t_exãnded_sf
 0x11

	)

516 
	#DW_CFA_def_cÁ_sf
 0x12

	)

517 
	#DW_CFA_def_cÁ_off£t_sf
 0x13

	)

518 
	#DW_CFA_vÆ_off£t
 0x14

	)

519 
	#DW_CFA_vÆ_off£t_sf
 0x15

	)

520 
	#DW_CFA_vÆ_ex¥essi⁄
 0x16

	)

521 
	#DW_CFA_lo_u£r
 0x1c

	)

522 
	#DW_CFA_high_u£r
 0x3f

	)

528 
	#DW_EH_PE_ab•å
 0x00

	)

529 
	#DW_EH_PE_uÀb128
 0x01

	)

530 
	#DW_EH_PE_ud©a2
 0x02

	)

531 
	#DW_EH_PE_ud©a4
 0x03

	)

532 
	#DW_EH_PE_ud©a8
 0x04

	)

533 
	#DW_EH_PE_¶eb128
 0x09

	)

534 
	#DW_EH_PE_sd©a2
 0x0a

	)

535 
	#DW_EH_PE_sd©a4
 0x0b

	)

536 
	#DW_EH_PE_sd©a8
 0x0c

	)

537 
	#DW_EH_PE_p¸ñ
 0x10

	)

538 
	#DW_EH_PE_ãxåñ
 0x20

	)

539 
	#DW_EH_PE_d©¨ñ
 0x30

	)

540 
	#DW_EH_PE_fun¸ñ
 0x40

	)

541 
	#DW_EH_PE_Æig√d
 0x50

	)

542 
	#DW_EH_PE_omô
 0xff

	)

	@dwarf_elf.h

1 #i‚de‡
ELF_H


2 
	#ELF_H


	)

4 
	#ELF_MAGIC
 0x464C457FU

	)

6 
	#EI_NIDENT
 16

	)

7 
	#EI_DATA
 5

	)

9 
	#ELFDATANONE
 0

	)

10 
	#ELFDATA2LSB
 1

	)

11 
	#ELFDATA2MSB
 2

	)

13 
	#ELFCLASSNONE
 0

	)

14 
	#ELFCLASS32
 1

	)

15 
	#ELFCLASS64
 2

	)

17 *
ñf_ba£_±r
;

19 
	#X86_64
 1

	)

21 #ifde‡
X86_64


23 
	s_Elf64
 {

26 
	me_idít
[16];

27 
uöt16_t
 
	me_ty≥
;

28 
uöt16_t
 
	me_machöe
;

29 
uöt32_t
 
	me_vîsi⁄
;

30 
uöt64_t
 
	me_íåy
;

31 
uöt64_t
 
	me_phoff
;

32 
uöt64_t
 
	me_shoff
;

33 
uöt32_t
 
	me_Êags
;

34 
uöt16_t
 
	me_ehsize
;

35 
uöt16_t
 
	me_phítsize
;

36 
uöt16_t
 
	me_phnum
;

37 
uöt16_t
 
	me_shítsize
;

38 
uöt16_t
 
	me_shnum
;

39 
uöt16_t
 
	me_sh°∫dx
;

40 }
	tElf64
;

42 
	s_Proghdr64
 {

43 
uöt32_t
 
	mp_ty≥
;

44 
uöt32_t
 
	mp_Êags
;

45 
uöt64_t
 
	mp_off£t
;

46 
uöt64_t
 
	mp_va
;

47 
uöt64_t
 
	mp_∑
;

48 
uöt64_t
 
	mp_fûesz
;

49 
uöt64_t
 
	mp_memsz
;

50 
uöt64_t
 
	mp_Æign
;

51 }
	tProghdr64
;

54 
uöt32_t
 
	msh_«me
;

55 
uöt32_t
 
	msh_ty≥
;

56 
uöt64_t
 
	msh_Êags
;

57 
uöt64_t
 
	msh_addr
;

58 
uöt64_t
 
	msh_off£t
;

59 
uöt64_t
 
	msh_size
;

60 
uöt32_t
 
	msh_lök
;

61 
uöt32_t
 
	msh_öfo
;

62 
uöt64_t
 
	msh_addølign
;

63 
uöt64_t
 
	msh_ítsize
;

64 } 
	tSe˘hdr64
;

66 
	#Elf
 
Elf64


	)

67 
	#Proghdr
 
Proghdr64


	)

68 
	#Se˘hdr
 
Se˘hdr64


	)

72 
	s_Elf32
 {

73 
	me_idít
[16];

74 
uöt16_t
 
	me_ty≥
;

75 
uöt16_t
 
	me_machöe
;

76 
uöt32_t
 
	me_vîsi⁄
;

77 
uöt32_t
 
	me_íåy
;

78 
uöt32_t
 
	me_phoff
;

79 
uöt32_t
 
	me_shoff
;

80 
uöt32_t
 
	me_Êags
;

81 
uöt16_t
 
	me_ehsize
;

82 
uöt16_t
 
	me_phítsize
;

83 
uöt16_t
 
	me_phnum
;

84 
uöt16_t
 
	me_shítsize
;

85 
uöt16_t
 
	me_shnum
;

86 
uöt16_t
 
	me_sh°∫dx
;

87 }
	tElf32
;

89 
	sProghdr
 {

90 
uöt32_t
 
	mp_ty≥
;

91 
uöt32_t
 
	mp_Êags
;

92 
uöt32_t
 
	mp_off£t
;

93 
uöt32_t
 
	mp_va
;

94 
uöt32_t
 
	mp_∑
;

95 
uöt32_t
 
	mp_fûesz
;

96 
uöt32_t
 
	mp_memsz
;

97 
uöt32_t
 
	mp_Æign
;

98 }
	tProghdr32
;

100 
	sSe˘hdr
 {

101 
uöt32_t
 
	msh_«me
;

102 
uöt32_t
 
	msh_ty≥
;

103 
uöt32_t
 
	msh_Êags
;

104 
uöt32_t
 
	msh_addr
;

105 
uöt32_t
 
	msh_off£t
;

106 
uöt32_t
 
	msh_size
;

107 
uöt32_t
 
	msh_lök
;

108 
uöt32_t
 
	msh_öfo
;

109 
uöt32_t
 
	msh_addølign
;

110 
uöt32_t
 
	msh_ítsize
;

111 }
	tSe˘hdr32
;

113 
	#Elf
 
Elf32


	)

114 
	#Proghdr
 
Proghdr32


	)

115 
	#Se˘hdr
 
Se˘hdr32


	)

120 
	#ELF_PROG_LOAD
 1

	)

123 
	#ELF_PROG_FLAG_EXEC
 1

	)

124 
	#ELF_PROG_FLAG_WRITE
 2

	)

125 
	#ELF_PROG_FLAG_READ
 4

	)

128 
	#ELF_SHT_NULL
 0

	)

129 
	#ELF_SHT_PROGBITS
 1

	)

130 
	#ELF_SHT_SYMTAB
 2

	)

131 
	#ELF_SHT_STRTAB
 3

	)

134 
	#ELF_SHN_UNDEF
 0

	)

	@dwarf_error.h

1 #i‚de‡
DWARF_ERROR_H_


2 
	#DWARF_ERROR_H_


	)

4 
	#DW_DLV_NO_ENTRY
 -1

	)

5 
	#DW_DLV_OK
 0

	)

6 
	#DW_DLV_ERROR
 1

	)

9 
	mDW_DLE_NONE
,

10 
	mDW_DLE_ERROR
,

11 
	mDW_DLE_ARGUMENT
,

12 
	mDW_DLE_DEBUG_INFO_NULL
,

13 
	mDW_DLE_NO_ENTRY
,

14 
	mDW_DLE_MEMORY
,

15 
	mDW_DLE_ELF
,

16 
	mDW_DLE_CU_LENGTH_ERROR
,

17 
	mDW_DLE_VERSION_STAMP_ERROR
,

18 
	mDW_DLE_DEBUG_ABBREV_NULL
,

19 
	mDW_DLE_DIE_NO_CU_CONTEXT
,

20 
	mDW_DLE_LOC_EXPR_BAD
,

21 
	mDW_DLE_EXPR_LENGTH_BAD
,

22 
	mDW_DLE_DEBUG_LOC_SECTION_SHORT
,

23 
	mDW_DLE_ATTR_FORM_BAD
,

24 
	mDW_DLE_DEBUG_LINE_LENGTH_BAD
,

25 
	mDW_DLE_LINE_FILE_NUM_BAD
,

26 
	mDW_DLE_DIR_INDEX_BAD
,

27 
	mDW_DLE_DEBUG_FRAME_LENGTH_BAD
,

28 
	mDW_DLE_NO_CIE_FOR_FDE
,

29 
	mDW_DLE_FRAME_AUGMENTATION_UNKNOWN
,

30 
	mDW_DLE_FRAME_INSTR_EXEC_ERROR
,

31 
	mDW_DLE_FRAME_VERSION_BAD
,

32 
	mDW_DLE_FRAME_TABLE_COL_BAD
,

33 
	mDW_DLE_DF_REG_NUM_TOO_HIGH
,

34 
	mDW_DLE_PC_NOT_IN_FDE_RANGE
,

35 
	mDW_DLE_ARANGE_OFFSET_BAD
,

36 
	mDW_DLE_DEBUG_MACRO_INCONSISTENT
,

37 
	mDW_DLE_ELF_SECT_ERR
,

38 
	mDW_DLE_NUM


41 
	#DWARF_SET_ERROR
(
x
, 
y
 ,
z
Ë{ }

	)

	@dwarf_lineno.h

1 #i‚de‡
DWARF_LINENO_H


3 
Dw¨f_Aâribuã
 *
_dw¨f_©å_föd
(
Dw¨f_Dõ
 *, 
uöt16_t
);

7 
_dw¨f_löío_add_fûe
(
Dw¨f_LöeInfo
, 
uöt8_t
 **, c⁄° *, 
Dw¨f_Eº‹
 *, 
Dw¨f_Debug
);

10 
_dw¨f_löío_run_¥ogøm
(
Dw¨f_CU
 *
cu
, 
Dw¨f_LöeInfo
 
li
, 
uöt8_t
 *
p
,

11 
uöt8_t
 *
≥
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
);

14 
_dw¨f_löío_add_fûe
(
Dw¨f_LöeInfo
 
li
, 
uöt8_t
 **
p
, c⁄° *
compdú
,

15 
Dw¨f_Eº‹
 *
îr‹
, 
Dw¨f_Debug
 
dbg
);

18 
_dw¨f_löío_öô
(
Dw¨f_Dõ
 *
dõ
, 
uöt64_t
 
off£t
, 
Dw¨f_LöeInfo
 
löfo
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
);

	@elf_rw.c

1 
	~<öc/x86.h
>

2 
	~<öc/°dio.h
>

3 
	~<öc/as£π.h
>

4 
	~<öc/memœyout.h
>

5 
	~<öc/°rög.h
>

6 
	~"dw¨f_ñf.h
"

7 
	~"dw¨f.h
"

9 
	~<kîn/pm≠.h
>

11 
	#SECTSIZE
 512

	)

12 
	#OFFSET_CORRECT
(
x
Ë(x - 
	`ROUNDDOWN
(x, 
SECTSIZE
))

	)

13 
	#KELFHDR
 (0x10000+
KERNBASE
)

	)

16 
	mDEBUG_INFO
,

17 
	mDEBUG_ABBREV
,

18 
	mDEBUG_FRAME
,

19 
	mDEBUG_LINE
,

20 
	mDEBUG_STR
,

21 
	mNDEBUG_SECT
,

24 
Dw¨f_Se˘i⁄
 
	g£˘i⁄_öfo
[
NDEBUG_SECT
] = {

25 {.
ds_«me
=".debug_öfo", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

26 {.
	gds_«me
=".debug_abbªv", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

27 {.
	gds_«me
=".eh_‰ame", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

28 {.
	gds_«me
=".debug_löe", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

29 {.
	gds_«me
=".debug_°r", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

32 
ªad£˘
(*, 
uöt64_t
);

33 
ªad£g
(
uöt64_t
, uint64_t, uint64_t, uint64_t*);

35 
uöçå_t


36 
ªad_£˘i⁄_hódîs
(
uöçå_t
, uintptr_t);

38 
Dw¨f_Se˘i⁄
 *

39 
	$_dw¨f_föd_£˘i⁄
(c⁄° *
«me
)

41 
Dw¨f_Se˘i⁄
 *
ªt
=
NULL
;

42 
i
;

44 
i
=0; i < 
NDEBUG_SECT
; i++) {

45 if(!
	`°rcmp
(
£˘i⁄_öfo
[
i
].
ds_«me
, 
«me
)) {

46 
ªt
 = (
£˘i⁄_öfo
 + 
i
);

51  
ªt
;

52 
	}
}

54 
	$föd_debug_£˘i⁄s
(
uöçå_t
 
ñf
)

56 
Elf
 *
ehdr
 = (El‡*)
ñf
;

57 
uöçå_t
 
debug_addªss
 = 
USTABDATA
;

58 
Se˘hdr
 *
sh
 = (Se˘hd∏*)(((
uöt8_t
 *)
ehdr
 +Éhdr->
e_shoff
));

59 
Se˘hdr
 *
sh°r_èb
 = 
sh
 + 
ehdr
->
e_sh°∫dx
;

60 
Se˘hdr
* 
esh
 = 
sh
 + 
ehdr
->
e_shnum
;

61 ;
sh
 < 
esh
; sh++) {

62 * 
«me
 = (*)((
uöt8_t
*)
ñf
 + 
sh°r_èb
->
sh_off£t
Ë+ 
sh
->
sh_«me
;

63 if(!
	`°rcmp
(
«me
, ".debug_info")) {

64 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_d©a
 = (
uöt8_t
*)
debug_addªss
;

65 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_addr
 = 
debug_addªss
;

66 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_size
 = 
sh
->
sh_size
;

67 
debug_addªss
 +
sh
->
sh_size
;

68 } if(!
	`°rcmp
(
«me
, ".debug_abbrev")) {

69 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_d©a
 = (
uöt8_t
*)
debug_addªss
;

70 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_addr
 = 
debug_addªss
;

71 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_size
 = 
sh
->
sh_size
;

72 
debug_addªss
 +
sh
->
sh_size
;

73 } if(!
	`°rcmp
(
«me
, ".debug_line")){

74 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_d©a
 = (
uöt8_t
*)
debug_addªss
;

75 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_addr
 = 
debug_addªss
;

76 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_size
 = 
sh
->
sh_size
;

77 
debug_addªss
 +
sh
->
sh_size
;

78 } if(!
	`°rcmp
(
«me
, ".eh_frame")){

79 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_d©a
 = (
uöt8_t
*)
sh
->
sh_addr
;

80 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_addr
 = 
sh
->
sh_addr
;

81 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_size
 = 
sh
->
sh_size
;

82 
debug_addªss
 +
sh
->
sh_size
;

83 } if(!
	`°rcmp
(
«me
, ".debug_str")) {

84 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_d©a
 = (
uöt8_t
*)
debug_addªss
;

85 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_addr
 = 
debug_addªss
;

86 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_size
 = 
sh
->
sh_size
;

87 
debug_addªss
 +
sh
->
sh_size
;

91 
	}
}

93 
uöt64_t


94 
	$ªad_£˘i⁄_hódîs
(
uöçå_t
 
ñfhdr
, uöçå_à
to_va
)

96 
Se˘hdr
* 
£˘hdr_±r
[20] = {0};

97 * 
kvba£
 = 
	`ROUNDUP
((*)
to_va
, 
SECTSIZE
);

98 
uöt64_t
 
kvoff£t
 = 0;

99 *
‹ig_£˘hdr
 = (*)
kvba£
;

100 * 
£˘hdr
 = 
NULL
;

101 
uöt64_t
 
off£t
;

102 if(
ñfhdr
 =
KELFHDR
)

103 
off£t
 = ((
Elf
*)
ñfhdr
)->
e_shoff
;

105 
off£t
 = ((
Elf
*)
ñfhdr
)->
e_shoff
 + (ñfhd∏- 
KERNBASE
);

107 
numSe˘i⁄Hódîs
 = ((
Elf
*)
ñfhdr
)->
e_shnum
;

108 
sizeSe˘i⁄s
 = ((
Elf
*)
ñfhdr
)->
e_shítsize
;

109 *
«mëab
;

110 
i
;

111 
uöt64_t
 
ãmp
;

112 *
«me
;

114 
Elf
 *
ehdr
 = (El‡*)
ñfhdr
;

115 
Se˘hdr
 *
£c_«me
;

117 
	`ªad£g
((
uöt64_t
)
‹ig_£˘hdr
 , 
numSe˘i⁄Hódîs
 * 
sizeSe˘i⁄s
,

118 
off£t
, &
kvoff£t
);

119 
£˘hdr
 = (*)
‹ig_£˘hdr
 + (
off£t
 - 
	`ROUNDDOWN
(off£t, 
SECTSIZE
));

120 
i
 = 0; i < 
numSe˘i⁄Hódîs
; i++)

122 
£˘hdr_±r
[
i
] = (
Se˘hdr
*)(
£˘hdr
) + i;

125 
£c_«me
 = 
£˘hdr_±r
[
ehdr
->
e_sh°∫dx
];

126 
ãmp
 = 
kvoff£t
;

127 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£c_«me
->
sh_size
,

128 
£c_«me
->
sh_off£t
, &
kvoff£t
);

129 
«mëab
 = (*)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£c_«me
->
sh_off£t
);

131 
i
 = 0; i < 
numSe˘i⁄Hódîs
; i++)

133 
«me
 = (*)(
«mëab
 + 
£˘hdr_±r
[
i
]->
sh_«me
);

134 
	`as£π
(
kvoff£t
 % 
SECTSIZE
 == 0);

135 
ãmp
 = 
kvoff£t
;

136 #ifde‡
DWARF_DEBUG


137 
	`˝rötf
("Se˘Name: %s\n", 
«me
);

139 if(!
	`°rcmp
(
«me
, ".debug_info"))

141 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£˘hdr_±r
[
i
]->
sh_size
,

142 
£˘hdr_±r
[
i
]->
sh_off£t
, &
kvoff£t
);

143 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_d©a
 = (
uöt8_t
 *)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£˘hdr_±r
[
i
]->
sh_off£t
);

144 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_INFO].
ds_d©a
;

145 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

147 if(!
	`°rcmp
(
«me
, ".debug_abbrev"))

149 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£˘hdr_±r
[
i
]->
sh_size
,

150 
£˘hdr_±r
[
i
]->
sh_off£t
, &
kvoff£t
);

151 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_d©a
 = (
uöt8_t
 *)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£˘hdr_±r
[
i
]->
sh_off£t
);

152 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_ABBREV].
ds_d©a
;

153 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

155 if(!
	`°rcmp
(
«me
, ".debug_line"))

157 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£˘hdr_±r
[
i
]->
sh_size
,

158 
£˘hdr_±r
[
i
]->
sh_off£t
, &
kvoff£t
);

159 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_d©a
 = (
uöt8_t
 *)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£˘hdr_±r
[
i
]->
sh_off£t
);

160 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_LINE].
ds_d©a
;

161 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

163 if(!
	`°rcmp
(
«me
, ".eh_frame"))

165 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_d©a
 = (
uöt8_t
 *)
£˘hdr_±r
[
i
]->
sh_addr
;

166 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_FRAME].
ds_d©a
;

167 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

169 if(!
	`°rcmp
(
«me
, ".debug_str"))

171 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£˘hdr_±r
[
i
]->
sh_size
,

172 
£˘hdr_±r
[
i
]->
sh_off£t
, &
kvoff£t
);

173 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_d©a
 = (
uöt8_t
 *)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£˘hdr_±r
[
i
]->
sh_off£t
);

174 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_STR].
ds_d©a
;

175 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

179  ((
uöçå_t
)
kvba£
 + 
kvoff£t
);

180 
	}
}

185 
	$ªad£g
(
uöt64_t
 
∑
, uöt64_à
cou¡
, uöt64_à
off£t
, uöt64_t* 
kvoff£t
)

187 
uöt64_t
 
íd_∑
;

188 
uöt64_t
 
‹goff
 = 
off£t
;

190 
íd_∑
 = 
∑
 + 
cou¡
;

192 
	`as£π
(
∑
 % 
SECTSIZE
 == 0);

194 
∑
 &~(
SECTSIZE
 - 1);

197 
off£t
 = (off£à/ 
SECTSIZE
) + 1;

202 
∑
 < 
íd_∑
) {

203 
	`ªad£˘
((
uöt8_t
*Ë
∑
, 
off£t
);

204 
∑
 +
SECTSIZE
;

205 *
kvoff£t
 +
SECTSIZE
;

206 
off£t
++;

209 if(((
‹goff
 % 
SECTSIZE
Ë+ 
cou¡
) > SECTSIZE)

211 
	`ªad£˘
((
uöt8_t
*Ë
∑
, 
off£t
);

212 *
kvoff£t
 +
SECTSIZE
;

214 
	`as£π
(*
kvoff£t
 % 
SECTSIZE
 == 0);

215 
	}
}

218 
	$waôdisk
()

221 (
	`öb
(0x1F7) & 0xC0) != 0x40)

223 
	}
}

226 
	$ªad£˘
(*
d°
, 
uöt64_t
 
off£t
)

229 
	`waôdisk
();

231 
	`outb
(0x1F2, 1);

232 
	`outb
(0x1F3, 
off£t
);

233 
	`outb
(0x1F4, 
off£t
 >> 8);

234 
	`outb
(0x1F5, 
off£t
 >> 16);

235 
	`outb
(0x1F6, (
off£t
 >> 24) | 0xE0);

236 
	`outb
(0x1F7, 0x20);

239 
	`waôdisk
();

242 
	`ö¶
(0x1F0, 
d°
, 
SECTSIZE
/4);

243 
	}
}

	@env copy.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/ñf.h
>

10 
	~<kîn/ív.h
>

11 
	~<kîn/pm≠.h
>

12 
	~<kîn/å≠.h
>

13 
	~<kîn/m⁄ô‹.h
>

14 
	~<kîn/ma¸o.h
>

15 
	~<kîn/dw¨f_≠i.h
>

17 
Env
 *
	gívs
 = 
NULL
;

18 
Env
 *
	gcuªnv
 = 
NULL
;

19 
Env
 *
	gív_‰ì_li°
;

22 
	#ENVGENSHIFT
 12

23 

	)

39 
Segdesc
 
	ggdt
[] =

43 
SEG_NULL
,

46 [
GD_KT
 >> 3] = 
SEG64
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff,0),

49 [
GD_KD
 >> 3] = 
SEG64
(
STA_W
, 0x0, 0xffffffff,0),

52 [
GD_UT
 >> 3] = 
SEG64
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff,3),

55 [
GD_UD
 >> 3] = 
SEG64
(
STA_W
, 0x0, 0xffffffff,3),

58 [
GD_TSS0
 >> 3] = 
SEG_NULL
,

60 [6] = 
SEG_NULL


63 
P£udodesc
 
	ggdt_pd
 = {

64 (
gdt
) - 1, () gdt

77 
	$ívid2ív
(
ívid_t
 
ívid
, 
Env
 **
ív_°‹e
, 
boﬁ
 
check≥rm
)

79 
Env
 *
e
;

82 i‡(
ívid
 == 0) {

83 *
ív_°‹e
 = 
cuªnv
;

92 
e
 = &
ívs
[
	`ENVX
(
ívid
)];

93 i‡(
e
->
ív_°©us
 =
ENV_FREE
 ||É->
ív_id
 !
ívid
) {

94 *
ív_°‹e
 = 0;

95  -
E_BAD_ENV
;

103 i‡(
check≥rm
 && 
e
 !
cuªnv
 &&É->
ív_∑ª¡_id
 !cuªnv->
ív_id
) {

104 *
ív_°‹e
 = 0;

105  -
E_BAD_ENV
;

108 *
ív_°‹e
 = 
e
;

110 
	}
}

119 
	$ív_öô
()

124 
Env
 *
œ°
;

125 
œ°
 = 
ív_‰ì_li°
 = &
ívs
[0];

126 
ívs
[0].
ív_id
 = 0;

127 
i
 = 1; i < 
NENV
; i++) {

128 
ívs
[
i
].
ív_°©us
 = 
ENV_FREE
;

129 
ívs
[
i
].
ív_id
 = 0;

130 
œ°
->
ív_lök
 = &
ívs
[
i
];

131 
œ°
 = &
ívs
[
i
];

135 
	`ív_öô_≥r˝u
();

136 
	}
}

140 
	$ív_öô_≥r˝u
()

142 
	`lgdt
(&
gdt_pd
);

146 
asm
 vﬁ©ûe("movw %%ax,%%gs" :: "a" (
GD_UD
|3));

147 
asm
 vﬁ©ûe("movw %%ax,%%fs" :: "a" (
GD_UD
|3));

150 
asm
 vﬁ©ûe("movw %%ax,%%es" :: "a" (
GD_KD
));

151 
asm
 vﬁ©ûe("movw %%ax,%%ds" :: "a" (
GD_KD
));

152 
asm
 vﬁ©ûe("movw %%ax,%%ss" :: "a" (
GD_KD
));

154 
asm
 vﬁ©ûe("pushq %%rbx \¿\àmovab†$1f,%%øx \¿\àpushq %%øx \n\àÃëq \¿1:\n" :: "b" (
GD_KT
):"cc","memory");

157 
	`Œdt
(0);

158 
	}
}

171 
	$ív_£tup_vm
(
Env
 *
e
)

173 
r
;

174 
i
;

175 
PageInfo
 *
p
 = 
NULL
;

178 i‡(!(
p
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)))

179  -
E_NO_MEM
;

200 
p
->
µ_ªf
++;

203 
e
->
ív_¸3
 = 
	`∑ge2∑
(
p
);

204 
e
->
ív_pml4e
 = 
	`∑ge2kva
(
p
);

206 
i
 = 
	`PML4
(
UTOP
); i < 
NPMLENTRIES
; i++) {

212 
e
->
ív_pml4e
[
i
] = 
boŸ_pml4e
[i];

220 
e
->
ív_pml4e
[
	`PML4
(
UVPT
)] =É->
ív_¸3
 | 
PTE_P
 | 
PTE_U
;

223 
	}
}

235 
	$ív_Æloc
(
Env
 **
√wív_°‹e
, 
ívid_t
 
∑ª¡_id
)

237 
öt32_t
 
gíî©i⁄
;

238 
r
;

239 
Env
 *
e
;

241 i‡(!(
e
 = 
ív_‰ì_li°
))

242  -
E_NO_FREE_ENV
;

245 i‡((
r
 = 
	`ív_£tup_vm
(
e
)) < 0)

246  
r
;

249 
gíî©i⁄
 = (
e
->
ív_id
 + (1 << 
ENVGENSHIFT
)Ë& ~(
NENV
 - 1);

250 i‡(
gíî©i⁄
 <= 0)

251 
gíî©i⁄
 = 1 << 
ENVGENSHIFT
;

252 
e
->
ív_id
 = 
gíî©i⁄
 | (ê- 
ívs
);

255 
e
->
ív_∑ª¡_id
 = 
∑ª¡_id
;

256 
e
->
ív_ty≥
 = 
ENV_TYPE_USER
;

257 
e
->
ív_°©us
 = 
ENV_RUNNABLE
;

258 
e
->
ív_runs
 = 0;

264 
	`mem£t
(&
e
->
ív_tf
, 0, (e->env_tf));

274 
e
->
ív_tf
.
tf_ds
 = 
GD_UD
 | 3;

275 
e
->
ív_tf
.
tf_es
 = 
GD_UD
 | 3;

276 
e
->
ív_tf
.
tf_ss
 = 
GD_UD
 | 3;

277 
e
->
ív_tf
.
tf_r•
 = 
USTACKTOP
;

278 
e
->
ív_tf
.
tf_cs
 = 
GD_UT
 | 3;

282 
ív_‰ì_li°
 = 
e
->
ív_lök
;

283 *
√wív_°‹e
 = 
e
;

285 
	`˝rötf
("[%08x]ÇewÉnv %08x\n", 
cuªnv
 ? cuªnv->
ív_id
 : 0, 
e
->env_id);

287 
	}
}

297 
	$ªgi⁄_Æloc
(
Env
 *
e
, *
va
, 
size_t
 
Àn
)

307 
uöt64_t
 
rounded_Àn
 = 
	`ROUNDUP
(
va
 + 
Àn
, 
PGSIZE
Ë- 
	`ROUNDDOWN
(va, PGSIZE);

308 
≈ages
 = 
rounded_Àn
 / 
PGSIZE
;

310 
i
 = 0; i < 
≈ages
; i++) {

311 
PageInfo
 * 
µ
 = 
	`∑ge_Æloc
(0);

312 i‡(!
µ
) {

313 
	`∑nic
("page_alloc() failed.\n");

315 
µ
->
µ_ªf
++;

316 
ªt
 = 
	`∑ge_ö£π
(
e
->
ív_pml4e
, 
µ
, 
	`ROUNDDOWN
(
va
, 
PGSIZE
), 
PTE_U
 | 
PTE_W
);

317 i‡(
ªt
 < 0) {

318 
	`∑nic
("ªgi⁄_Æloc: %e", 
ªt
);

323 
	}
}

348 
	$lﬂd_icode
(
Env
 *
e
, 
uöt8_t
 *
bö¨y
)

382 
e
->
ñf
 = 
bö¨y
;

384 
Elf
 * 
ñfhd
 = (El‡*Ë
bö¨y
;

385 
Proghdr
 *
ph
, *
ïh
;

387 
ph
 = (
Proghdr
 *Ë(
bö¨y
 + 
ñfhd
->
e_phoff
);

388 
ïh
 = 
ph
 + 
ñfhd
->
e_phnum
;

390 
	`l¸3
(
e
->
ív_¸3
);

391 
	`ªgi⁄_Æloc
(
e
, (*)(
USTACKTOP
 - 
PGSIZE
), PGSIZE);

392 ; 
ph
 < 
ïh
;Öh++) {

393 i‡(
ph
->
p_ty≥
 =
ELF_PROG_LOAD
) {

396 
	`ªgi⁄_Æloc
(
e
, (*)
ph
->
p_va
,Öh->
p_memsz
);

401 
	`memmove
((*Ë
ph
->
p_va
, (*Ë
bö¨y
 +Öh->
p_off£t
,Öh->
p_fûesz
);

406 
	`mem£t
((*Ë
ph
->
p_va
 +Öh->
p_fûesz
, 0,Öh->
p_memsz
 -Öh->p_filesz);

410 
e
->
ív_tf
.
tf_rù
 = 
ñfhd
->
e_íåy
;

415 
	`ªgi⁄_Æloc
(
e
,(*Ë(
USTACKTOP
 - 
PGSIZE
) , PGSIZE);

417 
e
->
ñf
 = 
bö¨y
;

419 
	}
}

429 
	$ív_¸óã
(
uöt8_t
 *
bö¨y
, 
EnvTy≥
 
ty≥
)

433 
Env
 *
e
;

435 
ªt
 = 
	`ív_Æloc
(&
e
, 0);

436 i‡(
ªt
 < 0) {

437 
	`∑nic
("ív_Æloc: %e", 
ªt
);

439 
e
->
ív_ty≥
 = 
ty≥
;

440 
	`lﬂd_icode
(
e
, 
bö¨y
);

442 
	}
}

448 
	$ív_‰ì
(
Env
 *
e
)

450 
±e_t
 *
±
;

451 
uöt64_t
 
pdío
, 
±ío
;

452 
phyßddr_t
 
∑
;

458 i‡(
e
 =
cuªnv
)

459 
	`l¸3
(
boŸ_¸3
);

462 
	`˝rötf
("[%08x] fªêív %08x\n", 
cuªnv
 ? cuªnv->
ív_id
 : 0, 
e
->env_id);

465 i‡(
e
->
ív_pml4e
[0] & 
PTE_P
) {

466 
pd≥_t
 *
ív_pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
e
->
ív_pml4e
[0]));

467 
pdío_limô
;

468 
uöt64_t
 
pd≥_ödex
;

471 
pd≥_ödex
=0;pdpe_index<=3;pdpe_index++){

472 if(!(
ív_pd≥
[
pd≥_ödex
] & 
PTE_P
))

474 
pde_t
 *
ív_pgdú
 = 
	`KADDR
(
	`PTE_ADDR
(
ív_pd≥
[
pd≥_ödex
]));

475 
pdío_limô
 = 
pd≥_ödex
==3?
	`PDX
(
UTOP
):PDX(0xFFFFFFFF);

476 
	`°©ic_as£π
(
UTOP
 % 
PTSIZE
 == 0);

477 
pdío
 = 0;Ödíÿ< 
pdío_limô
;Ödeno++) {

480 i‡(!(
ív_pgdú
[
pdío
] & 
PTE_P
))

483 
∑
 = 
	`PTE_ADDR
(
ív_pgdú
[
pdío
]);

484 
±
 = (
±e_t
*Ë
	`KADDR
(
∑
);

487 
±ío
 = 0;Öãnÿ< 
	`PTX
(~0);Öteno++) {

488 i‡(
±
[
±ío
] & 
PTE_P
){

489 
	`∑ge_ªmove
(
e
->
ív_pml4e
, 
	`PGADDR
((
uöt64_t
)0,
pd≥_ödex
,
pdío
, 
±ío
, 0));

494 
ív_pgdú
[
pdío
] = 0;

495 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

498 
∑
 = 
	`PTE_ADDR
(
ív_pd≥
[
pd≥_ödex
]);

499 
ív_pd≥
[
pd≥_ödex
] = 0;

500 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

503 
	`∑ge_de¸ef
(
	`∑2∑ge
(
	`PTE_ADDR
(
e
->
ív_pml4e
[0])));

506 
e
->
ív_pml4e
[0] = 0;

507 
∑
 = 
e
->
ív_¸3
;

508 
e
->
ív_pml4e
 = 0;

509 
e
->
ív_¸3
 = 0;

510 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

513 
e
->
ív_°©us
 = 
ENV_FREE
;

514 
e
->
ív_lök
 = 
ív_‰ì_li°
;

515 
ív_‰ì_li°
 = 
e
;

516 
	}
}

522 
	$ív_de°roy
(
Env
 *
e
)

525 
	`ív_‰ì
(
e
);

526 
	`˝rötf
("DestroyedÅhe onlyÉnvironment -Çothing moreÅo do!\n");

528 
	`m⁄ô‹
(
NULL
);

529 
	}
}

539 
	$ív_p›_tf
(
Tøp‰ame
 *
tf
)

541 
__asm
 
	`__vﬁ©ûe
("movq %0,%%rsp\n"

542 
POPA


548 : : "g" (
tf
) : "memory");

549 
	`∑nic
("iret failed");

550 
	}
}

559 
	$ív_run
(
Env
 *
e
)

584 i‡(
cuªnv
 && cuªnv->
ív_°©us
 =
ENV_RUNNING
) {

585 
cuªnv
->
ív_°©us
 = 
ENV_RUNNABLE
;

589 
cuªnv
 = 
e
;

592 
cuªnv
->
ív_°©us
 = 
ENV_RUNNING
;

594 
cuªnv
->
ív_runs
++;

597 
	`l¸3
(
cuªnv
->
ív_¸3
);

602 
	`ív_p›_tf
(&(
cuªnv
->
ív_tf
));

605 
	}
}

	@env.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/ñf.h
>

10 
	~<kîn/ív.h
>

11 
	~<kîn/pm≠.h
>

12 
	~<kîn/å≠.h
>

13 
	~<kîn/m⁄ô‹.h
>

14 
	~<kîn/ma¸o.h
>

15 
	~<kîn/dw¨f_≠i.h
>

16 
	~<kîn/sched.h
>

17 
	~<kîn/˝u.h
>

18 
	~<kîn/•ölock.h
>

20 
Env
 *
	gívs
 = 
NULL
;

21 
Env
 *
	gív_‰ì_li°
;

24 
	#ENVGENSHIFT
 12

25 

	)

41 
Segdesc
 
	ggdt
[2*
NCPU
 + 5] =

45 
SEG_NULL
,

48 [
GD_KT
 >> 3] = 
SEG64
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff,0),

51 [
GD_KD
 >> 3] = 
SEG64
(
STA_W
, 0x0, 0xffffffff,0),

54 [
GD_UT
 >> 3] = 
SEG64
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff,3),

57 [
GD_UD
 >> 3] = 
SEG64
(
STA_W
, 0x0, 0xffffffff,3),

61 [
GD_TSS0
 >> 3] = 
SEG_NULL
,

63 [6] = 
SEG_NULL


66 
P£udodesc
 
	ggdt_pd
 = {

67 (
gdt
) - 1, () gdt

80 
	$ívid2ív
(
ívid_t
 
ívid
, 
Env
 **
ív_°‹e
, 
boﬁ
 
check≥rm
)

82 
Env
 *
e
;

85 i‡(
ívid
 == 0) {

86 *
ív_°‹e
 = 
cuªnv
;

95 
e
 = &
ívs
[
	`ENVX
(
ívid
)];

96 i‡(
e
->
ív_°©us
 =
ENV_FREE
 ||É->
ív_id
 !
ívid
) {

97 *
ív_°‹e
 = 0;

98  -
E_BAD_ENV
;

106 i‡(
check≥rm
 && 
e
 !
cuªnv
 &&É->
ív_∑ª¡_id
 !cuªnv->
ív_id
) {

107 *
ív_°‹e
 = 0;

108  -
E_BAD_ENV
;

111 *
ív_°‹e
 = 
e
;

113 
	}
}

122 
	$ív_öô
()

126 
i
;

127 
i
 = 0; i < 
NENV
; i++) {

128 
ívs
[
i
].
ív_id
 = 0;

129 
ívs
[
i
].
ív_°©us
 = 
ENV_FREE
;

130 i‡(
i
 !
NENV
 - 1){

131 
ívs
[
i
].
ív_lök
 = &envs[i + 1];

133 
ívs
[
i
].
ív_lök
 = 
NULL
;

136 
ív_‰ì_li°
 = &
ívs
[0];

139 
	`ív_öô_≥r˝u
();

140 
	}
}

144 
	$ív_öô_≥r˝u
()

146 
	`lgdt
(&
gdt_pd
);

150 
asm
 vﬁ©ûe("movw %%ax,%%gs" :: "a" (
GD_UD
|3));

151 
asm
 vﬁ©ûe("movw %%ax,%%fs" :: "a" (
GD_UD
|3));

154 
asm
 vﬁ©ûe("movw %%ax,%%es" :: "a" (
GD_KD
));

155 
asm
 vﬁ©ûe("movw %%ax,%%ds" :: "a" (
GD_KD
));

156 
asm
 vﬁ©ûe("movw %%ax,%%ss" :: "a" (
GD_KD
));

158 
asm
 vﬁ©ûe("pushq %%rbx \¿\àmovab†$1f,%%øx \¿\àpushq %%øx \n\àÃëq \¿1:\n" :: "b" (
GD_KT
):"cc","memory");

161 
	`Œdt
(0);

162 
	}
}

175 
	$ív_£tup_vm
(
Env
 *
e
)

177 
r
;

178 
i
;

179 
PageInfo
 *
p
 = 
NULL
;

182 i‡(!(
p
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)))

183  -
E_NO_MEM
;

205 
pml4e_t
 *
pml4e
 = 
	`∑ge2kva
(
p
);

206 
	`mem£t
(
pml4e
,0,
PGSIZE
);

207 
pml4e
[
	`PML4
(
UTOP
)] = 
boŸ_pml4e
[PML4(UTOP)];

209 
p
->
µ_ªf
++;

211 
e
->
ív_pml4e
 = 
pml4e
;

212 
e
->
ív_¸3
 = 
	`PADDR
(
pml4e
);

216 
e
->
ív_pml4e
[
	`PML4
(
UVPT
)] =É->
ív_¸3
 | 
PTE_P
 | 
PTE_U
;

219 
	}
}

231 
	$ív_Æloc
(
Env
 **
√wív_°‹e
, 
ívid_t
 
∑ª¡_id
)

233 
öt32_t
 
gíî©i⁄
;

234 
r
;

235 
Env
 *
e
;

237 i‡(!(
e
 = 
ív_‰ì_li°
))

238  -
E_NO_FREE_ENV
;

241 i‡((
r
 = 
	`ív_£tup_vm
(
e
)) < 0)

242  
r
;

245 
gíî©i⁄
 = (
e
->
ív_id
 + (1 << 
ENVGENSHIFT
)Ë& ~(
NENV
 - 1);

246 i‡(
gíî©i⁄
 <= 0)

247 
gíî©i⁄
 = 1 << 
ENVGENSHIFT
;

248 
e
->
ív_id
 = 
gíî©i⁄
 | (ê- 
ívs
);

251 
e
->
ív_∑ª¡_id
 = 
∑ª¡_id
;

252 
e
->
ív_ty≥
 = 
ENV_TYPE_USER
;

253 
e
->
ív_°©us
 = 
ENV_RUNNABLE
;

254 
e
->
ív_runs
 = 0;

260 
	`mem£t
(&
e
->
ív_tf
, 0, (e->env_tf));

270 
e
->
ív_tf
.
tf_ds
 = 
GD_UD
 | 3;

271 
e
->
ív_tf
.
tf_es
 = 
GD_UD
 | 3;

272 
e
->
ív_tf
.
tf_ss
 = 
GD_UD
 | 3;

273 
e
->
ív_tf
.
tf_r•
 = 
USTACKTOP
;

274 
e
->
ív_tf
.
tf_cs
 = 
GD_UT
 | 3;

279 
e
->
ív_tf
.
tf_eÊags
 =É->ív_tf.tf_eÊag†| 
FL_IF
;

282 
e
->
ív_pgÁu…_upˇŒ
 = 0;

285 
e
->
ív_ùc_ªcvög
 = 0;

288 
ív_‰ì_li°
 = 
e
->
ív_lök
;

289 *
√wív_°‹e
 = 
e
;

293 
	}
}

303 
	$ªgi⁄_Æloc
(
Env
 *
e
, *
va
, 
size_t
 
Àn
)

312 
uöçå_t
 
lowî
 = (uöçå_tË
	`ROUNDDOWN
(
va
,
PGSIZE
);

313 
uöçå_t
 
uµî
 = (uöçå_tË
	`ROUNDUP
(
va
 + 
Àn
, 
PGSIZE
);

315 
uöt64_t
 
phy_Àn
 = 
uµî
 - 
lowî
;

316 
i
;

317 
i
 = 0;ò< 
phy_Àn
/
PGSIZE
; i++) {

318 
PageInfo
 *
µ
 = 
	`∑ge_Æloc
(0);

319 
ªt
 = 
	`∑ge_ö£π
(
e
->
ív_pml4e
, 
µ
 ,(*Ë(
lowî
 + 
i
 * 
PGSIZE
), 
PTE_U
 | 
PTE_W
);

320 i‡(
ªt
) {

321 
	`∑nic
("regionálloc fail \n");

324 
	}
}

349 
	$lﬂd_icode
(
Env
 *
e
, 
uöt8_t
 *
bö¨y
)

380 
i
;

381 
Elf
 *
ñfhd
 = (El‡*Ë
bö¨y
;

382 
Proghdr
 *
ph
, *
ïh
;

383 
ph
 = (
Proghdr
 *Ë(
bö¨y
 + 
ñfhd
->
e_phoff
);

384 
ïh
 = 
ph
 + 
ñfhd
->
e_phnum
;

386 i‡(
ñfhd
->
e_magic
 !
ELF_MAGIC
) {

387 
	`∑nic
("ELF Maginc value is corrupted");

390 ; 
ph
 < 
ïh
;Öh++) {

392 i‡(
ph
->
p_ty≥
 !
ELF_PROG_LOAD
)

395 
	`ªgi⁄_Æloc
(
e
, (*Ë(
ph
->
p_va
),ph->
p_memsz
);

399 
	`l¸3
(
e
->
ív_¸3
);

400 
	`mem£t
((*Ë(
	`ROUNDDOWN
(
ph
->
p_va
,
PGSIZE
)),0,PGSIZE);

403 
	`mem˝y
((*Ë(
ph
->
p_va
), (*Ë(
bö¨y
 +Öh->
p_off£t
),ph->
p_fûesz
);

405 
	`mem£t
((*Ë(
ph
->
p_va
 +Öh->
p_fûesz
), 0,Öh->
p_memsz
 -Öh->p_filesz);

407 
	`l¸3
(
boŸ_¸3
);

411 
e
->
ív_tf
.
tf_rù
 = 
ñfhd
->
e_íåy
;

416 
	`ªgi⁄_Æloc
(
e
,(*Ë(
USTACKTOP
 - 
PGSIZE
) , PGSIZE);

418 
e
->
ñf
 = 
bö¨y
;

419 
	}
}

429 
	$ív_¸óã
(
uöt8_t
 *
bö¨y
, 
EnvTy≥
 
ty≥
)

434 
Env
 *
e
;

435 
ªt
 = 
	`ív_Æloc
(&
e
, 0);

437 i‡(
ªt
)

438 
	`∑nic
("env_create fail \n");

439 
	`lﬂd_icode
(
e
, 
bö¨y
);

440 
e
->
ív_ty≥
 = 
ty≥
;

443 i‡(
ty≥
 =
ENV_TYPE_FS
) {

444 
e
->
ív_tf
.
tf_eÊags
 |= 0x3000;

446 
	}
}

452 
	$ív_‰ì
(
Env
 *
e
)

454 
±e_t
 *
±
;

455 
uöt64_t
 
pdío
, 
±ío
;

456 
phyßddr_t
 
∑
;

462 i‡(
e
 =
cuªnv
)

463 
	`l¸3
(
boŸ_¸3
);

469 i‡(
e
->
ív_pml4e
[0] & 
PTE_P
) {

470 
pd≥_t
 *
ív_pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
e
->
ív_pml4e
[0]));

471 
pdío_limô
;

472 
uöt64_t
 
pd≥_ödex
;

475 
pd≥_ödex
=0;pdpe_index<=3;pdpe_index++){

476 if(!(
ív_pd≥
[
pd≥_ödex
] & 
PTE_P
))

478 
pde_t
 *
ív_pgdú
 = 
	`KADDR
(
	`PTE_ADDR
(
ív_pd≥
[
pd≥_ödex
]));

479 
pdío_limô
 = 
pd≥_ödex
==3?
	`PDX
(
UTOP
):PDX(0xFFFFFFFF);

480 
	`°©ic_as£π
(
UTOP
 % 
PTSIZE
 == 0);

481 
pdío
 = 0;Ödíÿ< 
pdío_limô
;Ödeno++) {

484 i‡(!(
ív_pgdú
[
pdío
] & 
PTE_P
))

487 
∑
 = 
	`PTE_ADDR
(
ív_pgdú
[
pdío
]);

488 
±
 = (
±e_t
*Ë
	`KADDR
(
∑
);

491 
±ío
 = 0;Öãnÿ< 
	`PTX
(~0);Öteno++) {

492 i‡(
±
[
±ío
] & 
PTE_P
){

493 
	`∑ge_ªmove
(
e
->
ív_pml4e
, 
	`PGADDR
((
uöt64_t
)0,
pd≥_ödex
,
pdío
, 
±ío
, 0));

498 
ív_pgdú
[
pdío
] = 0;

499 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

502 
∑
 = 
	`PTE_ADDR
(
ív_pd≥
[
pd≥_ödex
]);

503 
ív_pd≥
[
pd≥_ödex
] = 0;

504 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

507 
	`∑ge_de¸ef
(
	`∑2∑ge
(
	`PTE_ADDR
(
e
->
ív_pml4e
[0])));

510 
e
->
ív_pml4e
[0] = 0;

511 
∑
 = 
e
->
ív_¸3
;

512 
e
->
ív_pml4e
 = 0;

513 
e
->
ív_¸3
 = 0;

514 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

517 
e
->
ív_°©us
 = 
ENV_FREE
;

518 
e
->
ív_lök
 = 
ív_‰ì_li°
;

519 
ív_‰ì_li°
 = 
e
;

520 
	}
}

528 
	$ív_de°roy
(
Env
 *
e
)

533 i‡(
e
->
ív_°©us
 =
ENV_RUNNING
 && 
cuªnv
 !=É) {

534 
e
->
ív_°©us
 = 
ENV_DYING
;

538 
	`ív_‰ì
(
e
);

539 i‡(
cuªnv
 =
e
) {

540 
cuªnv
 = 
NULL
;

541 
	`sched_yõld
();

543 
	}
}

553 
	$ív_p›_tf
(
Tøp‰ame
 *
tf
)

556 
cuªnv
->
ív_˝unum
 = 
	`˝unum
();

557 
__asm
 
	`__vﬁ©ûe
("movq %0,%%rsp\n"

558 
POPA


564 : : "g" (
tf
) : "memory");

565 
	`∑nic
("iret failed");

566 
	}
}

575 
	$ív_run
(
Env
 *
e
)

596 i‡(
cuªnv
 !
NULL
) {

597 i‡(
cuªnv
->
ív_°©us
 =
ENV_RUNNING
)

598 
cuªnv
->
ív_°©us
 = 
ENV_RUNNABLE
;

600 
cuªnv
 = 
e
;

601 
cuªnv
->
ív_°©us
=
ENV_RUNNING
;

602 
cuªnv
->
ív_runs
++;

604 
	`u∆ock_kî√l
();

605 
	`l¸3
(
cuªnv
->
ív_¸3
);

608 
	`ív_p›_tf
(&(
cuªnv
->
ív_tf
));

614 
	}
}

	@env.h

3 #i‚de‡
JOS_KERN_ENV_H


4 
	#JOS_KERN_ENV_H


	)

6 
	~<öc/ív.h
>

7 
	~<kîn/˝u.h
>

9 
Env
 *
ívs
;

10 
	#cuªnv
 (
this˝u
->
˝u_ív
)

11 
Segdesc
 
gdt
[];

	)

13 
ív_öô
();

14 
ív_öô_≥r˝u
();

15 
ív_Æloc
(
Env
 **
e
, 
ívid_t
 
∑ª¡_id
);

16 
ív_‰ì
(
Env
 *
e
);

17 
ív_¸óã
(
uöt8_t
 *
bö¨y
, 
EnvTy≥
 
ty≥
);

18 
ív_de°roy
(
Env
 *
e
);

20 
ívid2ív
(
ívid_t
 
ívid
, 
Env
 **
ív_°‹e
, 
boﬁ
 
check≥rm
);

22 
	$ív_run
(
Env
 *
e
Ë
	`__©åibuã__
((
n‹ëu∫
));

23 
	$ív_p›_tf
(
Tøp‰ame
 *
tf
Ë
	`__©åibuã__
((
n‹ëu∫
));

28 
	#ENV_PASTE3
(
x
, 
y
, 
z
Ëx ## y ## 
	)
z

30 
	#ENV_CREATE
(
x
, 
ty≥
) \

32 
uöt8_t
 
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_°¨t
)[]; \

33 
	`ív_¸óã
(
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_°¨t
), \

34 
ty≥
); \

35 
	}
} 0)

	)

	@init.c

3 
	~<öc/°dio.h
>

4 
	~<öc/°rög.h
>

5 
	~<öc/as£π.h
>

6 
	~<öc/memœyout.h
>

8 
	~<kîn/m⁄ô‹.h
>

9 
	~<kîn/c⁄sﬁe.h
>

10 
	~<kîn/kdebug.h
>

11 
	~<kîn/dw¨f_≠i.h
>

12 
	~<kîn/pm≠.h
>

13 
	~<kîn/k˛ock.h
>

14 
	~<kîn/ív.h
>

15 
	~<kîn/å≠.h
>

16 
	~<kîn/sched.h
>

17 
	~<kîn/picúq.h
>

18 
	~<kîn/˝u.h
>

19 
	~<kîn/•ölock.h
>

21 
uöt64_t
 
	gíd_debug
;

23 
boŸ_≠s
();

29 
	$ã°_backåa˚
(
x
)

31 
	`˝rötf
("íãrögÅe°_backåa˚ %d\n", 
x
);

32 i‡(
x
 > 0)

33 
	`ã°_backåa˚
(
x
-1);

35 
	`m⁄_backåa˚
(0, 0, 0);

36 
	`˝rötf
("ÀavögÅe°_backåa˚ %d\n", 
x
);

37 
	}
}

39 
	$ã°_func
(
a
, 
b
, 
i
) {

40 i‡(
i
 == 0) {

41 
a
 = 
	`ã°_func
(6, 8, 1);

43  
a
 + 
b
;

44 
	}
}

47 
	$i386_öô
()

51 
ed©a
[], 
íd
[];

56 
	`mem£t
(
ed©a
, 0, 
íd
 -Édata);

60 
	`c⁄s_öô
();

63 
a
 = 
	`ã°_func
(2, 3, 0);

65 
	`˝rötf
("6828 decimal is %o octal!\n", 6828);

67 
íd
[];

68 
íd_debug
 = 
	`ªad_£˘i⁄_hódîs
((0x10000+
KERNBASE
), (
uöçå_t
)
íd
);

71 
	`x64_vm_öô
();

74 
	`ív_öô
();

75 
	`å≠_öô
();

78 
	`mp_öô
();

79 
	`œpic_öô
();

82 
	`pic_öô
();

86 
	`lock_kî√l
();

89 
	`boŸ_≠s
();

94 
	`ENV_CREATE
(
fs_fs
, 
ENV_TYPE_FS
);

97 #i‡
	`deföed
(
TEST
)

99 
	`ENV_CREATE
(
TEST
, 
ENV_TYPE_USER
);

103 
	`ENV_CREATE
(
u£r_icode
, 
ENV_TYPE_USER
);

107 
	`kbd_öå
();

110 
	`sched_yõld
();

111 
	}
}

116 *
	gm≥¡ry_k°ack
;

120 
	$boŸ_≠s
()

122 
m≥¡ry_°¨t
[], 
m≥¡ry_íd
[];

123 *
code
;

124 
CpuInfo
 *
c
;

127 
code
 = 
	`KADDR
(
MPENTRY_PADDR
);

128 
	`memmove
(
code
, 
m≥¡ry_°¨t
, 
m≥¡ry_íd
 - mpentry_start);

130 
c
 = 
˝us
; c < cpu†+ 
n˝u
; c++) {

131 i‡(
c
 =
˝us
 + 
	`˝unum
())

135 
m≥¡ry_k°ack
 = 
≥r˝u_k°acks
[
c
 - 
˝us
] + 
KSTKSIZE
;

137 
	`œpic_°¨èp
(
c
->
˝u_id
, 
	`PADDR
(
code
));

139 
c
->
˝u_°©us
 !
CPU_STARTED
)

142 
	}
}

146 
	$mp_maö
()

149 
	`l¸3
(
boŸ_¸3
);

150 
	`˝rötf
("SMP: CPU %d sèπög\n", 
	`˝unum
());

152 
	`œpic_öô
();

153 
	`ív_öô_≥r˝u
();

154 
	`å≠_öô_≥r˝u
();

155 
	`xchg
(&
this˝u
->
˝u_°©us
, 
CPU_STARTED
);

162 
	`lock_kî√l
();

163 
	`sched_yõld
();

164 
	}
}

171 c⁄° *
	g∑nic°r
;

178 
	$_∑nic
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

180 
va_li°
 
≠
;

182 i‡(
∑nic°r
)

183 
dód
;

184 
∑nic°r
 = 
fmt
;

187 
__asm
 
	`__vﬁ©ûe
("cli; cld");

189 
	`va_°¨t
(
≠
, 
fmt
);

190 
	`˝rötf
("kî√»∑ni¯⁄ CPU %dáà%s:%d: ", 
	`˝unum
(), 
fûe
, 
löe
);

191 
	`v˝rötf
(
fmt
, 
≠
);

192 
	`˝rötf
("\n");

193 
	`va_íd
(
≠
);

195 
dód
:

198 
	`m⁄ô‹
(
NULL
);

199 
	}
}

203 
	$_w¨n
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

205 
va_li°
 
≠
;

207 
	`va_°¨t
(
≠
, 
fmt
);

208 
	`˝rötf
("kî√»w¨nögáà%s:%d: ", 
fûe
, 
löe
);

209 
	`v˝rötf
(
fmt
, 
≠
);

210 
	`˝rötf
("\n");

211 
	`va_íd
(
≠
);

212 
	}
}

	@kclock.c

5 
	~<öc/x86.h
>

7 
	~<kîn/k˛ock.h
>

11 
	$mc146818_ªad
(
ªg
)

13 
	`outb
(
IO_RTC
, 
ªg
);

14  
	`öb
(
IO_RTC
+1);

15 
	}
}

18 
	$mc146818_wrôe
(
ªg
, 
d©um
)

20 
	`outb
(
IO_RTC
, 
ªg
);

21 
	`outb
(
IO_RTC
+1, 
d©um
);

22 
	}
}

	@kclock.h

3 #i‚de‡
JOS_KERN_KCLOCK_H


4 
	#JOS_KERN_KCLOCK_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	#IO_RTC
 0x070

	)

11 
	#MC_NVRAM_START
 0xê

	)

12 
	#MC_NVRAM_SIZE
 50

	)

15 
	#NVRAM_BASELO
 (
MC_NVRAM_START
 + 7Ë

	)

16 
	#NVRAM_BASEHI
 (
MC_NVRAM_START
 + 8Ë

	)

19 
	#NVRAM_EXTLO
 (
MC_NVRAM_START
 + 9Ë

	)

20 
	#NVRAM_EXTHI
 (
MC_NVRAM_START
 + 10Ë

	)

23 
	#NVRAM_PEXTLO
 (
MC_NVRAM_START
 + 34Ë

	)

24 
	#NVRAM_PEXTHI
 (
MC_NVRAM_START
 + 35Ë

	)

27 
	#NVRAM_EXTGT16LO
 (
MC_NVRAM_START
 + 38Ë

	)

28 
	#NVRAM_EXTGT16HI
 (
MC_NVRAM_START
 + 39Ë

	)

31 
	#NVRAM_CENTURY
 (
MC_NVRAM_START
 + 36Ë

	)

33 
mc146818_ªad
(
ªg
);

34 
mc146818_wrôe
(
ªg
, 
d©um
);

	@kdebug.c

1 
	~<öc/°ab.h
>

2 
	~<öc/°rög.h
>

3 
	~<öc/memœyout.h
>

4 
	~<öc/as£π.h
>

6 
	~<kîn/kdebug.h
>

7 
	~<kîn/dw¨f.h
>

8 
	~<kîn/dw¨f_≠i.h
>

9 
	~<kîn/dw¨f_ñf.h
>

10 
	~<kîn/dw¨f_deföe.h
>

11 
	~<kîn/dw¨f_îr‹.h
>

13 
	~<kîn/pm≠.h
>

14 
	~<kîn/ív.h
>

16 
_Dw¨f_Fde
 
	g_fde
;

17 
Dw¨f_Fde
 
	gfde
 = &
_fde
;

18 
_Dw¨f_Cõ
 
	g_cõ
;

19 
Dw¨f_Cõ
 
	gcõ
 = &
_cõ
;

21 
_dw¨f_öô
(
Dw¨f_Debug
 
dbg
, *
obj
);

22 
_gë_√xt_cu
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 *
cu
);

23 
dw¨f_siblögof
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Dõ
 *
dõ
, Dw¨f_Dõ *
ªt_dõ
,

24 
Dw¨f_CU
 *
cu
);

25 
Dw¨f_Aâribuã
 * 
_dw¨f_©å_föd
(
Dw¨f_Dõ
 *, 
uöt16_t
);

26 
dw¨f_chûd
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 *
cu
, 
Dw¨f_Dõ
 *
dõ
,

27 
Dw¨f_Dõ
 *
ªt_dõ
);

28 
dw¨f_offdõ
(
Dw¨f_Debug
 
dbg
, 
uöt64_t
 
off£t
, 
Dw¨f_Dõ
 *
ªt_dõ
,

29 
Dw¨f_CU
 
cu
);

30 
Dw¨f_Se˘i⁄
 * 
_dw¨f_föd_£˘i⁄
(c⁄° *
«me
);

33 
dw¨f_lo˛i°
(
Dw¨f_Aâribuã
 * 
©å
,

34 
Dw¨f_Locdesc
 * 
locdesc
,

35 
Dw¨f_Sig√d
 * 
li°Àn
, 
Dw¨f_Eº‹
 * 
îr‹
);

37 
dw¨f_öô_eh_£˘i⁄
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Eº‹
 *
îr‹
);

39 
dw¨f_gë_fde_©_pc
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Addr
 
pc
,

40 
Dw¨f_Fde
 
ªt_fde
, 
Dw¨f_Cõ
 
cõ
,

41 
Dw¨f_Eº‹
 *
îr‹
);

43 
dw¨f_gë_fde_öfo_f‹_Æl_ªgs
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Fde
 
fde
,

44 
Dw¨f_Addr
 
pc_ªque°ed
,

45 
Dw¨f_RegèbÀ
 *
ªg_èbÀ
, 
Dw¨f_Addr
 *
row_pc
,

46 
Dw¨f_Eº‹
 *
îr‹
);

48 
öt64_t


49 
_dw¨f_ªad_¶eb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

50 
uöt64_t


51 
_dw¨f_ªad_uÀb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

52 
öt64_t


53 
_dw¨f_decode_¶eb128
(
uöt8_t
 **
dp
);

54 
uöt64_t


55 
_dw¨f_decode_uÀb128
(
uöt8_t
 **
dp
);

57 
_Dw¨f_Debug
 
	gmydebug
;

58 
Dw¨f_Debug
 
	gdbg
 = &
mydebug
;

59 #ifde‡
X86_64


61 c⁄° *c⁄° 
	gdw¨f_ªg«mes_x86_64
[] =

77 "es", "cs", "ss", "ds", "fs", "gs", 
NULL
, NULL,

78 "fs.ba£", "gs.ba£", 
NULL
, NULL,

83 
	#ªg_«mes_±r
 
dw¨f_ªg«mes_x86_64


	)

86 c⁄° *c⁄° 
	gdw¨f_ªg«mes_i386
[] =

90 "eù", "eÊags", 
NULL
,

93 
NULL
, NULL,

99 "es", "cs", "ss", "ds", "fs", "gs", 
NULL
, NULL,

103 
	#ªg_«mes_±r
 
dw¨f_ªg«mes_i386


	)

108 
	sU£rSèbD©a
 {

109 c⁄° 
Sèb
 *
	m°abs
;

110 c⁄° 
Sèb
 *
	m°ab_íd
;

111 c⁄° *
	m°ab°r
;

112 c⁄° *
	m°ab°r_íd
;

115 
	$li°_func_dõ
(
Rùdebugöfo
 *
öfo
, 
Dw¨f_Dõ
 *
dõ
, 
uöt64_t
 
addr
)

117 
_Dw¨f_Löe
 
 
;

118 
Dw¨f_Aâribuã
 *
low
;

119 
Dw¨f_Aâribuã
 *
high
;

120 
Dw¨f_CU
 *
cu
 = 
dõ
->
cu_hódî
;

121 
Dw¨f_Dõ
 *
cudõ
 = 
dõ
->
cu_dõ
;

122 
Dw¨f_Dõ
 
ªt
, 
sib
=*
dõ
;

123 
Dw¨f_Aâribuã
 *
©å
;

124 
uöt64_t
 
off£t
;

125 
uöt64_t
 
ªt_vÆ
=8;

126 
uöt64_t
 
ªt_off£t
=0;

128 if(
dõ
->
dõ_èg
 !
DW_TAG_sub¥ogøm
)

131 
	`mem£t
(&
 
, 0, (
_Dw¨f_Löe
));

133 
low
 = 
	`_dw¨f_©å_föd
(
dõ
, 
DW_AT_low_pc
);

134 
high
 = 
	`_dw¨f_©å_föd
(
dõ
, 
DW_AT_high_pc
);

136 if((
low
 && (low->
u
[0].
u64
 < 
addr
)Ë&& (
high
 && (high->u[0].u64 >áddr)))

138 
öfo
->
rù_fûe
 = 
dõ
->
cu_dõ
->
dõ_«me
;

140 
öfo
->
rù_‚_«me
 = 
dõ
->
dõ_«me
;

141 
öfo
->
rù_‚_«mñí
 = 
	`°æí
(
dõ
->
dõ_«me
);

143 
öfo
->
rù_‚_addr
 = (
uöçå_t
)
low
->
u
[0].
u64
;

145 
	`as£π
(
dõ
->
cu_dõ
);

146 
	`dw¨f_§˛öes
(
dõ
->
cu_dõ
, &
 
, 
addr
, 
NULL
);

148 
öfo
->
rù_löe
 = 
 
.
 _löío
;

149 
öfo
->
rù_‚_«rg
 = 0;

151 
Dw¨f_Aâribuã
* 
©å
;

153 if(
	`dw¨f_chûd
(
dbg
, 
cu
, &
sib
, &
ªt
Ë!
DW_DLE_NO_ENTRY
)

155 if(
ªt
.
dõ_èg
 !
DW_TAG_f‹mÆ_∑ømëî
)

156 
œ°
;

158 
©å
 = 
	`_dw¨f_©å_föd
(&
ªt
, 
DW_AT_ty≥
);

160 
åy_agaö
:

161 if(
©å
 !
NULL
)

163 
off£t
 = (
uöt64_t
)
cu
->
cu_off£t
 + 
©å
->
u
[0].
u64
;

164 
	`dw¨f_offdõ
(
dbg
, 
off£t
, &
sib
, *
cu
);

165 
©å
 = 
	`_dw¨f_©å_föd
(&
sib
, 
DW_AT_byã_size
);

167 if(
©å
 !
NULL
)

169 
ªt_vÆ
 = 
©å
->
u
[0].
u64
;

173 
©å
 = 
	`_dw¨f_©å_föd
(&
sib
, 
DW_AT_ty≥
);

174 
åy_agaö
;

178 
ªt_off£t
 = 0;

179 
©å
 = 
	`_dw¨f_©å_föd
(&
ªt
, 
DW_AT_loˇti⁄
);

180 i‡(
©å
 !
NULL
)

182 
Dw¨f_Unsig√d
 
loc_Àn
 = 
©å
->
©_block
.
bl_Àn
;

183 
Dw¨f_SmÆl
 *
loc_±r
 = 
©å
->
©_block
.
bl_d©a
;

184 
Dw¨f_SmÆl
 
©om
;

185 
Dw¨f_Unsig√d
 
›1
, 
›2
;

187 
©å
->
©_f‹m
) {

188 
DW_FORM_block1
:

189 
DW_FORM_block2
:

190 
DW_FORM_block4
:

191 
off£t
 = 0;

192 
©om
 = *(
loc_±r
++);

193 
off£t
++;

194 i‡(
©om
 =
DW_OP_fbªg
) {

195 
uöt8_t
 *
p
 = 
loc_±r
;

196 
ªt_off£t
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

197 
off£t
 +
p
 - 
loc_±r
;

198 
loc_±r
 = 
p
;

204 
öfo
->
size_‚_¨g
[öfo->
rù_‚_«rg
] = 
ªt_vÆ
;

205 
öfo
->
off£t_‚_¨g
[öfo->
rù_‚_«rg
] = 
ªt_off£t
;

206 
öfo
->
rù_‚_«rg
++;

207 
sib
 = 
ªt
;

209 
	`dw¨f_siblögof
(
dbg
, &
sib
, &
ªt
, 
cu
Ë=
DW_DLV_OK
)

211 if(
ªt
.
dõ_èg
 !
DW_TAG_f‹mÆ_∑ømëî
)

214 
©å
 = 
	`_dw¨f_©å_föd
(&
ªt
, 
DW_AT_ty≥
);

216 if(
©å
 !
NULL
)

218 
off£t
 = (
uöt64_t
)
cu
->
cu_off£t
 + 
©å
->
u
[0].
u64
;

219 
	`dw¨f_offdõ
(
dbg
, 
off£t
, &
sib
, *
cu
);

220 
©å
 = 
	`_dw¨f_©å_föd
(&
sib
, 
DW_AT_byã_size
);

222 if(
©å
 !
NULL
)

224 
ªt_vÆ
 = 
©å
->
u
[0].
u64
;

228 
ªt_off£t
 = 0;

229 
©å
 = 
	`_dw¨f_©å_föd
(&
ªt
, 
DW_AT_loˇti⁄
);

230 i‡(
©å
 !
NULL
)

232 
Dw¨f_Unsig√d
 
loc_Àn
 = 
©å
->
©_block
.
bl_Àn
;

233 
Dw¨f_SmÆl
 *
loc_±r
 = 
©å
->
©_block
.
bl_d©a
;

234 
Dw¨f_SmÆl
 
©om
;

235 
Dw¨f_Unsig√d
 
›1
, 
›2
;

237 
©å
->
©_f‹m
) {

238 
DW_FORM_block1
:

239 
DW_FORM_block2
:

240 
DW_FORM_block4
:

241 
off£t
 = 0;

242 
©om
 = *(
loc_±r
++);

243 
off£t
++;

244 i‡(
©om
 =
DW_OP_fbªg
) {

245 
uöt8_t
 *
p
 = 
loc_±r
;

246 
ªt_off£t
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

247 
off£t
 +
p
 - 
loc_±r
;

248 
loc_±r
 = 
p
;

254 
öfo
->
size_‚_¨g
[öfo->
rù_‚_«rg
]=
ªt_vÆ
;

255 
öfo
->
off£t_‚_¨g
[öfo->
rù_‚_«rg
]=
ªt_off£t
;

256 
öfo
->
rù_‚_«rg
++;

257 
sib
 = 
ªt
;

260 
œ°
:

265 
	}
}

275 
	$debugöfo_rù
(
uöçå_t
 
addr
, 
Rùdebugöfo
 *
öfo
)

277 
Env
* 
œ°ív
 = 
NULL
;

278 * 
ñf
;

279 
Dw¨f_Se˘i⁄
 *
£˘
;

280 
Dw¨f_CU
 
cu
;

281 
Dw¨f_Dõ
 
dõ
, 
cudõ
, 
dõ2
;

282 
Dw¨f_RegèbÀ
 *
π
 = 
NULL
;

284 
uöt64_t
 
pc
 = (
uöçå_t
)
addr
;

288 
öfo
->
rù_fûe
 = "<unknown>";

289 
öfo
->
rù_löe
 = 0;

290 
öfo
->
rù_‚_«me
 = "<unknown>";

291 
öfo
->
rù_‚_«mñí
 = 9;

292 
öfo
->
rù_‚_addr
 = 
addr
;

293 
öfo
->
rù_‚_«rg
 = 0;

296 i‡(
addr
 >
ULIM
) {

297 
ñf
 = (*)0x10000 + 
KERNBASE
;

299 if(
cuªnv
 !
œ°ív
) {

300 
	`föd_debug_£˘i⁄s
((
uöçå_t
)
cuªnv
->
ñf
);

301 
œ°ív
 = 
cuªnv
;

303 
ñf
 = 
cuªnv
->elf;

305 
	`_dw¨f_öô
(
dbg
, 
ñf
);

307 
£˘
 = 
	`_dw¨f_föd_£˘i⁄
(".debug_info");

308 
dbg
->
dbg_öfo_off£t_ñf
 = (
uöt64_t
)
£˘
->
ds_d©a
;

309 
dbg
->
dbg_öfo_size
 = 
£˘
->
ds_size
;

311 
	`as£π
(
dbg
->
dbg_öfo_size
);

312 
	`_gë_√xt_cu
(
dbg
, &
cu
) == 0)

314 if(
	`dw¨f_siblögof
(
dbg
, 
NULL
, &
cudõ
, &
cu
Ë=
DW_DLE_NO_ENTRY
)

317 
cudõ
.
cu_hódî
 = &
cu
;

318 
cudõ
.
cu_dõ
 = 
NULL
;

320 if(
	`dw¨f_chûd
(
dbg
, &
cu
, &
cudõ
, &
dõ
Ë=
DW_DLE_NO_ENTRY
)

323 
dõ
.
cu_hódî
 = &
cu
;

324 
dõ
.
cu_dõ
 = &
cudõ
;

327 if(
	`li°_func_dõ
(
öfo
, &
dõ
, 
addr
))

328 
föd_d⁄e
;

329 if(
	`dw¨f_siblögof
(
dbg
, &
dõ
, &
dõ2
, &
cu
) < 0)

331 
dõ
 = 
dõ2
;

332 
dõ
.
cu_hódî
 = &
cu
;

333 
dõ
.
cu_dõ
 = &
cudõ
;

339 
föd_d⁄e
:

341 i‡(
	`dw¨f_öô_eh_£˘i⁄
(
dbg
, 
NULL
Ë=
DW_DLV_ERROR
)

344 i‡(
	`dw¨f_gë_fde_©_pc
(
dbg
, 
addr
, 
fde
, 
cõ
, 
NULL
Ë=
DW_DLV_OK
) {

345 
	`dw¨f_gë_fde_öfo_f‹_Æl_ªgs
(
dbg
, 
fde
, 
addr
,

346 &
öfo
->
ªg_èbÀ
,

347 
NULL
, NULL);

350 
	`˝rötf
("CFA:Ñeg %s off %d\n",

351 
ªg_«mes_±r
[
öfo
->
ªg_èbÀ
.
cÁ_ruÀ
.
dw_ªgnum
],

352 
öfo
->
ªg_èbÀ
.
cÁ_ruÀ
.
dw_off£t
);

354 
i
 = 0; i < (
ªg_«mes_±r
) / (reg_names_ptr[0]); i++) {

355 i‡(!
ªg_«mes_±r
[
i
])

357 
öfo
->
ªg_èbÀ
.
ruÀs
[
i
].
dw_ªgnum
) {

358 
DW_FRAME_UNDEFINED_VAL
:

359 
	`˝rötf
("%s: \n", 
ªg_«mes_±r
[
i
]);

361 
DW_FRAME_CFA_COL3
:

362 
	`˝rötf
("%s: of‡%d\n", 
ªg_«mes_±r
[
i
],

363 
öfo
->
ªg_èbÀ
.
ruÀs
[
i
].
dw_off£t
);

365 
DW_FRAME_SAME_VAL
:

368 
	`˝rötf
("%s:Ñeg %s\n", 
ªg_«mes_±r
[
i
],

369 
ªg_«mes_±r
[
öfo
->
ªg_èbÀ
.
ruÀs
[
i
].
dw_ªgnum
]);

376 
	}
}

	@kdebug.h

1 #i‚de‡
JOS_KERN_KDEBUG_H


2 
	#JOS_KERN_KDEBUG_H


	)

4 
	~<öc/ty≥s.h
>

5 
	~<kîn/dw¨f.h
>

8 
	sRùdebugöfo
 {

9 c⁄° *
	mrù_fûe
;

10 
	mrù_löe
;

12 c⁄° *
	mrù_‚_«me
;

14 
	mrù_‚_«mñí
;

15 
uöçå_t
 
	mrù_‚_addr
;

16 
	mrù_‚_«rg
;

17 
	msize_‚_¨g
[10];

18 
uöçå_t
 
	moff£t_‚_¨g
[10];

19 
Dw¨f_RegèbÀ
 
	mªg_èbÀ
;

22 
debugöfo_rù
(
uöçå_t
 
rù
, 
Rùdebugöfo
 *
öfo
);

	@lapic.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/memœyout.h
>

6 
	~<öc/å≠.h
>

7 
	~<öc/mmu.h
>

8 
	~<öc/°dio.h
>

9 
	~<öc/x86.h
>

10 
	~<kîn/pm≠.h
>

11 
	~<kîn/˝u.h
>

14 
	#ID
 (0x0020/4)

15 
	#VER
 (0x0030/4)

16 
	#TPR
 (0x0080/4)

17 
	#EOI
 (0x00B0/4)

18 
	#SVR
 (0x00F0/4)

19 
	#ENABLE
 0x00000100

20 
	#ESR
 (0x0280/4)

21 
	#ICRLO
 (0x0300/4)

22 
	#INIT
 0x00000500

23 
	#STARTUP
 0x00000600

24 
	#DELIVS
 0x00001000

25 
	#ASSERT
 0x00004000

26 
	#DEASSERT
 0x00000000

	)

27 
	#LEVEL
 0x00008000

28 
	#BCAST
 0x00080000

29 
	#OTHERS
 0x000C0000

30 
	#BUSY
 0x00001000

	)

31 
	#FIXED
 0x00000000

	)

32 
	#ICRHI
 (0x0310/4)

33 
	#TIMER
 (0x0320/4)

34 
	#X1
 0x0000000B

35 
	#PERIODIC
 0x00020000

36 
	#PCINT
 (0x0340/4)

37 
	#LINT0
 (0x0350/4)

38 
	#LINT1
 (0x0360/4)

39 
	#ERROR
 (0x0370/4)

40 
	#MASKED
 0x00010000

41 
	#TICR
 (0x0380/4)

42 
	#TCCR
 (0x0390/4)

43 
	#TDCR
 (0x03E0/4)

44 

	)

45 
phyßddr_t
 
	gœpiˇddr
;

46 vﬁ©ûê
uöt32_t
 *
	gœpic
;

49 
	$œpicw
(
ödex
, 
vÆue
)

51 
œpic
[
ödex
] = 
vÆue
;

52 
œpic
[
ID
];

53 
	}
}

56 
	$œpic_öô
()

58 i‡(!
œpiˇddr
)

63 
œpic
 = 
	`mmio_m≠_ªgi⁄
(
œpiˇddr
, 4096);

66 
	`œpicw
(
SVR
, 
ENABLE
 | (
IRQ_OFFSET
 + 
IRQ_SPURIOUS
));

72 
	`œpicw
(
TDCR
, 
X1
);

73 
	`œpicw
(
TIMER
, 
PERIODIC
 | (
IRQ_OFFSET
 + 
IRQ_TIMER
));

74 
	`œpicw
(
TICR
, 10000000);

83 i‡(
this˝u
 !
boŸ˝u
)

84 
	`œpicw
(
LINT0
, 
MASKED
);

87 
	`œpicw
(
LINT1
, 
MASKED
);

91 i‡(((
œpic
[
VER
]>>16) & 0xFF) >= 4)

92 
	`œpicw
(
PCINT
, 
MASKED
);

95 
	`œpicw
(
ERROR
, 
IRQ_OFFSET
 + 
IRQ_ERROR
);

98 
	`œpicw
(
ESR
, 0);

99 
	`œpicw
(
ESR
, 0);

102 
	`œpicw
(
EOI
, 0);

105 
	`œpicw
(
ICRHI
, 0);

106 
	`œpicw
(
ICRLO
, 
BCAST
 | 
INIT
 | 
LEVEL
);

107 
œpic
[
ICRLO
] & 
DELIVS
)

111 
	`œpicw
(
TPR
, 0);

112 
	}
}

115 
	$˝unum
()

117 i‡(
œpic
)

118  
œpic
[
ID
] >> 24;

120 
	}
}

124 
	$œpic_eoi
()

126 i‡(
œpic
) {

127 
	`œpicw
(
EOI
, 0);

129 
	}
}

134 
	$mi¸odñay
(
us
)

136 
	}
}

138 
	#IO_RTC
 0x70

	)

143 
	$œpic_°¨èp
(
uöt8_t
 
≠icid
, 
uöt32_t
 
addr
)

145 
i
;

146 
uöt16_t
 *
wrv
;

151 
	`outb
(
IO_RTC
, 0xF);

152 
	`outb
(
IO_RTC
+1, 0x0A);

153 
wrv
 = (
uöt16_t
 *)
	`KADDR
((0x40 << 4 | 0x67));

154 
wrv
[0] = 0;

155 
wrv
[1] = 
addr
 >> 4;

159 
	`œpicw
(
ICRHI
, 
≠icid
 << 24);

160 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
 | 
ASSERT
);

161 
	`mi¸odñay
(200);

162 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
);

163 
	`mi¸odñay
(100);

170 
i
 = 0; i < 2; i++) {

171 
	`œpicw
(
ICRHI
, 
≠icid
 << 24);

172 
	`œpicw
(
ICRLO
, 
STARTUP
 | (
addr
 >> 12));

173 
	`mi¸odñay
(200);

175 
	}
}

178 
	$œpic_ùi
(
ve˘‹
)

180 
	`œpicw
(
ICRLO
, 
OTHERS
 | 
FIXED
 | 
ve˘‹
);

181 
œpic
[
ICRLO
] & 
DELIVS
)

183 
	}
}

	@libdwarf_frame.c

1 
	~<öc/ty≥s.h
>

2 
	~<öc/°rög.h
>

3 
	~<öc/as£π.h
>

4 
	~"dw¨f_îr‹.h
"

5 
	~"dw¨f_deföe.h
"

6 
	~"dw¨f.h
"

8 
_dw¨f_gë_√xt_fde
(
Dw¨f_Debug
, , 
Dw¨f_Eº‹
 *, 
Dw¨f_Fde
);

10 
Dw¨f_Se˘i⁄
 
	gdebug_‰ame_£c
 = {".eh_frame", 0, 0, 0};

12 
Dw¨f_RegèbÀ3
 
	gglobÆ_π_èbÀ
 = {{0}};

13 
Dw¨f_RegèbÀ_E¡ry3
 
	gglobÆ_ruÀs
[
DW_FRAME_LAST_REG_NUM
];

15 
Dw¨f_RegèbÀ3
 
	gglobÆ_π_èbÀ_shadow
 = {{0}};

16 
Dw¨f_RegèbÀ_E¡ry3
 
	gglobÆ_ruÀs_shadow
[
DW_FRAME_LAST_REG_NUM
];

18 
uöt64_t


19 
_dw¨f_ªad_lsb
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
, 
byãs_to_ªad
);

20 
uöt64_t


21 
_dw¨f_decode_lsb
(
uöt8_t
 **
d©a
, 
byãs_to_ªad
);

22 
uöt64_t


23 
_dw¨f_ªad_msb
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
, 
byãs_to_ªad
);

24 
uöt64_t


25 
_dw¨f_decode_msb
(
uöt8_t
 **
d©a
, 
byãs_to_ªad
);

26 
öt64_t


27 
_dw¨f_ªad_¶eb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

28 
uöt64_t


29 
_dw¨f_ªad_uÀb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

30 
öt64_t


31 
_dw¨f_decode_¶eb128
(
uöt8_t
 **
dp
);

32 
uöt64_t


33 
_dw¨f_decode_uÀb128
(
uöt8_t
 **
dp
);

36 
_dw¨f_‰ame_£t_fde
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Fde
 
ªtfde
, 
Dw¨f_Se˘i⁄
 *
ds
,

37 
Dw¨f_Unsig√d
 *
off
, 
eh_‰ame
, 
Dw¨f_Cõ
 
cõ
, 
Dw¨f_Eº‹
 *
îr‹
);

39 
_dw¨f_‰ame_£˘i⁄_lﬂd_eh
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Eº‹
 *
îr‹
);

41 
_dw¨f_föd_£˘i⁄_íh™˚d
(
Dw¨f_Se˘i⁄
 *
ds
);

44 
	$_dw¨f_‰ame_∑øms_öô
(
Dw¨f_Debug
 
dbg
)

47 
dbg
->
dbg_‰ame_ruÀ_èbÀ_size
 = 
DW_FRAME_LAST_REG_NUM
;

48 
dbg
->
dbg_‰ame_ruÀ_öôül_vÆue
 = 
DW_FRAME_REG_INITIAL_VALUE
;

49 
dbg
->
dbg_‰ame_cÁ_vÆue
 = 
DW_FRAME_CFA_COL3
;

50 
dbg
->
dbg_‰ame_ßme_vÆue
 = 
DW_FRAME_SAME_VAL
;

51 
dbg
->
dbg_‰ame_undeföed_vÆue
 = 
DW_FRAME_UNDEFINED_VAL
;

52 
	}
}

56 
	$dw¨f_gë_fde_©_pc
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Addr
 
pc
,

57 
_Dw¨f_Fde
 *
ªt_fde
, 
Dw¨f_Cõ
 
cõ
,

58 
Dw¨f_Eº‹
 *
îr‹
)

60 
Dw¨f_Fde
 
fde
 = 
ªt_fde
;

61 
	`mem£t
(
fde
, 0, (
_Dw¨f_Fde
));

62 
fde
->
fde_cõ
 = 
cõ
;

64 i‡(
ªt_fde
 =
NULL
)

65  (
DW_DLV_ERROR
);

67 
dbg
->
cuº_off_eh
 < dbg->
dbg_eh_size
) {

68 i‡(
	`_dw¨f_gë_√xt_fde
(
dbg
, 
åue
, 
îr‹
, 
fde
) < 0)

70  
DW_DLV_NO_ENTRY
;

72 i‡(
pc
 >
fde
->
fde_öôloc
 &&Öc < fde->fde_initloc +

73 
fde
->
fde_adønge
)

74  (
DW_DLV_OK
);

77 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_NO_ENTRY
);

78  (
DW_DLV_NO_ENTRY
);

79 
	}
}

82 
	$_dw¨f_‰ame_ªgèbÀ_c›y
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_RegèbÀ3
 **
de°
,

83 
Dw¨f_RegèbÀ3
 *
§c
, 
Dw¨f_Eº‹
 *
îr‹
)

85 
i
;

87 
	`as£π
(
de°
 !
NULL
);

88 
	`as£π
(
§c
 !
NULL
);

90 i‡(*
de°
 =
NULL
) {

91 *
de°
 = &
globÆ_π_èbÀ_shadow
;

92 (*
de°
)->
π3_ªg_èbÀ_size
 = 
§c
->rt3_reg_table_size;

93 (*
de°
)->
π3_ruÀs
 = 
globÆ_ruÀs_shadow
;

96 
	`mem˝y
(&(*
de°
)->
π3_cÁ_ruÀ
, &
§c
->rt3_cfa_rule,

97 (
Dw¨f_RegèbÀ_E¡ry3
));

99 
i
 = 0; i < (*
de°
)->
π3_ªg_èbÀ_size
 &&

100 
i
 < 
§c
->
π3_ªg_èbÀ_size
; i++)

101 
	`mem˝y
(&(*
de°
)->
π3_ruÀs
[
i
], &
§c
->rt3_rules[i],

102 (
Dw¨f_RegèbÀ_E¡ry3
));

104 ; 
i
 < (*
de°
)->
π3_ªg_èbÀ_size
; i++)

105 (*
de°
)->
π3_ruÀs
[
i
].
dw_ªgnum
 =

106 
dbg
->
dbg_‰ame_undeföed_vÆue
;

108  (
DW_DLE_NONE
);

109 
	}
}

112 
	$_dw¨f_‰ame_run_ö°
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_RegèbÀ3
 *
π
, 
uöt8_t
 *
ö°s
,

113 
Dw¨f_Unsig√d
 
Àn
, Dw¨f_Unsig√d 
ˇf
, 
Dw¨f_Sig√d
 
daf
, 
Dw¨f_Addr
 
pc
,

114 
Dw¨f_Addr
 
pc_ªq
, Dw¨f_Add∏*
row_pc
, 
Dw¨f_Eº‹
 *
îr‹
)

116 
Dw¨f_RegèbÀ3
 *
öô_π
, *
ßved_π
;

117 
uöt8_t
 *
p
, *
≥
;

118 
uöt8_t
 
high2
, 
low6
;

119 
uöt64_t
 
ªg
, 
ªg2
, 
uoff
, 
soff
;

120 
ªt
;

122 
	#CFA
 
π
->
π3_cÁ_ruÀ


	)

123 
	#INITCFA
 
öô_π
->
π3_cÁ_ruÀ


	)

124 
	#RL
 
π
->
π3_ruÀs


	)

125 
	#INITRL
 
öô_π
->
π3_ruÀs


	)

127 
	#CHECK_TABLE_SIZE
(
x
) \

129 i‡((
x
Ë>
π
->
π3_ªg_èbÀ_size
) { \

130 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, \

131 
DW_DLE_DF_REG_NUM_TOO_HIGH
); \

132 
ªt
 = 
DW_DLE_DF_REG_NUM_TOO_HIGH
; \

133 
¥ogøm_d⁄e
; \

135 } 0)

	)

137 
ªt
 = 
DW_DLE_NONE
;

138 
öô_π
 = 
ßved_π
 = 
NULL
;

139 *
row_pc
 = 
pc
;

142 
	`_dw¨f_‰ame_ªgèbÀ_c›y
(
dbg
, &
öô_π
, 
π
, 
îr‹
);

143 
p
 = 
ö°s
;

144 
≥
 = 
p
 + 
Àn
;

146 
p
 < 
≥
) {

147 i‡(*
p
 =
DW_CFA_n›
) {

148 
p
++;

152 
high2
 = *
p
 & 0xc0;

153 
low6
 = *
p
 & 0x3f;

154 
p
++;

156 i‡(
high2
 > 0) {

157 
high2
) {

158 
DW_CFA_adv™˚_loc
:

159 
pc
 +
low6
 * 
ˇf
;

160 i‡(
pc_ªq
 < 
pc
)

161 
¥ogøm_d⁄e
;

163 
DW_CFA_off£t
:

164 *
row_pc
 = 
pc
;

165 
	`CHECK_TABLE_SIZE
(
low6
);

166 
RL
[
low6
].
dw_off£t_ªÀv™t
 = 1;

167 
RL
[
low6
].
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

168 
RL
[
low6
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

169 
RL
[
low6
].
dw_off£t_‹_block_Àn
 =

170 
	`_dw¨f_decode_uÀb128
(&
p
Ë* 
daf
;

172 
DW_CFA_ª°‹e
:

173 *
row_pc
 = 
pc
;

174 
	`CHECK_TABLE_SIZE
(
low6
);

175 
	`mem˝y
(&
RL
[
low6
], &
INITRL
[low6],

176 (
Dw¨f_RegèbÀ_E¡ry3
));

179 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
,

180 
DW_DLE_FRAME_INSTR_EXEC_ERROR
);

181 
ªt
 = 
DW_DLE_FRAME_INSTR_EXEC_ERROR
;

182 
¥ogøm_d⁄e
;

188 
low6
) {

189 
DW_CFA_£t_loc
:

190 
pc
 = 
dbg
->
	`decode
(&
p
, dbg->
dbg_poöãr_size
);

191 i‡(
pc_ªq
 < 
pc
)

192 
¥ogøm_d⁄e
;

194 
DW_CFA_adv™˚_loc1
:

195 
pc
 +
dbg
->
	`decode
(&
p
, 1Ë* 
ˇf
;

196 i‡(
pc_ªq
 < 
pc
)

197 
¥ogøm_d⁄e
;

199 
DW_CFA_adv™˚_loc2
:

200 
pc
 +
dbg
->
	`decode
(&
p
, 2Ë* 
ˇf
;

201 i‡(
pc_ªq
 < 
pc
)

202 
¥ogøm_d⁄e
;

204 
DW_CFA_adv™˚_loc4
:

205 
pc
 +
dbg
->
	`decode
(&
p
, 4Ë* 
ˇf
;

206 i‡(
pc_ªq
 < 
pc
)

207 
¥ogøm_d⁄e
;

209 
DW_CFA_off£t_exãnded
:

210 *
row_pc
 = 
pc
;

211 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

212 
uoff
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

213 
	`CHECK_TABLE_SIZE
(
ªg
);

214 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 1;

215 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

216 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

217 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 = 
uoff
 * 
daf
;

219 
DW_CFA_ª°‹e_exãnded
:

220 *
row_pc
 = 
pc
;

221 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

222 
	`CHECK_TABLE_SIZE
(
ªg
);

223 
	`mem˝y
(&
RL
[
ªg
], &
INITRL
[reg],

224 (
Dw¨f_RegèbÀ_E¡ry3
));

226 
DW_CFA_undeföed
:

227 *
row_pc
 = 
pc
;

228 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

229 
	`CHECK_TABLE_SIZE
(
ªg
);

230 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

231 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_undeföed_vÆue
;

233 
DW_CFA_ßme_vÆue
:

234 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

235 
	`CHECK_TABLE_SIZE
(
ªg
);

236 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

237 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_ßme_vÆue
;

239 
DW_CFA_ªgi°î
:

240 *
row_pc
 = 
pc
;

241 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

242 
ªg2
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

243 
	`CHECK_TABLE_SIZE
(
ªg
);

244 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

245 
RL
[
ªg
].
dw_ªgnum
 = 
ªg2
;

247 
DW_CFA_ªmembî_°©e
:

248 
	`_dw¨f_‰ame_ªgèbÀ_c›y
(
dbg
, &
ßved_π
, 
π
, 
îr‹
);

250 
DW_CFA_ª°‹e_°©e
:

251 *
row_pc
 = 
pc
;

252 
	`_dw¨f_‰ame_ªgèbÀ_c›y
(
dbg
, &
π
, 
ßved_π
, 
îr‹
);

254 
DW_CFA_def_cÁ
:

255 *
row_pc
 = 
pc
;

256 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

257 
uoff
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

258 
CFA
.
dw_off£t_ªÀv™t
 = 1;

259 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

260 
CFA
.
dw_ªgnum
 = 
ªg
;

261 
CFA
.
dw_off£t_‹_block_Àn
 = 
uoff
;

263 
DW_CFA_def_cÁ_ªgi°î
:

264 *
row_pc
 = 
pc
;

265 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

266 
CFA
.
dw_ªgnum
 = 
ªg
;

274 
DW_CFA_def_cÁ_off£t
:

275 *
row_pc
 = 
pc
;

276 
uoff
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

277 
CFA
.
dw_off£t_ªÀv™t
 = 1;

278 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

279 
CFA
.
dw_off£t_‹_block_Àn
 = 
uoff
;

281 
DW_CFA_def_cÁ_ex¥essi⁄
:

282 *
row_pc
 = 
pc
;

283 
CFA
.
dw_off£t_ªÀv™t
 = 0;

284 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_EXPRESSION
;

285 
CFA
.
dw_off£t_‹_block_Àn
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

286 
CFA
.
dw_block_±r
 = 
p
;

287 
p
 +
CFA
.
dw_off£t_‹_block_Àn
;

289 
DW_CFA_ex¥essi⁄
:

290 *
row_pc
 = 
pc
;

291 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

292 
	`CHECK_TABLE_SIZE
(
ªg
);

293 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

294 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_EXPRESSION
;

295 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 =

296 
	`_dw¨f_decode_uÀb128
(&
p
);

297 
RL
[
ªg
].
dw_block_±r
 = 
p
;

298 
p
 +
RL
[
ªg
].
dw_off£t_‹_block_Àn
;

300 
DW_CFA_off£t_exãnded_sf
:

301 *
row_pc
 = 
pc
;

302 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

303 
soff
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

304 
	`CHECK_TABLE_SIZE
(
ªg
);

305 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 1;

306 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

307 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

308 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 = 
soff
 * 
daf
;

310 
DW_CFA_def_cÁ_sf
:

311 *
row_pc
 = 
pc
;

312 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

313 
soff
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

314 
CFA
.
dw_off£t_ªÀv™t
 = 1;

315 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

316 
CFA
.
dw_ªgnum
 = 
ªg
;

317 
CFA
.
dw_off£t_‹_block_Àn
 = 
soff
 * 
daf
;

319 
DW_CFA_def_cÁ_off£t_sf
:

320 *
row_pc
 = 
pc
;

321 
soff
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

322 
CFA
.
dw_off£t_ªÀv™t
 = 1;

323 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

324 
CFA
.
dw_off£t_‹_block_Àn
 = 
soff
 * 
daf
;

326 
DW_CFA_vÆ_off£t
:

327 *
row_pc
 = 
pc
;

328 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

329 
uoff
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

330 
	`CHECK_TABLE_SIZE
(
ªg
);

331 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 1;

332 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_VAL_OFFSET
;

333 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

334 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 = 
uoff
 * 
daf
;

336 
DW_CFA_vÆ_off£t_sf
:

337 *
row_pc
 = 
pc
;

338 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

339 
soff
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

340 
	`CHECK_TABLE_SIZE
(
ªg
);

341 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 1;

342 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_VAL_OFFSET
;

343 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

344 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 = 
soff
 * 
daf
;

346 
DW_CFA_vÆ_ex¥essi⁄
:

347 *
row_pc
 = 
pc
;

348 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

349 
	`CHECK_TABLE_SIZE
(
ªg
);

350 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

351 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_VAL_EXPRESSION
;

352 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 =

353 
	`_dw¨f_decode_uÀb128
(&
p
);

354 
RL
[
ªg
].
dw_block_±r
 = 
p
;

355 
p
 +
RL
[
ªg
].
dw_off£t_‹_block_Àn
;

358 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
,

359 
DW_DLE_FRAME_INSTR_EXEC_ERROR
);

360 
ªt
 = 
DW_DLE_FRAME_INSTR_EXEC_ERROR
;

361 
¥ogøm_d⁄e
;

365 
¥ogøm_d⁄e
:

366  (
ªt
);

368 #unde‡
CFA


369 #unde‡
INITCFA


370 #unde‡
RL


371 #unde‡
INITRL


372 #unde‡
CHECK_TABLE_SIZE


373 
	}
}

376 
	$_dw¨f_‰ame_gë_öã∫Æ_èbÀ
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Fde
 
fde
,

377 
Dw¨f_Addr
 
pc_ªq
, 
Dw¨f_RegèbÀ3
 **
ªt_π
,

378 
Dw¨f_Addr
 *
ªt_row_pc
,

379 
Dw¨f_Eº‹
 *
îr‹
)

382 
Dw¨f_Cõ
 
cõ
;

383 
Dw¨f_RegèbÀ3
 *
π
;

384 
Dw¨f_Addr
 
row_pc
;

385 
i
, 
ªt
;

387 
	`as£π
(
ªt_π
 !
NULL
);

390 
	`as£π
(
dbg
 !
NULL
);

392 
π
 = 
dbg
->
dbg_öã∫Æ_ªg_èbÀ
;

395 
	`mem£t
(&
π
->
π3_cÁ_ruÀ
, 0, (
Dw¨f_RegèbÀ_E¡ry3
));

396 
	`mem£t
(
π
->
π3_ruÀs
, 0,Ñt->
π3_ªg_èbÀ_size
 *

397 (
Dw¨f_RegèbÀ_E¡ry3
));

400 
i
 = 0; i < 
π
->
π3_ªg_èbÀ_size
; i++)

401 
π
->
π3_ruÀs
[
i
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_ruÀ_öôül_vÆue
;

404 
cõ
 = 
fde
->
fde_cõ
;

405 
	`as£π
(
cõ
 !
NULL
);

406 
ªt
 = 
	`_dw¨f_‰ame_run_ö°
(
dbg
, 
π
, 
cõ
->
cõ_öôö°
,

407 
cõ
->
cõ_ö°Àn
, cõ->
cõ_ˇf
,

408 
cõ
->
cõ_daf
, 0, ~0ULL,

409 &
row_pc
, 
îr‹
);

410 i‡(
ªt
 !
DW_DLE_NONE
)

411  (
ªt
);

413 i‡(
pc_ªq
 >
fde
->
fde_öôloc
) {

414 
ªt
 = 
	`_dw¨f_‰ame_run_ö°
(
dbg
, 
π
, 
fde
->
fde_ö°
,

415 
fde
->
fde_ö°Àn
, 
cõ
->
cõ_ˇf
,

416 
cõ
->
cõ_daf
,

417 
fde
->
fde_öôloc
, 
pc_ªq
,

418 &
row_pc
, 
îr‹
);

419 i‡(
ªt
 !
DW_DLE_NONE
)

420  (
ªt
);

423 *
ªt_π
 = 
π
;

424 *
ªt_row_pc
 = 
row_pc
;

426  (
DW_DLE_NONE
);

427 
	}
}

431 
	$dw¨f_gë_fde_öfo_f‹_Æl_ªgs
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Fde
 
fde
,

432 
Dw¨f_Addr
 
pc_ªque°ed
,

433 
Dw¨f_RegèbÀ
 *
ªg_èbÀ
, 
Dw¨f_Addr
 *
row_pc
,

434 
Dw¨f_Eº‹
 *
îr‹
)

437 
Dw¨f_RegèbÀ3
 *
π
;

438 
Dw¨f_Addr
 
pc
;

439 
Dw¨f_HÆf
 
cÁ
;

440 
i
, 
ªt
;

442 i‡(
fde
 =
NULL
 || 
ªg_èbÀ
 == NULL) {

443 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_ARGUMENT
);

444  (
DW_DLV_ERROR
);

447 
	`as£π
(
dbg
 !
NULL
);

449 i‡(
pc_ªque°ed
 < 
fde
->
fde_öôloc
 ||

450 
pc_ªque°ed
 >
fde
->
fde_öôloc
 + fde->
fde_adønge
) {

451 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_PC_NOT_IN_FDE_RANGE
);

452  (
DW_DLV_ERROR
);

455 
ªt
 = 
	`_dw¨f_‰ame_gë_öã∫Æ_èbÀ
(
dbg
, 
fde
, 
pc_ªque°ed
, &
π
, &
pc
,

456 
îr‹
);

457 i‡(
ªt
 !
DW_DLE_NONE
)

458  (
DW_DLV_ERROR
);

464 
	#CFA
 
π
->
π3_cÁ_ruÀ


	)

465 
cÁ
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

466 i‡(
cÁ
 < 
DW_REG_TABLE_SIZE
) {

467 
ªg_èbÀ
->
ruÀs
[
cÁ
].
dw_off£t_ªÀv™t
 =

468 
CFA
.
dw_off£t_ªÀv™t
;

469 
ªg_èbÀ
->
ruÀs
[
cÁ
].
dw_vÆue_ty≥
 = 
CFA
.dw_value_type;

470 
ªg_èbÀ
->
ruÀs
[
cÁ
].
dw_ªgnum
 = 
CFA
.dw_regnum;

471 
ªg_èbÀ
->
ruÀs
[
cÁ
].
dw_off£t
 = 
CFA
.
dw_off£t_‹_block_Àn
;

472 
ªg_èbÀ
->
cÁ_ruÀ
 =Ñeg_èbÀ->
ruÀs
[
cÁ
];

474 
ªg_èbÀ
->
cÁ_ruÀ
.
dw_off£t_ªÀv™t
 =

475 
CFA
.
dw_off£t_ªÀv™t
;

476 
ªg_èbÀ
->
cÁ_ruÀ
.
dw_vÆue_ty≥
 = 
CFA
.dw_value_type;

477 
ªg_èbÀ
->
cÁ_ruÀ
.
dw_ªgnum
 = 
CFA
.dw_regnum;

478 
ªg_èbÀ
->
cÁ_ruÀ
.
dw_off£t
 = 
CFA
.
dw_off£t_‹_block_Àn
;

484 
i
 = 0; i < 
DW_REG_TABLE_SIZE
 && i < 
dbg
->
dbg_‰ame_ruÀ_èbÀ_size
;

485 
i
++) {

488 i‡(
i
 =
cÁ
)

491 
ªg_èbÀ
->
ruÀs
[
i
].
dw_off£t_ªÀv™t
 =

492 
π
->
π3_ruÀs
[
i
].
dw_off£t_ªÀv™t
;

493 
ªg_èbÀ
->
ruÀs
[
i
].
dw_vÆue_ty≥
 =

494 
π
->
π3_ruÀs
[
i
].
dw_vÆue_ty≥
;

495 
ªg_èbÀ
->
ruÀs
[
i
].
dw_ªgnum
 = 
π
->
π3_ruÀs
[i].dw_regnum;

496 
ªg_èbÀ
->
ruÀs
[
i
].
dw_off£t
 =

497 
π
->
π3_ruÀs
[
i
].
dw_off£t_‹_block_Àn
;

500 i‡(
row_pc
Ë*row_p¯
pc
;

501  (
DW_DLV_OK
);

502 
	}
}

505 
	$_dw¨f_‰ame_ªad_lsb_ícoded
(
Dw¨f_Debug
 
dbg
, 
uöt64_t
 *
vÆ
, 
uöt8_t
 *
d©a
,

506 
uöt64_t
 *
off£ç
, 
uöt8_t
 
ícode
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
)

508 
uöt8_t
 
≠∂iˇti⁄
;

510 i‡(
ícode
 =
DW_EH_PE_omô
)

511  (
DW_DLE_NONE
);

513 
≠∂iˇti⁄
 = 
ícode
 & 0xf0;

514 
ícode
 &= 0x0f;

516 
ícode
) {

517 
DW_EH_PE_ab•å
:

518 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, dbg->
dbg_poöãr_size
);

520 
DW_EH_PE_uÀb128
:

521 *
vÆ
 = 
	`_dw¨f_ªad_uÀb128
(
d©a
, 
off£ç
);

523 
DW_EH_PE_ud©a2
:

524 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, 2);

526 
DW_EH_PE_ud©a4
:

527 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, 4);

529 
DW_EH_PE_ud©a8
:

530 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, 8);

532 
DW_EH_PE_¶eb128
:

533 *
vÆ
 = 
	`_dw¨f_ªad_¶eb128
(
d©a
, 
off£ç
);

535 
DW_EH_PE_sd©a2
:

536 *
vÆ
 = (
öt16_t
Ë
dbg
->
	`ªad
(
d©a
, 
off£ç
, 2);

538 
DW_EH_PE_sd©a4
:

539 *
vÆ
 = (
öt32_t
Ë
dbg
->
	`ªad
(
d©a
, 
off£ç
, 4);

541 
DW_EH_PE_sd©a8
:

542 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, 8);

545 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_FRAME_AUGMENTATION_UNKNOWN
);

546  (
DW_DLE_FRAME_AUGMENTATION_UNKNOWN
);

549 i‡(
≠∂iˇti⁄
 =
DW_EH_PE_p¸ñ
) {

553 
ícode
) {

554 
DW_EH_PE_uÀb128
:

555 
DW_EH_PE_ud©a2
:

556 
DW_EH_PE_ud©a4
:

557 
DW_EH_PE_ud©a8
:

558 *
vÆ
 +
pc
;

560 
DW_EH_PE_¶eb128
:

561 
DW_EH_PE_sd©a2
:

562 
DW_EH_PE_sd©a4
:

563 
DW_EH_PE_sd©a8
:

564 *
vÆ
 = 
pc
 + (
öt64_t
) *val;

574  (
DW_DLE_NONE
);

575 
	}
}

578 
	$_dw¨f_‰ame_∑r£_lsb_cõ_augmít
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Cõ
 
cõ
,

579 
Dw¨f_Eº‹
 *
îr‹
)

581 
uöt8_t
 *
aug_p
, *
augd©a_p
;

582 
uöt64_t
 
vÆ
, 
off£t
;

583 
uöt8_t
 
ícode
;

584 
ªt
;

586 
	`as£π
(
cõ
->
cõ_augmít
 !
NULL
 && *cie->cie_augment == 'z');

593 
aug_p
 = &
cõ
->
cõ_augmít
[1];

594 
augd©a_p
 = 
cõ
->
cõ_augd©a
;

595 *
aug_p
 != '\0') {

596 *
aug_p
) {

599 
augd©a_p
++;

603 
ícode
 = *
augd©a_p
++;

604 
off£t
 = 0;

605 
ªt
 = 
	`_dw¨f_‰ame_ªad_lsb_ícoded
(
dbg
, &
vÆ
,

606 
augd©a_p
, &
off£t
, 
ícode
, 0, 
îr‹
);

607 i‡(
ªt
 !
DW_DLE_NONE
)

608  (
ªt
);

609 
augd©a_p
 +
off£t
;

612 
cõ
->
cõ_fde_ícode
 = *
augd©a_p
++;

615 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
,

616 
DW_DLE_FRAME_AUGMENTATION_UNKNOWN
);

617  (
DW_DLE_FRAME_AUGMENTATION_UNKNOWN
);

619 
aug_p
++;

622  (
DW_DLE_NONE
);

623 
	}
}

627 
	$_dw¨f_‰ame_£t_cõ
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Se˘i⁄
 *
ds
,

628 
Dw¨f_Unsig√d
 *
off
, 
Dw¨f_Cõ
 
ªt_cõ
, 
Dw¨f_Eº‹
 *
îr‹
)

630 
Dw¨f_Cõ
 
cõ
;

631 
uöt64_t
 
Àngth
;

632 
dw¨f_size
, 
ªt
;

633 *
p
;

635 
	`as£π
(
ªt_cõ
);

636 
cõ
 = 
ªt_cõ
;

638 
cõ
->
cõ_dbg
 = 
dbg
;

639 
cõ
->
cõ_off£t
 = *
off
;

641 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
, 4);

642 i‡(
Àngth
 == 0xffffffff) {

643 
dw¨f_size
 = 8;

644 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
, 8);

646 
dw¨f_size
 = 4;

648 i‡(
Àngth
 > 
dbg
->
dbg_eh_size
 - *
off
) {

649 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

650  (
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

653 (Ë
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
, 
dw¨f_size
);

654 
cõ
->
cõ_Àngth
 = 
Àngth
;

656 
cõ
->
cõ_vîsi⁄
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
, 1);

657 i‡(
cõ
->
cõ_vîsi⁄
 != 1 && cie->cie_version != 3 &&

658 
cõ
->
cõ_vîsi⁄
 != 4) {

659 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_FRAME_VERSION_BAD
);

660  (
DW_DLE_FRAME_VERSION_BAD
);

663 
cõ
->
cõ_augmít
 = (
uöt8_t
 *)
dbg
->
dbg_eh_off£t
 + *
off
;

664 
p
 = (*)
dbg
->
dbg_eh_off£t
;

665 
p
[(*
off
)++] != '\0')

669 i‡(*
cõ
->
cõ_augmít
 != 0 && *cie->cie_augment != 'z') {

670 *
off
 = 
cõ
->
cõ_off£t
 + ((
dw¨f_size
 == 4) ? 4 : 12) +

671 
cõ
->
cõ_Àngth
;

672  (
DW_DLE_NONE
);

676 i‡(
	`°r°r
((*)
cõ
->
cõ_augmít
, "eh"Ë!
NULL
)

677 
cõ
->
cõ_ehd©a
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
,

678 
dbg
->
dbg_poöãr_size
);

680 
cõ
->
cõ_ˇf
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
dbg
->
dbg_eh_off£t
, 
off
);

681 
cõ
->
cõ_daf
 = 
	`_dw¨f_ªad_¶eb128
((
uöt8_t
 *)
dbg
->
dbg_eh_off£t
, 
off
);

684 i‡(
cõ
->
cõ_vîsi⁄
 == 1)

685 
cõ
->
cõ_ø
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
, 1);

687 
cõ
->
cõ_ø
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
dbg
->
dbg_eh_off£t
, 
off
);

690 i‡(*
cõ
->
cõ_augmít
 == 'z') {

691 
cõ
->
cõ_augÀn
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
dbg
->
dbg_eh_off£t
, 
off
);

692 
cõ
->
cõ_augd©a
 = (
uöt8_t
 *)
dbg
->
dbg_eh_off£t
 + *
off
;

693 *
off
 +
cõ
->
cõ_augÀn
;

699 
cõ
->
cõ_fde_ícode
 = 
DW_EH_PE_ab•å
;

700 
ªt
 = 
	`_dw¨f_‰ame_∑r£_lsb_cõ_augmít
(
dbg
, 
cõ
, 
îr‹
);

701 i‡(
ªt
 !
DW_DLE_NONE
)

702  (
ªt
);

706 
cõ
->
cõ_öôö°
 = (
uöt8_t
 *)
dbg
->
dbg_eh_off£t
 + *
off
;

707 i‡(
dw¨f_size
 == 4)

708 
cõ
->
cõ_ö°Àn
 = cõ->
cõ_off£t
 + 4 + 
Àngth
 - *
off
;

710 
cõ
->
cõ_ö°Àn
 = cõ->
cõ_off£t
 + 12 + 
Àngth
 - *
off
;

712 *
off
 +
cõ
->
cõ_ö°Àn
;

713  (
DW_DLE_NONE
);

714 
	}
}

717 
	$_dw¨f_‰ame_£t_fde
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Fde
 
ªt_fde
, 
Dw¨f_Se˘i⁄
 *
ds
,

718 
Dw¨f_Unsig√d
 *
off
, 
eh_‰ame
, 
Dw¨f_Cõ
 
cõ
, 
Dw¨f_Eº‹
 *
îr‹
)

720 
Dw¨f_Fde
 
fde
;

721 
Dw¨f_Unsig√d
 
cõoff
;

722 
uöt64_t
 
Àngth
, 
vÆ
;

723 
dw¨f_size
, 
ªt
;

725 
fde
 = 
ªt_fde
;

726 
fde
->
fde_dbg
 = 
dbg
;

727 
fde
->
fde_addr
 = (
uöt8_t
 *)
dbg
->
dbg_eh_off£t
 + *
off
;

728 
fde
->
fde_off£t
 = *
off
;

730 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
, 4);

731 i‡(
Àngth
 == 0xffffffff) {

732 
dw¨f_size
 = 8;

733 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
, 8);

735 
dw¨f_size
 = 4;

737 i‡(
Àngth
 > 
dbg
->
dbg_eh_size
 - *
off
) {

738 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

739  (
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

742 
fde
->
fde_Àngth
 = 
Àngth
;

744 i‡(
eh_‰ame
) {

745 
fde
->
fde_cõoff
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
, 4);

746 
cõoff
 = *
off
 - (4 + 
fde
->
fde_cõoff
);

748 i‡(
cõoff
 =
fde
->
fde_off£t
) {

749 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_NO_CIE_FOR_FDE
);

750  (
DW_DLE_NO_CIE_FOR_FDE
);

753 
fde
->
fde_cõoff
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
, 
dw¨f_size
);

754 
cõoff
 = 
fde
->
fde_cõoff
;

757 i‡(
eh_‰ame
) {

762 
ªt
 = 
	`_dw¨f_‰ame_ªad_lsb_ícoded
(
dbg
, &
vÆ
,

763 (
uöt8_t
 *)
dbg
->
dbg_eh_off£t
,

764 
off
, 
cõ
->
cõ_fde_ícode
, 
ds
->
ds_addr
 + *off, 
îr‹
);

765 i‡(
ªt
 !
DW_DLE_NONE
)

766  (
ªt
);

767 
fde
->
fde_öôloc
 = 
vÆ
;

772 
ªt
 = 
	`_dw¨f_‰ame_ªad_lsb_ícoded
(
dbg
, &
vÆ
,

773 (
uöt8_t
 *)
dbg
->
dbg_eh_off£t
,

774 
off
, 
cõ
->
cõ_fde_ícode
, 0, 
îr‹
);

775 i‡(
ªt
 !
DW_DLE_NONE
)

776  (
ªt
);

777 
fde
->
fde_adønge
 = 
vÆ
;

779 
fde
->
fde_öôloc
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
,

780 
dbg
->
dbg_poöãr_size
);

781 
fde
->
fde_adønge
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, 
off
,

782 
dbg
->
dbg_poöãr_size
);

786 i‡(
eh_‰ame
 && *
cõ
->
cõ_augmít
 == 'z') {

787 
fde
->
fde_augÀn
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
dbg
->
dbg_eh_off£t
, 
off
);

788 
fde
->
fde_augd©a
 = (
uöt8_t
 *)
dbg
->
dbg_eh_off£t
 + *
off
;

789 *
off
 +
fde
->
fde_augÀn
;

792 
fde
->
fde_ö°
 = (
uöt8_t
 *)
dbg
->
dbg_eh_off£t
 + *
off
;

793 i‡(
dw¨f_size
 == 4)

794 
fde
->
fde_ö°Àn
 = fde->
fde_off£t
 + 4 + 
Àngth
 - *
off
;

796 
fde
->
fde_ö°Àn
 = fde->
fde_off£t
 + 12 + 
Àngth
 - *
off
;

798 *
off
 +
fde
->
fde_ö°Àn
;

799  (
DW_DLE_NONE
);

800 
	}
}

804 
	$_dw¨f_‰ame_öãøl_èbÀ_öô
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Eº‹
 *
îr‹
)

806 
Dw¨f_RegèbÀ3
 *
π
 = &
globÆ_π_èbÀ
;

808 i‡(
dbg
->
dbg_öã∫Æ_ªg_èbÀ
 !
NULL
)

809  (
DW_DLE_NONE
);

811 
π
->
π3_ªg_èbÀ_size
 = 
dbg
->
dbg_‰ame_ruÀ_èbÀ_size
;

812 
π
->
π3_ruÀs
 = 
globÆ_ruÀs
;

814 
dbg
->
dbg_öã∫Æ_ªg_èbÀ
 = 
π
;

816  (
DW_DLE_NONE
);

817 
	}
}

820 
	$_dw¨f_gë_√xt_fde
(
Dw¨f_Debug
 
dbg
,

821 
eh_‰ame
, 
Dw¨f_Eº‹
 *
îr‹
, 
Dw¨f_Fde
 
ªt_fde
)

823 
Dw¨f_Se˘i⁄
 *
ds
 = &
debug_‰ame_£c
;

824 
uöt64_t
 
Àngth
, 
off£t
, 
cõ_id
, 
íåy_off
;

825 
dw¨f_size
, 
i
, 
ªt
=-1;

827 
off£t
 = 
dbg
->
cuº_off_eh
;

828 i‡(
off£t
 < 
dbg
->
dbg_eh_size
) {

829 
íåy_off
 = 
off£t
;

830 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, &
off£t
, 4);

831 i‡(
Àngth
 == 0xffffffff) {

832 
dw¨f_size
 = 8;

833 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, &
off£t
, 8);

835 
dw¨f_size
 = 4;

837 i‡(
Àngth
 > 
dbg
->
dbg_eh_size
 - 
off£t
 || (Àngth =0 && !
eh_‰ame
)) {

838 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
,

839 
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

840  (
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

844 i‡(
eh_‰ame
 && 
Àngth
 == 0)

847 
cõ_id
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_eh_off£t
, &
off£t
, 
dw¨f_size
);

849 i‡(
eh_‰ame
) {

851 i‡(
cõ_id
 == 0)

852 
ªt
 = 
	`_dw¨f_‰ame_£t_cõ
(
dbg
, 
ds
,

853 &
íåy_off
, 
ªt_fde
->
fde_cõ
, 
îr‹
);

855 
ªt
 = 
	`_dw¨f_‰ame_£t_fde
(
dbg
,
ªt_fde
, 
ds
,

856 &
íåy_off
, 1, 
ªt_fde
->
fde_cõ
, 
îr‹
);

859 i‡((
dw¨f_size
 =4 && 
cõ_id
 == ~0U) ||

860 (
dw¨f_size
 =8 && 
cõ_id
 == ~0ULL))

861 
ªt
 = 
	`_dw¨f_‰ame_£t_cõ
(
dbg
, 
ds
,

862 &
íåy_off
, 
ªt_fde
->
fde_cõ
, 
îr‹
);

864 
ªt
 = 
	`_dw¨f_‰ame_£t_fde
(
dbg
, 
ªt_fde
, 
ds
,

865 &
íåy_off
, 0, 
ªt_fde
->
fde_cõ
, 
îr‹
);

868 i‡(
ªt
 !
DW_DLE_NONE
)

871 
off£t
 = 
íåy_off
;

872 
dbg
->
cuº_off_eh
 = 
off£t
;

876 
	}
}

878 
Dw¨f_HÆf


879 
	$dw¨f_£t_‰ame_cÁ_vÆue
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_HÆf
 
vÆue
)

881 
Dw¨f_HÆf
 
ﬁd_vÆue
;

883 
ﬁd_vÆue
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

884 
dbg
->
dbg_‰ame_cÁ_vÆue
 = 
vÆue
;

886  (
ﬁd_vÆue
);

887 
	}
}

889 
	$dw¨f_öô_eh_£˘i⁄
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Eº‹
 *
îr‹
)

891 
Dw¨f_Se˘i⁄
 *
£˘i⁄
;

893 i‡(
dbg
 =
NULL
) {

894 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_ARGUMENT
);

895  (
DW_DLV_ERROR
);

898 i‡(
dbg
->
dbg_öã∫Æ_ªg_èbÀ
 =
NULL
) {

899 i‡(
	`_dw¨f_‰ame_öãøl_èbÀ_öô
(
dbg
, 
îr‹
Ë!
DW_DLE_NONE
)

900  (
DW_DLV_ERROR
);

903 
	`_dw¨f_föd_£˘i⁄_íh™˚d
(&
debug_‰ame_£c
);

905 
dbg
->
cuº_off_eh
 = 0;

906 
dbg
->
dbg_eh_off£t
 = 
debug_‰ame_£c
.
ds_addr
;

907 
dbg
->
dbg_eh_size
 = 
debug_‰ame_£c
.
ds_size
;

909  (
DW_DLV_OK
);

910 
	}
}

	@libdwarf_lineno.c

27 
	~<öc/ty≥s.h
>

28 
	~<öc/°rög.h
>

29 
	~<öc/as£π.h
>

30 
	~"dw¨f_ñf.h
"

31 
	~"dw¨f_deföe.h
"

32 
	~"dw¨f_îr‹.h
"

33 
	~"dw¨f.h
"

35 
	~"dw¨f_löío.h
"

37 
Dw¨f_Debug
 
dbg
;

38 
Dw¨f_SmÆl
 
	gglobÆ_°d_›
[512];

40 
öt64_t


41 
_dw¨f_ªad_¶eb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

42 
uöt64_t


43 
_dw¨f_ªad_uÀb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

44 
uöt64_t


45 
_dw¨f_decode_uÀb128
(
uöt8_t
 **
dp
);

46 
öt64_t


47 
_dw¨f_decode_¶eb128
(
uöt8_t
 **
dp
);

48 
_dw¨f_föd_£˘i⁄_íh™˚d
(
Dw¨f_Se˘i⁄
 *
ds
);

51 
	$_dw¨f_löío_run_¥ogøm
(
Dw¨f_CU
 *
cu
, 
Dw¨f_LöeInfo
 
li
, 
uöt8_t
 *
p
,

52 
uöt8_t
 *
≥
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
)

54 
Dw¨f_Löe
 
 
, 
én
;

55 
uöt64_t
 
addªss
, 
fûe
, 
löe
, 
cﬁumn
, 
iß
, 
›size
;

56 
is_°mt
, 
basic_block
, 
íd_£quí˚
;

57 
¥ﬁogue_íd
, 
ïûogue_begö
;

58 
ªt
;

60 
 
 = &
li
->
li_löe
;

61 
	#RESET_REGISTERS
 \

63 
addªss
 = 0; \

64 
fûe
 = 1; \

65 
löe
 = 1; \

66 
cﬁumn
 = 0; \

67 
is_°mt
 = 
li
->
li_def°mt
; \

68 
basic_block
 = 0; \

69 
íd_£quí˚
 = 0; \

70 
¥ﬁogue_íd
 = 0; \

71 
ïûogue_begö
 = 0; \

72 } 0)

	)

74 
	#APPEND_ROW
 \

76 i‡(
pc
 < 
addªss
) { \

77  
DW_DLE_NONE
; \

79 
 
->
 _addr
 = 
addªss
; \

80 
 
->
 _symndx
 = 0; \

81 
 
->
 _fûío
 = 
fûe
; \

82 
 
->
 _löío
 = 
löe
; \

83 
 
->
 _cﬁumn
 = 
cﬁumn
; \

84 
 
->
 _bblock
 = 
basic_block
; \

85 
 
->
 _°mt
 = 
is_°mt
; \

86 
 
->
 _íd£q
 = 
íd_£quí˚
; \

87 
li
->
li_ Àn
++; \

88 } 0)

	)

90 
	#LINE
(
x
Ë(
li
->
li_lba£
 + (((xË-Üi->
li_›ba£
Ë%Üi->
li_Ã™ge
))

	)

91 
	#ADDRESS
(
x
Ë((((xË- 
li
->
li_›ba£
Ë/Üi->
li_Ã™ge
Ë*Üi->
li_möÀn
)

	)

97 
RESET_REGISTERS
;

102 
p
 < 
≥
) {

103 i‡(*
p
 == 0) {

109 
p
++;

110 
›size
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

111 *
p
) {

112 
DW_LNE_íd_£quí˚
:

113 
p
++;

114 
íd_£quí˚
 = 1;

115 
RESET_REGISTERS
;

117 
DW_LNE_£t_addªss
:

118 
p
++;

119 
addªss
 = 
dbg
->
	`decode
(&
p
, 
cu
->
addr_size
);

121 
DW_LNE_deföe_fûe
:

122 
p
++;

123 
ªt
 = 
	`_dw¨f_löío_add_fûe
(
li
, &
p
, 
NULL
,

124 
îr‹
, 
dbg
);

125 i‡(
ªt
 !
DW_DLE_NONE
)

126 
¥og_Áû
;

130 
p
 +
›size
;

133 } i‡(*
p
 > 0 && *∞< 
li
->
li_›ba£
) {

139 *
p
++) {

140 
DW_LNS_c›y
:

141 
APPEND_ROW
;

142 
basic_block
 = 0;

143 
¥ﬁogue_íd
 = 0;

144 
ïûogue_begö
 = 0;

146 
DW_LNS_adv™˚_pc
:

147 
addªss
 +
	`_dw¨f_decode_uÀb128
(&
p
) *

148 
li
->
li_möÀn
;

150 
DW_LNS_adv™˚_löe
:

151 
löe
 +
	`_dw¨f_decode_¶eb128
(&
p
);

153 
DW_LNS_£t_fûe
:

154 
fûe
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

156 
DW_LNS_£t_cﬁumn
:

157 
cﬁumn
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

159 
DW_LNS_√g©e_°mt
:

160 
is_°mt
 = !is_stmt;

162 
DW_LNS_£t_basic_block
:

163 
basic_block
 = 1;

165 
DW_LNS_c⁄°_add_pc
:

166 
addªss
 +
	`ADDRESS
(255);

168 
DW_LNS_fixed_adv™˚_pc
:

169 
addªss
 +
dbg
->
	`decode
(&
p
, 2);

171 
DW_LNS_£t_¥ﬁogue_íd
:

172 
¥ﬁogue_íd
 = 1;

174 
DW_LNS_£t_ïûogue_begö
:

175 
ïûogue_begö
 = 1;

177 
DW_LNS_£t_iß
:

178 
iß
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

191 
löe
 +
	`LINE
(*
p
);

192 
addªss
 +
	`ADDRESS
(*
p
);

193 
APPEND_ROW
;

194 
basic_block
 = 0;

195 
¥ﬁogue_íd
 = 0;

196 
ïûogue_begö
 = 0;

197 
p
++;

201  (
DW_DLE_NONE
);

203 
¥og_Áû
:

205  (
ªt
);

207 #unde‡
RESET_REGISTERS


208 #unde‡
APPEND_ROW


209 #unde‡
LINE


210 #unde‡
ADDRESS


211 
	}
}

214 
	$_dw¨f_löío_add_fûe
(
Dw¨f_LöeInfo
 
li
, 
uöt8_t
 **
p
, c⁄° *
compdú
,

215 
Dw¨f_Eº‹
 *
îr‹
, 
Dw¨f_Debug
 
dbg
)

217 *
‚ame
;

219 
uöt8_t
 *
§c
;

220 
¶í
;

222 
§c
 = *
p
;

230 
‚ame
 = (*Ë
§c
;

231 
§c
 +
	`°æí
(
‚ame
) + 1;

232 
	`_dw¨f_decode_uÀb128
(&
§c
);

251 
	`_dw¨f_decode_uÀb128
(&
§c
);

252 
	`_dw¨f_decode_uÀb128
(&
§c
);

256 *
p
 = 
§c
;

258  (
DW_DLE_NONE
);

259 
	}
}

262 
	$_dw¨f_löío_öô
(
Dw¨f_Dõ
 *
dõ
, 
uöt64_t
 
off£t
, 
Dw¨f_LöeInfo
 
löfo
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
)

264 
Dw¨f_Se˘i⁄
 
myds
 = {.
ds_«me
 = ".debug_line"};

265 
Dw¨f_Se˘i⁄
 *
ds
 = &
myds
;

266 
Dw¨f_CU
 *
cu
;

267 
Dw¨f_Aâribuã
 
©
;

268 
Dw¨f_LöeInfo
 
li
;

270 
uöt64_t
 
Àngth
, 
hdroff
, 
ídoff
;

271 
uöt8_t
 *
p
;

272 
dw¨f_size
, 
i
, 
ªt
;

274 
cu
 = 
dõ
->
cu_hódî
;

275 
	`as£π
(
cu
 !
NULL
);

276 
	`as£π
(
dbg
 !
NULL
);

278 i‡((
	`_dw¨f_föd_£˘i⁄_íh™˚d
(
ds
)) != 0)

279  (
DW_DLE_NONE
);

281 
li
 = 
löfo
;

301 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 4);

302 i‡(
Àngth
 == 0xffffffff) {

303 
dw¨f_size
 = 8;

304 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 8);

306 
dw¨f_size
 = 4;

308 i‡(
Àngth
 > 
ds
->
ds_size
 - 
off£t
) {

309 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_DEBUG_LINE_LENGTH_BAD
);

310  (
DW_DLE_DEBUG_LINE_LENGTH_BAD
);

315 
li
->
li_Àngth
 = 
Àngth
;

316 
ídoff
 = 
off£t
 + 
Àngth
;

317 
li
->
li_vîsi⁄
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 2);

318 
li
->
li_hdæí
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 
dw¨f_size
);

319 
hdroff
 = 
off£t
;

320 
li
->
li_möÀn
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

321 
li
->
li_def°mt
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

322 
li
->
li_lba£
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

323 
li
->
li_Ã™ge
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

324 
li
->
li_›ba£
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

328 i‡(()
li
->
li_hdæí
 - 5 <Üi->
li_›ba£
 - 1) {

329 
ªt
 = 
DW_DLE_DEBUG_LINE_LENGTH_BAD
;

330 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
ªt
);

331 
Áû_˛ónup
;

334 
li
->
li_›Àn
 = 
globÆ_°d_›
;

345 
i
 = 1; i < 
li
->
li_›ba£
; i++)

346 
li
->
li_›Àn
[
i
] = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

351 
Àngth
 = 0;

352 
p
 = 
ds
->
ds_d©a
 + 
off£t
;

353 *
p
 != '\0') {

354 *
p
++ != '\0')

356 
Àngth
++;

358 
li
->
li_ö˛í
 = 
Àngth
;

361 i‡(
p
 - 
ds
->
ds_d©a
 > (Ëds->
ds_size
) {

362 
ªt
 = 
DW_DLE_DEBUG_LINE_LENGTH_BAD
;

363 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
ªt
);

364 
Áû_˛ónup
;

366 
p
++;

371 *
p
 != '\0') {

372 
ªt
 = 
	`_dw¨f_löío_add_fûe
(
li
, &
p
, 
NULL
, 
îr‹
, 
dbg
);

376 
p
++;

378 i‡(
p
 - 
ds
->
ds_d©a
 - 
hdroff
 !
li
->
li_hdæí
) {

379 
ªt
 = 
DW_DLE_DEBUG_LINE_LENGTH_BAD
;

380 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
ªt
);

381 
Áû_˛ónup
;

387 
ªt
 = 
	`_dw¨f_löío_run_¥ogøm
(
cu
, 
li
, 
p
, 
ds
->
ds_d©a
 + 
ídoff
, 
pc
,

388 
îr‹
);

389 i‡(
ªt
 !
DW_DLE_NONE
)

390 
Áû_˛ónup
;

394  (
DW_DLE_NONE
);

396 
Áû_˛ónup
:

401  (
ªt
);

402 
	}
}

405 
	$dw¨f_§˛öes
(
Dw¨f_Dõ
 *
dõ
, 
Dw¨f_Löe
 
löebuf
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
)

407 
_Dw¨f_LöeInfo
 
li
;

408 
Dw¨f_Aâribuã
 *
©
;

410 
	`as£π
(
dõ
);

411 
	`as£π
(
löebuf
);

413 
	`mem£t
(&
li
, 0, (
_Dw¨f_LöeInfo
));

415 i‡((
©
 = 
	`_dw¨f_©å_föd
(
dõ
, 
DW_AT_°mt_li°
)Ë=
NULL
) {

416 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_NO_ENTRY
);

417  (
DW_DLV_NO_ENTRY
);

420 i‡(
	`_dw¨f_löío_öô
(
dõ
, 
©
->
u
[0].
u64
, &
li
, 
pc
, 
îr‹
) !=

421 
DW_DLE_NONE
)

423  (
DW_DLV_ERROR
);

425 *
löebuf
 = 
li
.
li_löe
;

427  (
DW_DLV_OK
);

428 
	}
}

	@libdwarf_rw.c

27 
	~<öc/°dio.h
>

28 
	~<öc/as£π.h
>

29 
	~<öc/ty≥s.h
>

30 
	~<öc/°rög.h
>

31 
	~"dw¨f_ñf.h
"

32 
	~"dw¨f_deföe.h
"

33 
	~"dw¨f_îr‹.h
"

34 
	~"dw¨f.h
"

37 
Dw¨f_Aâribuã
* 
_dw¨f_©å_föd
(
Dw¨f_Dõ
 *
dõ
, 
uöt16_t
 
©å
);

38 * 
ñf_ba£_±r
;

40 
_dw¨f_‰ame_∑øms_öô
(
Dw¨f_Debug
 
dbg
);

42 
Dw¨f_Se˘i⁄
 *

43 
_dw¨f_föd_£˘i⁄
(c⁄° *
«me
);

45 
uöt64_t


46 
	$_dw¨f_ªad_lsb
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
, 
byãs_to_ªad
)

48 
uöt64_t
 
ªt
;

49 
uöt8_t
 *
§c
;

51 
§c
 = 
d©a
 + *
off£ç
;

53 
ªt
 = 0;

54 
byãs_to_ªad
) {

56 
ªt
 |((
uöt64_t
Ë
§c
[4]) << 32 | ((uint64_t) src[5]) << 40;

57 
ªt
 |((
uöt64_t
Ë
§c
[6]) << 48 | ((uint64_t) src[7]) << 56;

59 
ªt
 |((
uöt64_t
Ë
§c
[2]) << 16 | ((uint64_t) src[3]) << 24;

61 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 8;

63 
ªt
 |
§c
[0];

69 *
off£ç
 +
byãs_to_ªad
;

71  (
ªt
);

72 
	}
}

74 
uöt64_t


75 
	$_dw¨f_decode_lsb
(
uöt8_t
 **
d©a
, 
byãs_to_ªad
)

77 
uöt64_t
 
ªt
;

78 
uöt8_t
 *
§c
;

80 
§c
 = *
d©a
;

82 
ªt
 = 0;

83 
byãs_to_ªad
) {

85 
ªt
 |((
uöt64_t
Ë
§c
[4]) << 32 | ((uint64_t) src[5]) << 40;

86 
ªt
 |((
uöt64_t
Ë
§c
[6]) << 48 | ((uint64_t) src[7]) << 56;

88 
ªt
 |((
uöt64_t
Ë
§c
[2]) << 16 | ((uint64_t) src[3]) << 24;

90 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 8;

92 
ªt
 |
§c
[0];

98 *
d©a
 +
byãs_to_ªad
;

100  (
ªt
);

101 
	}
}

103 
uöt64_t


104 
	$_dw¨f_ªad_msb
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
, 
byãs_to_ªad
)

106 
uöt64_t
 
ªt
;

107 
uöt8_t
 *
§c
;

109 
§c
 = 
d©a
 + *
off£ç
;

111 
byãs_to_ªad
) {

113 
ªt
 = 
§c
[0];

116 
ªt
 = 
§c
[1] | ((
uöt64_t
) src[0]) << 8;

119 
ªt
 = 
§c
[3] | ((
uöt64_t
) src[2]) << 8;

120 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 16 | ((uint64_t) src[0]) << 24;

123 
ªt
 = 
§c
[7] | ((
uöt64_t
) src[6]) << 8;

124 
ªt
 |((
uöt64_t
Ë
§c
[5]) << 16 | ((uint64_t) src[4]) << 24;

125 
ªt
 |((
uöt64_t
Ë
§c
[3]) << 32 | ((uint64_t) src[2]) << 40;

126 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 48 | ((uint64_t) src[0]) << 56;

132 *
off£ç
 +
byãs_to_ªad
;

134  (
ªt
);

135 
	}
}

137 
uöt64_t


138 
	$_dw¨f_decode_msb
(
uöt8_t
 **
d©a
, 
byãs_to_ªad
)

140 
uöt64_t
 
ªt
;

141 
uöt8_t
 *
§c
;

143 
§c
 = *
d©a
;

145 
ªt
 = 0;

146 
byãs_to_ªad
) {

148 
ªt
 = 
§c
[0];

151 
ªt
 = 
§c
[1] | ((
uöt64_t
) src[0]) << 8;

154 
ªt
 = 
§c
[3] | ((
uöt64_t
) src[2]) << 8;

155 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 16 | ((uint64_t) src[0]) << 24;

158 
ªt
 = 
§c
[7] | ((
uöt64_t
) src[6]) << 8;

159 
ªt
 |((
uöt64_t
Ë
§c
[5]) << 16 | ((uint64_t) src[4]) << 24;

160 
ªt
 |((
uöt64_t
Ë
§c
[3]) << 32 | ((uint64_t) src[2]) << 40;

161 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 48 | ((uint64_t) src[0]) << 56;

168 *
d©a
 +
byãs_to_ªad
;

170  (
ªt
);

171 
	}
}

173 
öt64_t


174 
	$_dw¨f_ªad_¶eb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
)

176 
öt64_t
 
ªt
 = 0;

177 
uöt8_t
 
b
;

178 
shi·
 = 0;

179 
uöt8_t
 *
§c
;

181 
§c
 = 
d©a
 + *
off£ç
;

184 
b
 = *
§c
++;

185 
ªt
 |((
b
 & 0x7fË<< 
shi·
);

186 (*
off£ç
)++;

187 
shi·
 += 7;

188 } (
b
 & 0x80) != 0);

190 i‡(
shi·
 < 32 && (
b
 & 0x40) != 0)

191 
ªt
 |(-1 << 
shi·
);

193  (
ªt
);

194 
	}
}

196 
uöt64_t


197 
	$_dw¨f_ªad_uÀb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
)

199 
uöt64_t
 
ªt
 = 0;

200 
uöt8_t
 
b
;

201 
shi·
 = 0;

202 
uöt8_t
 *
§c
;

204 
§c
 = 
d©a
 + *
off£ç
;

207 
b
 = *
§c
++;

208 
ªt
 |((
b
 & 0x7fË<< 
shi·
);

209 (*
off£ç
)++;

210 
shi·
 += 7;

211 } (
b
 & 0x80) != 0);

213  (
ªt
);

214 
	}
}

216 
öt64_t


217 
	$_dw¨f_decode_¶eb128
(
uöt8_t
 **
dp
)

219 
öt64_t
 
ªt
 = 0;

220 
uöt8_t
 
b
;

221 
shi·
 = 0;

223 
uöt8_t
 *
§c
 = *
dp
;

226 
b
 = *
§c
++;

227 
ªt
 |((
b
 & 0x7fË<< 
shi·
);

228 
shi·
 += 7;

229 } (
b
 & 0x80) != 0);

231 i‡(
shi·
 < 32 && (
b
 & 0x40) != 0)

232 
ªt
 |(-1 << 
shi·
);

234 *
dp
 = 
§c
;

236  (
ªt
);

237 
	}
}

239 
uöt64_t


240 
	$_dw¨f_decode_uÀb128
(
uöt8_t
 **
dp
)

242 
uöt64_t
 
ªt
 = 0;

243 
uöt8_t
 
b
;

244 
shi·
 = 0;

246 
uöt8_t
 *
§c
 = *
dp
;

249 
b
 = *
§c
++;

250 
ªt
 |((
b
 & 0x7fË<< 
shi·
);

251 
shi·
 += 7;

252 } (
b
 & 0x80) != 0);

254 *
dp
 = 
§c
;

256  (
ªt
);

257 
	}
}

259 
	#Dw¨f_Unsig√d
 
uöt64_t


	)

262 
	$_dw¨f_ªad_°rög
(*
d©a
, 
Dw¨f_Unsig√d
 
size
, 
uöt64_t
 *
off£ç
)

264 *
ªt
, *
§c
;

266 
ªt
 = 
§c
 = (*Ë
d©a
 + *
off£ç
;

268 *
§c
 !'\0' && *
off£ç
 < 
size
) {

269 
§c
++;

270 (*
off£ç
)++;

273 i‡(*
§c
 ='\0' && *
off£ç
 < 
size
)

274 (*
off£ç
)++;

276  (
ªt
);

277 
	}
}

279 
uöt8_t
 *

280 
	$_dw¨f_ªad_block
(*
d©a
, 
uöt64_t
 *
off£ç
, uöt64_à
Àngth
)

282 
uöt8_t
 *
ªt
, *
§c
;

284 
ªt
 = 
§c
 = (
uöt8_t
 *Ë
d©a
 + *
off£ç
;

286 (*
off£ç
Ë+
Àngth
;

288  (
ªt
);

289 
	}
}

291 
Dw¨f_Endü¬ess


292 
	$_dw¨f_ñf_gë_byã_‹dî
(*
obj
)

294 
Elf
 *
e
;

296 
e
 = (
Elf
 *)
obj
;

297 
	`as£π
(
e
 !
NULL
);

302 
e
->
e_idít
[
EI_DATA
]) {

303 
ELFDATA2MSB
:

304  (
DW_OBJECT_MSB
);

306 
ELFDATA2LSB
:

307 
ELFDATANONE
:

309  (
DW_OBJECT_LSB
);

311 
	}
}

313 
Dw¨f_SmÆl


314 
	$_dw¨f_ñf_gë_poöãr_size
(*
obj
)

316 
Elf
 *
e
;

318 
e
 = (
Elf
 *Ë
obj
;

319 
	`as£π
(
e
 !
NULL
);

321 i‡(
e
->
e_idít
[4] =
ELFCLASS32
)

325 
	}
}

328 
	$_dw¨f_öô
(
Dw¨f_Debug
 
dbg
, *
obj
)

330 
	`mem£t
(
dbg
, 0, (
_Dw¨f_Debug
));

331 
dbg
->
cuº_off_dbgöfo
 = 0;

332 
dbg
->
dbg_öfo_size
 = 0;

333 
dbg
->
dbg_poöãr_size
 = 
	`_dw¨f_ñf_gë_poöãr_size
(
obj
);

335 i‡(
	`_dw¨f_ñf_gë_byã_‹dî
(
obj
Ë=
DW_OBJECT_MSB
) {

336 
dbg
->
ªad
 = 
_dw¨f_ªad_msb
;

337 
dbg
->
decode
 = 
_dw¨f_decode_msb
;

339 
dbg
->
ªad
 = 
_dw¨f_ªad_lsb
;

340 
dbg
->
decode
 = 
_dw¨f_decode_lsb
;

342 
	`_dw¨f_‰ame_∑øms_öô
(
dbg
);

344 
	}
}

347 
	$_gë_√xt_cu
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 *
cu
)

349 
uöt32_t
 
Àngth
;

350 
uöt64_t
 
off£t
;

351 
uöt8_t
 
dw¨f_size
;

353 if(
dbg
->
cuº_off_dbgöfo
 > dbg->
dbg_öfo_size
)

356 
off£t
 = 
dbg
->
cuº_off_dbgöfo
;

357 
cu
->
cu_off£t
 = 
off£t
;

359 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
,4);

360 i‡(
Àngth
 == 0xffffffff) {

361 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
, 8);

362 
dw¨f_size
 = 8;

364 
dw¨f_size
 = 4;

367 
cu
->
cu_dw¨f_size
 = 
dw¨f_size
;

379 
dbg
->
cuº_off_dbgöfo
 = 
off£t
 + 
Àngth
;

380 
cu
->
cu_√xt_off£t
 = 
dbg
->
cuº_off_dbgöfo
;

383 
cu
->
cu_Àngth
 = (
uöt64_t
)
Àngth
;

385 
cu
->
cu_Àngth_size
 = (
dw¨f_size
 == 4 ? 4 : 12);

386 
cu
->
vîsi⁄
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
, 2);

387 
cu
->
debug_abbªv_off£t
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
, 
dw¨f_size
);

389 
cu
->
addr_size
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
, 1);

391 i‡(
cu
->
vîsi⁄
 < 2 || cu->version > 4) {

395 
cu
->
cu_dõ_off£t
 = 
off£t
;

398 
	}
}

400 
	$¥öt_cu
(
Dw¨f_CU
 
cu
)

402 
	`˝rötf
("%ld---%du--%d\n",
cu
.
cu_Àngth
,cu.
vîsi⁄
,cu.
addr_size
);

403 
	}
}

407 
	$_dw¨f_abbªv_∑r£
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 
cu
, 
Dw¨f_Unsig√d
 *
off£t
,

408 
Dw¨f_Abbªv
 *
abp
, 
Dw¨f_Se˘i⁄
 *
ds
)

410 
uöt64_t
 
©å
;

411 
uöt64_t
 
íåy
;

412 
uöt64_t
 
f‹m
;

413 
uöt64_t
 
aboff
;

414 
uöt64_t
 
adoff
;

415 
uöt64_t
 
èg
;

416 
uöt8_t
 
chûdªn
;

417 
uöt64_t
 
abbr_addr
;

418 
ªt
;

420 
	`as£π
(
abp
 !
NULL
);

421 
	`as£π
(
ds
 !
NULL
);

423 i‡(*
off£t
 >
ds
->
ds_size
)

424  (
DW_DLE_NO_ENTRY
);

426 
aboff
 = *
off£t
;

428 
abbr_addr
 = (
uöt64_t
)
ds
->
ds_d©a
;

430 
íåy
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
abbr_addr
, 
off£t
);

432 i‡(
íåy
 == 0) {

435 
abp
->
ab_íåy
 = 0;

436  
DW_DLE_NONE
;

439 
èg
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
abbr_addr
, 
off£t
);

440 
chûdªn
 = 
dbg
->
	`ªad
((
uöt8_t
 *)
abbr_addr
, 
off£t
, 1);

442 
abp
->
ab_íåy
 = 
íåy
;

443 
abp
->
ab_èg
 = 
èg
;

444 
abp
->
ab_chûdªn
 = 
chûdªn
;

445 
abp
->
ab_off£t
 = 
aboff
;

446 
abp
->
ab_Àngth
 = 0;

447 
abp
->
ab_©num
 = 0;

451 
adoff
 = *
off£t
;

452 
©å
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
abbr_addr
, 
off£t
);

453 
f‹m
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
abbr_addr
, 
off£t
);

454 i‡(
©å
 != 0)

457 
abp
->
ab_©ådef
[abp->
ab_©num
].
ad_©åib
 = 
©å
;

458 
abp
->
ab_©ådef
[abp->
ab_©num
].
ad_f‹m
 = 
f‹m
;

459 
abp
->
ab_©ådef
[abp->
ab_©num
].
ad_off£t
 = 
adoff
;

460 
abp
->
ab_©num
++;

462 } 
©å
 != 0);

465 
abp
->
ab_Àngth
 = (
uöt64_t
)(*
off£t
 - 
aboff
);

467  
DW_DLV_OK
;

468 
	}
}

472 
	$_dw¨f_abbªv_föd
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 
cu
, 
uöt64_t
 
íåy
, 
Dw¨f_Abbªv
 *
abp
)

474 
Dw¨f_Se˘i⁄
 *
ds
;

475 
uöt64_t
 
off£t
;

476 
ªt
;

478 i‡(
íåy
 == 0)

480  (
DW_DLE_NO_ENTRY
);

484 
ds
 = 
	`_dw¨f_föd_£˘i⁄
(".debug_abbrev");

485 
	`as£π
(
ds
 !
NULL
);

491 
off£t
 = 
cu
.
debug_abbªv_off£t
;

492 
off£t
 < 
ds
->
ds_size
) {

493 
ªt
 = 
	`_dw¨f_abbªv_∑r£
(
dbg
, 
cu
, &
off£t
, 
abp
, 
ds
);

494 i‡(
ªt
 !
DW_DLE_NONE
)

495  (
ªt
);

496 i‡(
abp
->
ab_íåy
 =
íåy
) {

498  
DW_DLE_NONE
;

500 i‡(
abp
->
ab_íåy
 == 0) {

507  
DW_DLE_NO_ENTRY
;

508 
	}
}

512 
	$_dw¨f_©å_öô
(
Dw¨f_Debug
 
dbg
, 
uöt64_t
 *
off£ç
, 
Dw¨f_CU
 *
cu
, 
Dw¨f_Dõ
 *
ªt_dõ
, 
Dw¨f_AârDef
 *
ad
,

513 
uöt64_t
 
f‹m
, 
ödúe˘
)

515 
_Dw¨f_Aâribuã
 
©ªf
;

516 
Dw¨f_Se˘i⁄
 *
°r
;

517 
ªt
;

518 
Dw¨f_Se˘i⁄
 *
ds
 = 
	`_dw¨f_föd_£˘i⁄
(".debug_info");

519 
uöt8_t
 *
ds_d©a
 = (uöt8_à*)
ds
->ds_data;

520 
uöt8_t
 
dw¨f_size
 = 
cu
->
cu_dw¨f_size
;

522 
ªt
 = 
DW_DLE_NONE
;

523 
	`mem£t
(&
©ªf
, 0, (atref));

524 
©ªf
.
©_dõ
 = 
ªt_dõ
;

525 
©ªf
.
©_©åib
 = 
ad
->
ad_©åib
;

526 
©ªf
.
©_f‹m
 = 
ad
->
ad_f‹m
;

527 
©ªf
.
©_ödúe˘
 = 
ödúe˘
;

528 
©ªf
.
©_ld
 = 
NULL
;

530 
f‹m
) {

531 
DW_FORM_addr
:

532 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
cu
->
addr_size
);

534 
DW_FORM_block
:

535 
DW_FORM_ex¥loc
:

536 
©ªf
.
u
[0].
u64
 = 
	`_dw¨f_ªad_uÀb128
(
ds_d©a
, 
off£ç
);

537 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
);

539 
DW_FORM_block1
:

540 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 1);

541 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
);

543 
DW_FORM_block2
:

544 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 2);

545 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
);

547 
DW_FORM_block4
:

548 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 4);

549 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
);

551 
DW_FORM_d©a1
:

552 
DW_FORM_Êag
:

553 
DW_FORM_ªf1
:

554 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 1);

556 
DW_FORM_d©a2
:

557 
DW_FORM_ªf2
:

558 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 2);

560 
DW_FORM_d©a4
:

561 
DW_FORM_ªf4
:

562 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 4);

564 
DW_FORM_d©a8
:

565 
DW_FORM_ªf8
:

566 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 8);

568 
DW_FORM_ödúe˘
:

569 
f‹m
 = 
	`_dw¨f_ªad_uÀb128
(
ds_d©a
, 
off£ç
);

570  (
	`_dw¨f_©å_öô
(
dbg
, 
off£ç
, 
cu
, 
ªt_dõ
, 
ad
, 
f‹m
, 1));

571 
DW_FORM_ªf_addr
:

572 i‡(
cu
->
vîsi⁄
 == 2)

573 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
cu
->
addr_size
);

574 i‡(
cu
->
vîsi⁄
 == 3)

575 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
dw¨f_size
);

577 
DW_FORM_ªf_ud©a
:

578 
DW_FORM_ud©a
:

579 
©ªf
.
u
[0].
u64
 = 
	`_dw¨f_ªad_uÀb128
(
ds_d©a
, 
off£ç
);

581 
DW_FORM_sd©a
:

582 
©ªf
.
u
[0].
s64
 = 
	`_dw¨f_ªad_¶eb128
(
ds_d©a
, 
off£ç
);

584 
DW_FORM_£c_off£t
:

585 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
dw¨f_size
);

587 
DW_FORM_°rög
:

588 
©ªf
.
u
[0].
s
 =(*Ë
	`_dw¨f_ªad_°rög
(
ds_d©a
, (
uöt64_t
)
ds
->
ds_size
, 
off£ç
);

590 
DW_FORM_°Ω
:

591 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
dw¨f_size
);

592 
°r
 = 
	`_dw¨f_föd_£˘i⁄
(".debug_str");

593 
	`as£π
(
°r
 !
NULL
);

595 
©ªf
.
u
[1].
s
 = (*)
°r
->
ds_d©a
 +áåef.u[0].
u64
;

597 
DW_FORM_ªf_sig8
:

598 
©ªf
.
u
[0].
u64
 = 8;

599 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)(
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
));

601 
DW_FORM_Êag_¥e£¡
:

603 
©ªf
.
u
[0].
u64
 = 1;

607 
ªt
 = 
DW_DLE_ATTR_FORM_BAD
;

611 i‡(
ªt
 =
DW_DLE_NONE
) {

612 i‡(
f‹m
 =
DW_FORM_block
 || f‹m =
DW_FORM_block1
 ||

613 
f‹m
 =
DW_FORM_block2
 || f‹m =
DW_FORM_block4
) {

614 
©ªf
.
©_block
.
bl_Àn
 =áåef.
u
[0].
u64
;

615 
©ªf
.
©_block
.
bl_d©a
 =áåef.
u
[1].
u8p
;

618 i‡(
©ªf
.
©_©åib
 =
DW_AT_«me
) {

619 
©ªf
.
©_f‹m
) {

620 
DW_FORM_°Ω
:

621 
ªt_dõ
->
dõ_«me
 = 
©ªf
.
u
[1].
s
;

623 
DW_FORM_°rög
:

624 
ªt_dõ
->
dõ_«me
 = 
©ªf
.
u
[0].
s
;

630 
ªt_dõ
->
dõ_©å
[ªt_dõ->
dõ_©å_cou¡
++] = 
©ªf
;

633  (
ªt
);

634 
	}
}

637 
	$dw¨f_£¨ch_dõ_wôhö_cu
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 
cu
, 
uöt64_t
 
off£t
, 
Dw¨f_Dõ
 *
ªt_dõ
, 
£¨ch_siblög
)

639 
Dw¨f_Abbªv
 
ab
;

640 
Dw¨f_AârDef
 
ad
;

641 
uöt64_t
 
abnum
;

642 
uöt64_t
 
dõ_off£t
;

643 
ªt
, 
Àvñ
;

644 
i
;

646 
	`as£π
(
dbg
);

648 
	`as£π
(
ªt_dõ
);

650 
Àvñ
 = 1;

652 
off£t
 < 
cu
.
cu_√xt_off£t
 && off£à< 
dbg
->
dbg_öfo_size
) {

654 
dõ_off£t
 = 
off£t
;

656 
abnum
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
dbg
->
dbg_öfo_off£t_ñf
, &
off£t
);

658 i‡(
abnum
 == 0) {

659 i‡(
Àvñ
 =0 || !
£¨ch_siblög
) {

661  (
DW_DLE_NO_ENTRY
);

666 
Àvñ
--;

670 i‡((
ªt
 = 
	`_dw¨f_abbªv_föd
(
dbg
, 
cu
, 
abnum
, &
ab
)Ë!
DW_DLE_NONE
)

671  (
ªt
);

672 
ªt_dõ
->
dõ_off£t
 = die_offset;

673 
ªt_dõ
->
dõ_abnum
 = 
abnum
;

674 
ªt_dõ
->
dõ_ab
 = 
ab
;

675 
ªt_dõ
->
dõ_©å_cou¡
 = 0;

676 
ªt_dõ
->
dõ_èg
 = 
ab
.
ab_èg
;

680 
i
=0; i < 
ab
.
ab_©num
; i++)

682 i‡((
ªt
 = 
	`_dw¨f_©å_öô
(
dbg
, &
off£t
, &
cu
, 
ªt_dõ
, &
ab
.
ab_©ådef
[
i
],áb.ab_©ådef[i].
ad_f‹m
, 0)Ë!
DW_DLE_NONE
)

683  (
ªt
);

686 
ªt_dõ
->
dõ_√xt_off
 = 
off£t
;

687 i‡(
£¨ch_siblög
 && 
Àvñ
 > 0) {

689 i‡(
ab
.
ab_chûdªn
 =
DW_CHILDREN_yes
) {

691 
Àvñ
++;

695  (
DW_DLE_NONE
);

699  (
DW_DLE_NO_ENTRY
);

700 
	}
}

704 
	$dw¨f_offdõ
(
Dw¨f_Debug
 
dbg
, 
uöt64_t
 
off£t
, 
Dw¨f_Dõ
 *
ªt_dõ
, 
Dw¨f_CU
 
cu
)

706 
ªt
;

708 
	`as£π
(
dbg
);

709 
	`as£π
(
ªt_dõ
);

712 i‡(
off£t
 < 
cu
.
cu_√xt_off£t
) {

713 
ªt
 = 
	`dw¨f_£¨ch_dõ_wôhö_cu
(
dbg
, 
cu
, 
off£t
, 
ªt_dõ
, 0);

714  
ªt
;

718  
DW_DLV_OK
;

719 
	}
}

721 
Dw¨f_Aâribuã
*

722 
	$_dw¨f_©å_föd
(
Dw¨f_Dõ
 *
dõ
, 
uöt16_t
 
©å
)

724 
Dw¨f_Aâribuã
 *
my©
 = 
NULL
;

725 
i
;

727 
i
=0; i < 
dõ
->
dõ_©å_cou¡
; i++)

729 i‡(
dõ
->
dõ_©å
[
i
].
©_©åib
 =
©å
)

731 
my©
 = &(
dõ
->
dõ_©å
[
i
]);

736  
my©
;

737 
	}
}

741 
	$dw¨f_siblögof
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Dõ
 *
dõ
, Dw¨f_Dõ *
ªt_dõ
,

742 
Dw¨f_CU
 *
cu
)

744 
Dw¨f_Aâribuã
 *
©
;

745 
uöt64_t
 
off£t
;

746 
ªt
, 
£¨ch_siblög
;

748 
	`as£π
(
dbg
);

749 
	`as£π
(
ªt_dõ
);

750 
	`as£π
(
cu
);

753 i‡(
dõ
 =
NULL
)

754  (
	`dw¨f_offdõ
(
dbg
, 
cu
->
cu_dõ_off£t
, 
ªt_dõ
, *cu));

760 
£¨ch_siblög
 = 0;

761 i‡(
dõ
->
dõ_ab
.
ab_chûdªn
 =
DW_CHILDREN_no
)

762 
off£t
 = 
dõ
->
dõ_√xt_off
;

768 i‡((
©
 = 
	`_dw¨f_©å_föd
(
dõ
, 
DW_AT_siblög
)Ë!
NULL
) {

769 i‡(
©
->
©_f‹m
 !
DW_FORM_ªf_addr
)

770 
off£t
 = 
©
->
u
[0].
u64
 + 
cu
->
cu_off£t
;

772 
off£t
 = 
©
->
u
[0].
u64
;

774 
off£t
 = 
dõ
->
dõ_√xt_off
;

775 
£¨ch_siblög
 = 1;

779 
ªt
 = 
	`dw¨f_£¨ch_dõ_wôhö_cu
(
dbg
, *
cu
, 
off£t
, 
ªt_dõ
, 
£¨ch_siblög
);

782 i‡(
ªt
 =
DW_DLE_NO_ENTRY
) {

783  (
DW_DLV_NO_ENTRY
);

784 } i‡(
ªt
 !
DW_DLE_NONE
)

785  (
DW_DLV_ERROR
);

788  (
DW_DLV_OK
);

789 
	}
}

792 
	$dw¨f_chûd
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 *
cu
, 
Dw¨f_Dõ
 *
dõ
, Dw¨f_Dõ *
ªt_dõ
)

794 
ªt
;

796 
	`as£π
(
dõ
);

797 
	`as£π
(
ªt_dõ
);

798 
	`as£π
(
dbg
);

799 
	`as£π
(
cu
);

801 i‡(
dõ
->
dõ_ab
.
ab_chûdªn
 =
DW_CHILDREN_no
)

802  (
DW_DLE_NO_ENTRY
);

804 
ªt
 = 
	`dw¨f_£¨ch_dõ_wôhö_cu
(
dbg
, *
cu
, 
dõ
->
dõ_√xt_off
, 
ªt_dõ
, 0);

806 i‡(
ªt
 =
DW_DLE_NO_ENTRY
) {

807 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_NO_ENTRY
);

808  (
DW_DLV_NO_ENTRY
);

809 } i‡(
ªt
 !
DW_DLE_NONE
)

810  (
DW_DLV_ERROR
);

812  (
DW_DLV_OK
);

813 
	}
}

816 
	$_dw¨f_föd_£˘i⁄_íh™˚d
(
Dw¨f_Se˘i⁄
 *
ds
)

818 
Dw¨f_Se˘i⁄
 *
£˘hdr
 = 
	`_dw¨f_föd_£˘i⁄
(
ds
->
ds_«me
);

819 
ds
->
ds_d©a
 = 
£˘hdr
->ds_data;

820 
ds
->
ds_addr
 = 
£˘hdr
->ds_addr;

821 
ds
->
ds_size
 = 
£˘hdr
->ds_size;

823 
	}
}

	@macro.h

1 
	#PUSHA
 \

2 
subq
 
$120
,%
r•
 ; \

3 
movq
 %
øx
,112(%
r•
); \

4 
movq
 %
rbx
,104(%
r•
); \

5 
movq
 %
rcx
,96(%
r•
); \

6 
movq
 %
rdx
,88(%
r•
); \

7 
movq
 %
rbp
,80(%
r•
); \

8 
movq
 %
rdi
,72(%
r•
); \

9 
movq
 %
rsi
,64(%
r•
); \

10 
movq
 %
r8
,56(%
r•
); \

11 
movq
 %
r9
,48(%
r•
); \

12 
movq
 %
r10
,40(%
r•
); \

13 
movq
 %
r11
,32(%
r•
); \

14 
movq
 %
r12
,24(%
r•
); \

15 
movq
 %
r13
,16(%
r•
); \

16 
movq
 %
r14
,8(%
r•
); \

17 
movq
 %
r15
,0(%
r•
);

	)

19 
	#POPA
 \

35 "\èddq $120,%%r•\n"

	)

37 
	#POPA_
 \

38 
movq
 0(%
r•
),%
r15
; \

39 
movq
 8(%
r•
),%
r14
; \

40 
movq
 16(%
r•
),%
r13
; \

41 
movq
 24(%
r•
),%
r12
; \

42 
movq
 32(%
r•
),%
r11
; \

43 
movq
 40(%
r•
),%
r10
; \

44 
movq
 48(%
r•
),%
r9
; \

45 
movq
 56(%
r•
),%
r8
; \

46 
movq
 64(%
r•
),%
rsi
; \

47 
movq
 72(%
r•
),%
rdi
; \

48 
movq
 80(%
r•
),%
rbp
; \

49 
movq
 88(%
r•
),%
rdx
; \

50 
movq
 96(%
r•
),%
rcx
; \

51 
movq
 104(%
r•
),%
rbx
; \

52 
movq
 112(%
r•
),%
øx
; \

53 
addq
 
$120
,%
r•
;

	)

	@monitor.c

4 
	~<öc/°dio.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/x86.h
>

10 
	~<kîn/c⁄sﬁe.h
>

11 
	~<kîn/m⁄ô‹.h
>

12 
	~<kîn/dw¨f.h
>

13 
	~<kîn/kdebug.h
>

14 
	~<kîn/dw¨f_≠i.h
>

15 
	~<kîn/å≠.h
>

17 
	#CMDBUF_SIZE
 80

18 

	)

20 
	sComm™d
 {

21 c⁄° *
	m«me
;

22 c⁄° *
	mdesc
;

24 (*
	mfunc
)(
	m¨gc
, ** 
	m¨gv
, 
Tøp‰ame
* 
	mtf
);

27 
Comm™d
 
	gcomm™ds
[] = {

28 { "hñp", "Di•œyÅhi†li° o‡comm™ds", 
m⁄_hñp
 },

29 { "kînöfo", "Di•œy inf‹m©i⁄ábouàthêkî√l", 
m⁄_kînöfo
 },

30 { "backåa˚", "Di•œy inf‹m©i⁄ f‹ debuggög", 
m⁄_backåa˚
}

32 
	#NCOMMANDS
 ((
comm™ds
)/(comm™ds[0]))

	)

37 
	$m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

39 
i
;

41 
i
 = 0; i < 
NCOMMANDS
; i++)

42 
	`˝rötf
("%†- %s\n", 
comm™ds
[
i
].
«me
, comm™ds[i].
desc
);

44 
	}
}

47 
	$m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

49 
_°¨t
[], 
íåy
[], 
ëext
[], 
ed©a
[], 
íd
[];

51 
	`˝rötf
("Special kernel symbols:\n");

52 
	`˝rötf
(" _°¨à %08x (phys)\n", 
_°¨t
);

53 
	`˝rötf
("É¡ry %08x (vútË %08x (phys)\n", 
íåy
,É¡ry - 
KERNBASE
);

54 
	`˝rötf
("Éãxà %08x (vútË %08x (phys)\n", 
ëext
,Éãxà- 
KERNBASE
);

55 
	`˝rötf
("Éd©® %08x (vútË %08x (phys)\n", 
ed©a
,Éd©®- 
KERNBASE
);

56 
	`˝rötf
("Énd %08x (vútË %08x (phys)\n", 
íd
,Énd - 
KERNBASE
);

57 
	`˝rötf
("KernelÉxecutable memory footprint: %dKB\n",

58 
	`ROUNDUP
(
íd
 - 
íåy
, 1024) / 1024);

60 
	}
}

63 
	$m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

81 
	`˝rötf
("Stack backtrace:\n");

82 
uöt64_t
 
rbp
 = 
	`ªad_rbp
();

83 
uöt64_t
 
rù
;

84 
	`ªad_rù
(
rù
);

86 
	`˝rötf
("rb∞%016xÑù %016x \n",
rbp
,
rù
);

87 
Rùdebugöfo
 
dbg
;

88 
	`debugöfo_rù
(
rù
,&
dbg
);

89 
	`˝rötf
(" %s:%d: %s+%016xárgs:%d ",
dbg
.
rù_fûe
,dbg.
rù_löe
,dbg.
rù_‚_«me
,
rù
-dbg.
rù_‚_addr
,dbg.
rù_‚_«rg
);

90 
uöt64_t
 
ßved_rbp
 = 
rbp
;

91 
i
 = 0 ;ò< 
dbg
.
rù_‚_«rg
;i++) {

92 
dbg
.
size_‚_¨g
[
i
]) {

95 
¨gs
 = *(*)(
ßved_rbp
 - 4);

96 
	`˝rötf
(" %016x ",
¨gs
);

97 
ßved_rbp
 -= 4;

102 
uöt64_t
 
¨gs
 = *(uöt64_t*)(
ßved_rbp
 - 4);

103 
	`˝rötf
(" %016x ",
¨gs
);

104 
ßved_rbp
 -= 8;

109 
	`˝rötf
("\n");

110 
rù
 = *(
uöt64_t
*)(
rbp
 + 8);

111 
rbp
 = *(
uöt64_t
*)rbp;

112 if(
rbp
 == 0)

116 
	}
}

122 
	#WHITESPACE
 "\t\r\¿"

	)

123 
	#MAXARGS
 16

	)

126 
	$runcmd
(*
buf
, 
Tøp‰ame
 *
tf
)

128 
¨gc
;

129 *
¨gv
[
MAXARGS
];

130 
i
;

133 
¨gc
 = 0;

134 
¨gv
[
¨gc
] = 0;

137 *
buf
 && 
	`°rchr
(
WHITESPACE
, *buf))

138 *
buf
++ = 0;

139 i‡(*
buf
 == 0)

143 i‡(
¨gc
 =
MAXARGS
-1) {

144 
	`˝rötf
("Toÿm™yárgumít†(max %d)\n", 
MAXARGS
);

147 
¨gv
[
¨gc
++] = 
buf
;

148 *
buf
 && !
	`°rchr
(
WHITESPACE
, *buf))

149 
buf
++;

151 
¨gv
[
¨gc
] = 0;

154 i‡(
¨gc
 == 0)

156 
i
 = 0; i < 
NCOMMANDS
; i++) {

157 i‡(
	`°rcmp
(
¨gv
[0], 
comm™ds
[
i
].
«me
) == 0)

158  
comm™ds
[
i
].
	`func
(
¨gc
, 
¨gv
, 
tf
);

160 
	`˝rötf
("Unknow¿comm™d '%s'\n", 
¨gv
[0]);

162 
	}
}

165 
	$m⁄ô‹
(
Tøp‰ame
 *
tf
)

167 *
buf
;

169 
	`˝rötf
("WelcomeÅoÅhe JOS kernel monitor!\n");

170 
	`˝rötf
("Type 'help' foráÜist of commands.\n");

172 i‡(
tf
 !
NULL
)

173 
	`¥öt_å≠‰ame
(
tf
);

176 
buf
 = 
	`ªadlöe
("K> ");

177 i‡(
buf
 !
NULL
)

178 i‡(
	`runcmd
(
buf
, 
tf
) < 0)

181 
	}
}

	@monitor.h

1 #i‚de‡
JOS_KERN_MONITOR_H


2 
	#JOS_KERN_MONITOR_H


	)

3 #i‚de‡
JOS_KERNEL


7 
	gTøp‰ame
;

12 
m⁄ô‹
(
Tøp‰ame
 *
tf
);

15 
m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

16 
m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

17 
m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

	@mpconfig.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/x86.h
>

8 
	~<öc/mmu.h
>

9 
	~<öc/ív.h
>

10 
	~<kîn/˝u.h
>

11 
	~<kîn/pm≠.h
>

13 
CpuInfo
 
	g˝us
[
NCPU
];

14 
CpuInfo
 *
	gboŸ˝u
;

15 
	gismp
;

16 
	gn˝u
;

19 
	g≥r˝u_k°acks
[
NCPU
][
KSTKSIZE
]

20 
__©åibuã__
 ((
Æig√d
(
PGSIZE
)));

25 
	smp
 {

26 
uöt8_t
 
	msig«tuª
[4];

27 
uöt32_t
 
	mphyßddr
;

28 
uöt8_t
 
	mÀngth
;

29 
uöt8_t
 
	m•e¸ev
;

30 
uöt8_t
 
	mchecksum
;

31 
uöt8_t
 
	mty≥
;

32 
uöt8_t
 
	mim¸p
;

33 
uöt8_t
 
	mª£rved
[3];

34 } 
__©åibuã__
((
__∑cked__
));

36 
	smpc⁄f
 {

37 
uöt8_t
 
	msig«tuª
[4];

38 
uöt16_t
 
	mÀngth
;

39 
uöt8_t
 
	mvîsi⁄
;

40 
uöt8_t
 
	mchecksum
;

41 
uöt8_t
 
	m¥odu˘
[20];

42 
uöt32_t
 
	m€mèbÀ
;

43 
uöt16_t
 
	m€mÀngth
;

44 
uöt16_t
 
	míåy
;

45 
uöt32_t
 
	mœpiˇddr
;

46 
uöt16_t
 
	mxÀngth
;

47 
uöt8_t
 
	mxchecksum
;

48 
uöt8_t
 
	mª£rved
;

49 
uöt8_t
 
	míåõs
[0];

50 } 
__©åibuã__
((
__∑cked__
));

52 
	smµroc
 {

53 
uöt8_t
 
	mty≥
;

54 
uöt8_t
 
	m≠icid
;

55 
uöt8_t
 
	mvîsi⁄
;

56 
uöt8_t
 
	mÊags
;

57 
uöt8_t
 
	msig«tuª
[4];

58 
uöt32_t
 
	m„©uª
;

59 
uöt8_t
 
	mª£rved
[8];

60 } 
__©åibuã__
((
__∑cked__
));

63 
	#MPROC_EN
 0x01

	)

64 
	#MPPROC_BOOT
 0x02

65 

	)

67 
	#MPPROC
 0x00

68 
	#MPBUS
 0x01

69 
	#MPIOAPIC
 0x02

70 
	#MPIOINTR
 0x03

71 
	#MPLINTR
 0x04

72 

	)

73 
uöt8_t


74 
	$sum
(*
addr
, 
Àn
)

76 
i
, 
sum
;

78 
sum
 = 0;

79 
i
 = 0; i < 
Àn
; i++)

80 
sum
 +((
uöt8_t
 *)
addr
)[
i
];

81  
sum
;

82 
	}
}

85 
mp
 *

86 
	$mp£¨ch1
(
phyßddr_t
 
a
, 
Àn
)

88 
mp
 *m∞
	`KADDR
(
a
), *
íd
 = KADDR◊ + 
Àn
);

90 ; 
mp
 < 
íd
; mp++)

91 i‡(
	`memcmp
(
mp
->
sig«tuª
, "_MP_", 4) == 0 &&

92 
	`sum
(
mp
, (*mp)) == 0)

93  
mp
;

94  
NULL
;

95 
	}
}

102 
mp
 *

103 
	$mp£¨ch
()

105 
uöt8_t
 *
bda
;

106 
uöt32_t
 
p
;

107 
mp
 *mp;

112 
bda
 = (
uöt8_t
 *Ë
	`KADDR
(0x40 << 4);

116 i‡((
p
 = *(
uöt16_t
 *Ë(
bda
 + 0x0E))) {

117 
p
 <<= 4;

118 i‡((
mp
 = 
	`mp£¨ch1
(
p
, 1024)))

119  
mp
;

123 
p
 = *(
uöt16_t
 *Ë(
bda
 + 0x13) * 1024;

124 i‡((
mp
 = 
	`mp£¨ch1
(
p
 - 1024, 1024)))

125  
mp
;

127  
	`mp£¨ch1
(0xF0000, 0x10000);

128 
	}
}

133 
mpc⁄f
 *

134 
	$mpc⁄fig
(
mp
 **
pmp
)

136 
mpc⁄f
 *
c⁄f
;

137 
mp
 *mp;

139 i‡((
mp
 = 
	`mp£¨ch
()) == 0)

140  
NULL
;

141 i‡(
mp
->
phyßddr
 =0 || mp->
ty≥
 != 0) {

142 
	`˝rötf
("SMP: Default configurationsÇot implemented\n");

143  
NULL
;

145 
c⁄f
 = (
mpc⁄f
 *Ë
	`KADDR
(
mp
->
phyßddr
);

146 i‡(
	`memcmp
(
c⁄f
, "PCMP", 4) != 0) {

147 
	`˝rötf
("SMP: Incorrect MP configurationÅable signature\n");

148  
NULL
;

150 i‡(
	`sum
(
c⁄f
, c⁄f->
Àngth
) != 0) {

151 
	`˝rötf
("SMP: Bad MP configuration checksum\n");

152  
NULL
;

154 i‡(
c⁄f
->
vîsi⁄
 != 1 && conf->version != 4) {

155 
	`˝rötf
("SMP: Unsuµ‹ãd MP vîsi⁄ %d\n", 
c⁄f
->
vîsi⁄
);

156  
NULL
;

158 i‡(
	`sum
((
uöt8_t
 *)
c⁄f
 + c⁄f->
Àngth
, c⁄f->
xÀngth
Ë!c⁄f->
xchecksum
) {

159 
	`˝rötf
("SMP: Bad MP configurationÉxtended checksum\n");

160  
NULL
;

162 *
pmp
 = 
mp
;

163  
c⁄f
;

164 
	}
}

167 
	$mp_öô
()

169 
mp
 *mp;

170 
mpc⁄f
 *
c⁄f
;

171 
mµroc
 *
¥oc
;

172 
uöt8_t
 *
p
;

173 
i
;

175 
boŸ˝u
 = &
˝us
[0];

176 i‡((
c⁄f
 = 
	`mpc⁄fig
(&
mp
)) == 0)

178 
ismp
 = 1;

179 
œpiˇddr
 = 
c⁄f
->lapicaddr;

181 
p
 = 
c⁄f
->
íåõs
, 
i
 = 0; i < c⁄f->
íåy
; i++) {

182 *
p
) {

183 
MPPROC
:

184 
¥oc
 = (
mµroc
 *)
p
;

185 i‡(
¥oc
->
Êags
 & 
MPPROC_BOOT
) {

186 
boŸ˝u
 = &
˝us
[
n˝u
];

187 
	`˝rötf
("Found boot cpu..\n");

189 i‡(
n˝u
 < 
NCPU
) {

190 
	`˝rötf
("ty≥: %dápicid:%d vîsi⁄:%d sig«tuª:%x fótuª:%x fœgs:%xÑe£rved:%x\n", 
¥oc
->
ty≥
,Öroc->
≠icid
,Öroc->
vîsi⁄
,Öroc->
sig«tuª
,Öroc->
„©uª
,Öroc->
Êags
,Öroc->
ª£rved
);

191 i‡(
¥oc
->
Êags
 & 
MPROC_EN
) {

192 
˝us
[
n˝u
].
˝u_id
 =Çcpu;

193 
n˝u
++;

195 
	`˝rötf
("Found unusable CPU. Not intiializing it..\n");

198 
	`˝rötf
("SMP:Åoo many CPUs, CPU %d disabled\n",

199 
¥oc
->
≠icid
);

201 
p
 +(
mµroc
);

203 
MPBUS
:

204 
MPIOAPIC
:

205 
MPIOINTR
:

206 
MPLINTR
:

207 
p
 += 8;

210 
	`˝rötf
("mpöô: unknow¿c⁄figÅy≥ %x\n", *
p
);

211 
ismp
 = 0;

212 
i
 = 
c⁄f
->
íåy
;

217 
boŸ˝u
->
˝u_°©us
 = 
CPU_STARTED
;

218 i‡(!
ismp
) {

220 
n˝u
 = 1;

221 
œpiˇddr
 = 0;

222 
	`˝rötf
("SMP: configurationÇot found, SMP disabled\n");

225 
	`˝rötf
("SMP: CPU %d found %d CPU(s)\n", 
boŸ˝u
->
˝u_id
, 
n˝u
);

227 i‡(
mp
->
im¸p
) {

230 
	`˝rötf
("SMP: Setting IMCRÅo switch from PIC modeÅo symmetric I/O mode\n");

231 
	`outb
(0x22, 0x70);

232 
	`outb
(0x23, 
	`öb
(0x23) | 1);

234 
	}
}

	@multiboot.h

2 #i‚de‡
JOS_MB_H


3 
	#JOS_MB_H


	)

22 
	#APPEND_HILO
(
hi
, 
lo
Ë(((
uöt64_t
)hò<< 32Ë+Üo)

	)

24 
__ölöe
 
uöt32_t
 
ª°ri˘ive_ty≥
(uöt32_à
t1
, uöt32_à
t2
);

28 
	#MB_TYPE_USABLE
 1

	)

29 
	#MB_TYPE_RESERVED
 2

	)

30 
	#MB_TYPE_ACPI_RECLM
 3

	)

31 
	#MB_TYPE_ACPI_NVS
 4

	)

32 
	#MB_TYPE_BAD
 5

	)

34 
	#MB_FLAG_MMAP
 0x40

	)

37 
	smu…iboŸ_hódî


39 
uöt32_t
 
	mmagic
;

40 
uöt32_t
 
	mÊags
;

41 
uöt32_t
 
	mchecksum
;

42 
uöt32_t
 
	mhódî_addr
;

43 
uöt32_t
 
	mlﬂd_addr
;

44 
uöt32_t
 
	mlﬂd_íd_addr
;

45 
uöt32_t
 
	mbss_íd_addr
;

46 
uöt32_t
 
	míåy_addr
;

47 } 
	tmu…iboŸ_hódî_t
;

50 
	saout_symbﬁ_èbÀ


52 
uöt32_t
 
	mèbsize
;

53 
uöt32_t
 
	m°rsize
;

54 
uöt32_t
 
	maddr
;

55 
uöt32_t
 
	mª£rved
;

56 } 
	taout_symbﬁ_èbÀ_t
;

59 
	sñf_£˘i⁄_hódî_èbÀ


61 
uöt32_t
 
	mnum
;

62 
uöt32_t
 
	msize
;

63 
uöt32_t
 
	maddr
;

64 
uöt32_t
 
	mshndx
;

65 } 
	tñf_£˘i⁄_hódî_èbÀ_t
;

68 
	smu…iboŸ_öfo


70 
uöt32_t
 
	mÊags
;

71 
uöt32_t
 
	mmem_lowî
;

72 
uöt32_t
 
	mmem_uµî
;

73 
uöt32_t
 
	mboŸ_devi˚
;

74 
uöt32_t
 
	mcmdlöe
;

75 
uöt32_t
 
	mmods_cou¡
;

76 
uöt32_t
 
	mmods_addr
;

79 
aout_symbﬁ_èbÀ_t
 
	maout_sym
;

80 
ñf_£˘i⁄_hódî_èbÀ_t
 
	mñf_£c
;

81 } 
	mu
;

82 
uöt32_t
 
	mmm≠_Àngth
;

83 
uöt32_t
 
	mmm≠_addr
;

84 } 
	tmu…iboŸ_öfo_t
;

87 
	smoduÀ


89 
uöt32_t
 
	mmod_°¨t
;

90 
uöt32_t
 
	mmod_íd
;

91 
uöt32_t
 
	m°rög
;

92 
uöt32_t
 
	mª£rved
;

93 } 
	tmoduÀ_t
;

97 
	smem‹y_m≠


99 
uöt32_t
 
	msize
;

100 
uöt32_t
 
	mba£_addr_low
;

101 
uöt32_t
 
	mba£_addr_high
;

102 
uöt32_t
 
	mÀngth_low
;

103 
uöt32_t
 
	mÀngth_high
;

104 
uöt32_t
 
	mty≥
;

105 } 
	tmem‹y_m≠_t
;

107 
__ölöe
 
uöt32_t
 
	$ª°ri˘ive_ty≥
(
uöt32_t
 
t1
, uöt32_à
t2
) {

108 if(
t1
==
MB_TYPE_BAD
 || 
t2
==MB_TYPE_BAD)

109  
MB_TYPE_BAD
;

110 if(
t1
==
MB_TYPE_ACPI_NVS
 || 
t2
==MB_TYPE_ACPI_NVS)

111  
MB_TYPE_ACPI_NVS
;

112 if(
t1
==
MB_TYPE_RESERVED
 || 
t2
==MB_TYPE_RESERVED)

113  
MB_TYPE_RESERVED
;

114 if(
t1
==
MB_TYPE_ACPI_RECLM
 || 
t2
==MB_TYPE_ACPI_RECLM)

115  
MB_TYPE_ACPI_RECLM
;

117  
MB_TYPE_USABLE
;

118 
	}
}

	@picirq.c

3 
	~<öc/as£π.h
>

4 
	~<öc/å≠.h
>

6 
	~<kîn/picúq.h
>

11 
uöt16_t
 
	gúq_mask_8259A
 = 0xFFFF & ~(1<<
IRQ_SLAVE
);

12 
boﬁ
 
	gdidöô
;

16 
	$pic_öô
()

18 
didöô
 = 1;

21 
	`outb
(
IO_PIC1
+1, 0xFF);

22 
	`outb
(
IO_PIC2
+1, 0xFF);

30 
	`outb
(
IO_PIC1
, 0x11);

33 
	`outb
(
IO_PIC1
+1, 
IRQ_OFFSET
);

37 
	`outb
(
IO_PIC1
+1, 1<<
IRQ_SLAVE
);

47 
	`outb
(
IO_PIC1
+1, 0x3);

50 
	`outb
(
IO_PIC2
, 0x11);

51 
	`outb
(
IO_PIC2
+1, 
IRQ_OFFSET
 + 8);

52 
	`outb
(
IO_PIC2
+1, 
IRQ_SLAVE
);

55 
	`outb
(
IO_PIC2
+1, 0x01);

61 
	`outb
(
IO_PIC1
, 0x68);

62 
	`outb
(
IO_PIC1
, 0x0a);

64 
	`outb
(
IO_PIC2
, 0x68);

65 
	`outb
(
IO_PIC2
, 0x0a);

67 i‡(
úq_mask_8259A
 != 0xFFFF)

68 
	`úq_£tmask_8259A
(
úq_mask_8259A
);

69 
	}
}

72 
	$úq_£tmask_8259A
(
uöt16_t
 
mask
)

74 
i
;

75 
úq_mask_8259A
 = 
mask
;

76 i‡(!
didöô
)

78 
	`outb
(
IO_PIC1
+1, ()
mask
);

79 
	`outb
(
IO_PIC2
+1, ()(
mask
 >> 8));

80 
	`˝rötf
("enabled interrupts:");

81 
i
 = 0; i < 16; i++)

82 i‡(~
mask
 & (1<<
i
))

83 
	`˝rötf
(" %d", 
i
);

84 
	`˝rötf
("\n");

85 
	}
}

	@picirq.h

3 #i‚de‡
JOS_KERN_PICIRQ_H


4 
	#JOS_KERN_PICIRQ_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	#MAX_IRQS
 16

10 

	)

12 
	#IO_PIC1
 0x20

13 
	#IO_PIC2
 0xA0

14 

	)

15 
	#IRQ_SLAVE
 2

16 

	)

18 #i‚de‡
__ASSEMBLER__


20 
	~<öc/ty≥s.h
>

21 
	~<öc/x86.h
>

23 
uöt16_t
 
úq_mask_8259A
;

24 
pic_öô
();

25 
úq_£tmask_8259A
(
uöt16_t
 
mask
);

	@pmap copy.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/k˛ock.h
>

11 
	~<kîn/mu…iboŸ.h
>

12 
	~<kîn/ív.h
>

14 
uöt64_t
 
pml4phys
;

15 
	#BOOT_PAGE_TABLE_START
 ((
uöt64_t
Ë
	`KADDR
((uöt64_tË&
pml4phys
))

	)

16 
	#BOOT_PAGE_TABLE_END
 ((
uöt64_t
Ë
	`KADDR
((uöt64_tË(&
pml4phys
Ë+ 5*
PGSIZE
))

	)

19 
size_t
 
	g≈ages
;

20 
size_t
 
	g≈ages_ba£mem
;

23 
pml4e_t
 *
	gboŸ_pml4e
;

24 
phyßddr_t
 
	gboŸ_¸3
;

25 
PageInfo
 *
	g∑ges
;

26 
PageInfo
 *
	g∑ge_‰ì_li°
;

33 
	$nvøm_ªad
(
r
)

35  
	`mc146818_ªad
(
r
) | (mc146818_read(r + 1) << 8);

36 
	}
}

39 
	$mu…iboŸ_ªad
(
mu…iboŸ_öfo_t
* 
mböfo
, 
size_t
* 
ba£mem
, size_t* 
extmem
) {

40 
i
;

42 
mem‹y_m≠_t
* 
mm≠_ba£
 = (mem‹y_m≠_t*)(
uöçå_t
)
mböfo
->
mm≠_addr
;

43 
mem‹y_m≠_t
* 
mm≠_li°
[
mböfo
->
mm≠_Àngth
/ ((memory_map_t))];

45 
	`˝rötf
("\ne820 MEMORY MAP\n");

46 
i
 = 0; i < (
mböfo
->
mm≠_Àngth
 / ((
mem‹y_m≠_t
))); i++) {

47 
mem‹y_m≠_t
* 
mm≠
 = &
mm≠_ba£
[
i
];

49 
uöt64_t
 
addr
 = 
	`APPEND_HILO
(
mm≠
->
ba£_addr_high
, mm≠->
ba£_addr_low
);

50 
uöt64_t
 
Àn
 = 
	`APPEND_HILO
(
mm≠
->
Àngth_high
, mm≠->
Àngth_low
);

52 
	`˝rötf
("size: %d,áddªss: 0x%016x,Üígth: 0x%016x,Åy≥: %x\n", 
mm≠
->
size
,

53 
addr
, 
Àn
, 
mm≠
->
ty≥
);

55 if(
mm≠
->
ty≥
 > 5 || mmap->type < 1)

56 
mm≠
->
ty≥
 = 
MB_TYPE_RESERVED
;

59 
j
 = 0;

60 ;
j
<
i
;j++) {

61 
mem‹y_m≠_t
* 
this
 = 
mm≠_li°
[
j
];

62 
uöt64_t
 
this_addr
 = 
	`APPEND_HILO
(
this
->
ba£_addr_high
,Åhis->
ba£_addr_low
);

63 if(
this_addr
 > 
addr
) {

64 
œ°
 = 
i
+1;

65 
œ°
 !
j
) {

66 *(
mm≠_li°
 + 
œ°
) = *(mmap_list +Üast - 1);

67 
œ°
--;

72 
mm≠_li°
[
j
] = 
mm≠
;

74 
	`˝rötf
("\n");

77 
i
=1;ò< (
mböfo
->
mm≠_Àngth
 / ((
mem‹y_m≠_t
))); i++) {

78 
mem‹y_m≠_t
* 
¥ev
 = 
mm≠_li°
[
i
-1];

79 
mem‹y_m≠_t
* 
this
 = 
mm≠_li°
[
i
];

81 
uöt64_t
 
this_addr
 = 
	`APPEND_HILO
(
this
->
ba£_addr_high
,Åhis->
ba£_addr_low
);

82 
uöt64_t
 
¥ev_addr
 = 
	`APPEND_HILO
(
¥ev
->
ba£_addr_high
,Öªv->
ba£_addr_low
);

83 
uöt64_t
 
¥ev_Àngth
 = 
	`APPEND_HILO
(
¥ev
->
Àngth_high
,Öªv->
Àngth_low
);

84 
uöt64_t
 
this_Àngth
 = 
	`APPEND_HILO
(
this
->
Àngth_high
,Åhis->
Àngth_low
);

87 if(
¥ev_addr
 + 
¥ev_Àngth
 =
this_addr
 && 
¥ev
->
ty≥
 =
this
->type) {

88 
this
->
Àngth_low
 = (
uöt32_t
)
¥ev_Àngth
 + 
this_Àngth
;

89 
this
->
Àngth_high
 = (
uöt32_t
)((
¥ev_Àngth
 + 
this_Àngth
)>>32);

90 
this
->
ba£_addr_low
 = 
¥ev
->base_addr_low;

91 
this
->
ba£_addr_high
 = 
¥ev
->base_addr_high;

92 
mm≠_li°
[
i
-1] = 
NULL
;

93 } if(
¥ev_addr
 + 
¥ev_Àngth
 > 
this_addr
) {

95 
uöt32_t
 
ty≥
 = 
	`ª°ri˘ive_ty≥
(
¥ev
->ty≥, 
this
->type);

96 
¥ev
->
ty≥
 =Åype;

97 
this
->
ty≥
 =Åype;

101 
i
=0;ò< (
mböfo
->
mm≠_Àngth
 / ((
mem‹y_m≠_t
))); i++) {

102 
mem‹y_m≠_t
* 
mm≠
 = 
mm≠_li°
[
i
];

103 if(
mm≠
) {

104 if(
mm≠
->
ty≥
 =
MB_TYPE_USABLE
 || mm≠->ty≥ =
MB_TYPE_ACPI_RECLM
) {

105 if(
mm≠
->
ba£_addr_low
 < 0x100000 && mm≠->
ba£_addr_high
 == 0)

106 *
ba£mem
 +
	`APPEND_HILO
(
mm≠
->
Àngth_high
, mm≠->
Àngth_low
);

108 *
extmem
 +
	`APPEND_HILO
(
mm≠
->
Àngth_high
, mm≠->
Àngth_low
);

112 
	}
}

115 
	$i386_dëe˘_mem‹y
()

117 
size_t
 
≈ages_extmem
;

118 
size_t
 
ba£mem
 = 0;

119 
size_t
 
extmem
 = 0;

122 
mu…iboŸ_öfo
[];

123 
uöçå_t
* 
mbp
 = (uöçå_t*)
mu…iboŸ_öfo
;

124 
mu…iboŸ_öfo_t
 * 
mböfo
 = (mu…iboŸ_öfo_t*)*
mbp
;

126 if(
mböfo
 && (mböfo->
Êags
 & 
MB_FLAG_MMAP
)) {

127 
	`mu…iboŸ_ªad
(
mböfo
, &
ba£mem
, &
extmem
);

129 
ba£mem
 = (
	`nvøm_ªad
(
NVRAM_BASELO
) * 1024);

130 
extmem
 = (
	`nvøm_ªad
(
NVRAM_EXTLO
) * 1024);

133 
	`as£π
(
ba£mem
);

135 
≈ages_ba£mem
 = 
ba£mem
 / 
PGSIZE
;

136 
≈ages_extmem
 = 
extmem
 / 
PGSIZE
;

138 if(
	`nvøm_ªad
(
NVRAM_EXTLO
) == 0xffff) {

140 
size_t
 
≥xtmem
 = 
	`nvøm_ªad
(
NVRAM_EXTGT16LO
) * (64 * 1024);

141 
≈ages_extmem
 = ((16 * 1024 * 1024Ë+ 
≥xtmem
 - (1 * 1024 * 1024)Ë/ 
PGSIZE
;

146 i‡(
≈ages_extmem
)

147 
≈ages
 = (
EXTPHYSMEM
 / 
PGSIZE
Ë+ 
≈ages_extmem
;

149 
≈ages
 = 
≈ages_ba£mem
;

151 
	`˝rötf
("Physical memory: %uMávailable, base = %uK,Éxtended = %uK,Çpages = %d\n",

152 
≈ages
 * 
PGSIZE
 / (1024 * 1024),

153 
≈ages_ba£mem
 * 
PGSIZE
 / 1024,

154 
≈ages_extmem
 * 
PGSIZE
 / 1024,

155 
≈ages
);

162 
uöt64_t
 
u∑ges_max
 = (
ULIM
 - 
UPAGES
Ë/ (
PageInfo
);

163 
uöt64_t
 
kîn_mem_max
 = (
UVPT
 - 
KERNBASE
Ë/ 
PGSIZE
;

164 
	`˝rötf
("PagesÜimitedÅo %llu by upageáddressÑange (%uMB), PagesÜimitedÅo %llu byÑemappedÖhys mem (%uMB)\n",

165 
u∑ges_max
, ((u∑ges_max * 
PGSIZE
) / (1024 * 1024)),

166 
kîn_mem_max
, kîn_mem_max * 
PGSIZE
 / (1024 * 1024));

167 
uöt64_t
 
max_≈ages
 = 
u∑ges_max
 < 
kîn_mem_max
 ? upages_max : kern_mem_max;

169 if(
≈ages
 > 
max_≈ages
) {

170 
≈ages
 = 
max_≈ages
 - 1024;

171 
	`˝rötf
("Usög o∆y %uK o‡thêavaûabÀ mem‹y.\n", 
max_≈ages
);

173 
	}
}

180 
boŸ_m≠_ªgi⁄
(
pml4e_t
 *
pml4e
, 
uöçå_t
 
va
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
);

181 
check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
);

182 
check_∑ge_Æloc
();

183 
check_boŸ_pml4e
(
pml4e_t
 *
pml4e
);

184 
phyßddr_t
 
check_va2∑
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
);

185 
∑ge_check
();

186 
∑ge_öôµ
(
PageInfo
 *
µ
);

200 
	$boŸ_Æloc
(
uöt32_t
 
n
)

202 *
√xt‰ì
;

203 *
ªsu…
;

210 i‡(!
√xt‰ì
) {

211 
íd
[];

212 
√xt‰ì
 = 
	`ROUNDUP
((*Ë
íd
, 
PGSIZE
);

221 
ªsu…
 = 
√xt‰ì
;

222 i‡(
n
 > 0) {

223 
√xt‰ì
 = 
	`ROUNDUP
“ext‰ì + 
n
, 
PGSIZE
);

224 i‡(((
uöt64_t
Ë
√xt‰ì
 - 
KERNBASE
Ë> (
≈ages
 * 
PGSIZE
)) {

225 
	`∑nic
("Ouào‡mem‹y!", 
n
);

227 } i‡(
n
 == 0) {

231  
ªsu…
;

232 
	}
}

244 
	$x64_vm_öô
()

246 
pml4e_t
* 
pml4e
;

247 
uöt32_t
 
¸0
;

248 
uöt64_t
 
n
;

249 
r
;

250 
Env
 *
ív
;

251 
	`i386_dëe˘_mem‹y
();

256 
pml4e
 = 
	`boŸ_Æloc
(
PGSIZE
);

257 
	`mem£t
(
pml4e
, 0, 
PGSIZE
);

258 
boŸ_pml4e
 = 
pml4e
;

259 
boŸ_¸3
 = 
	`PADDR
(
pml4e
);

267 
uöt32_t
 
∑ge_°©e_size
 = (
PageInfo
);

268 
∑ges
 = (
PageInfo
*Ë
	`boŸ_Æloc
(
≈ages
 * 
∑ge_°©e_size
);

274 
ív
 = (
Env
 *Ë
	`boŸ_Æloc
 (
NENV
 * (Env));

275 
ívs
 = 
ív
;

281 
	`∑ge_öô
();

303 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
UPAGES
, 
≈ages
 * 
∑ge_°©e_size
, 
	`PADDR
(
∑ges
), 
PTE_U
);

304 
	`boŸ_m≠_ªgi⁄
(
pml4e
, (
uöçå_t
Ë
∑ges
, 
PGSIZE
, 
	`PADDR
’ages), 
PTE_W
);

313 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
UENVS
, 
NENV
 * (
Env
Ë,
	`PADDR
(
ívs
),
PTE_U
);

314 
	`boŸ_m≠_ªgi⁄
(
pml4e
, (
uöçå_t
Ë
ív
, 
PGSIZE
,
	`PADDR
(
ívs
),
PTE_W
);

327 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
KSTACKTOP
 - 
KSTKSIZE
, KSTKSIZE, 
	`PADDR
(
boŸ°ack
), 
PTE_W
);

336 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
KERNBASE
, 
≈ages
 * 
PGSIZE
, 0x0, 
PTE_W
);

338 
	`check_∑ge_‰ì_li°
(1);

339 
	`check_∑ge_Æloc
();

340 
	`∑ge_check
();

341 
	`check_∑ge_‰ì_li°
(0);

342 
	`check_boŸ_pml4e
(
boŸ_pml4e
);

346 
pd≥_t
 *
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
pml4e
[1]));

347 
pde_t
 *
pgdú
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[0]));

348 
	`l¸3
(
boŸ_¸3
);

349 
	}
}

365 
	$∑ge_öô
()

387 
size_t
 
i
;

388 
∑ges
[0].
µ_ªf
 = 1;

389 
∑ges
[0].
µ_lök
 = 
NULL
;

391 
i
 = 1; i < 
≈ages
; i++) {

393 
uöt64_t
 
va
 = 
KERNBASE
 + 
i
 * 
PGSIZE
;

395 i‡(
va
 >
BOOT_PAGE_TABLE_START
 && v®< 
BOOT_PAGE_TABLE_END
) {

397 
∑ges
[
i
].
µ_ªf
 = 1;

398 } i‡((
i
 >
IOPHYSMEM
 / 
PGSIZE
Ë&& (ò< 
EXTPHYSMEM
 / PGSIZE)) {

401 
∑ges
[
i
].
µ_ªf
 = 1;

402 } i‡((
i
 >
EXTPHYSMEM
 / 
PGSIZE
Ë&& (ò< 
	`PADDR
(
	`boŸ_Æloc
(0)) / PGSIZE)) {

405 
∑ges
[
i
].
µ_ªf
 = 1;

408 
∑ges
[
i
].
µ_ªf
 = 0;

409 
∑ges
[
i
].
µ_lök
 = 
∑ge_‰ì_li°
;

410 
∑ge_‰ì_li°
 = &
∑ges
[
i
];

414 
	}
}

428 
PageInfo
 *

429 
	$∑ge_Æloc
(
Æloc_Êags
)

431 i‡(
∑ge_‰ì_li°
 =
NULL
)

432  
NULL
;

434 
PageInfo
 *
∑ge
 = 
∑ge_‰ì_li°
;

435 
∑ge_‰ì_li°
 =Öage_‰ì_li°->
µ_lök
;

439 
∑ge
->
µ_lök
 = 
NULL
;

441 i‡(
Æloc_Êags
 & 
ALLOC_ZERO
)

442 
	`mem£t
(
	`∑ge2kva
(
∑ge
), 0, 
PGSIZE
);

443  
∑ge
;

444 
	}
}

452 
	$∑ge_öôµ
(
PageInfo
 *
µ
)

454 
	`mem£t
(
µ
, 0, (*pp));

455 
	}
}

461 
	$∑ge_‰ì
(
PageInfo
 *
µ
)

463 i‡(
µ
->
µ_ªf
 !0 ||Öp->
µ_lök
 !
NULL
) {

464 
	`∑nic
("page_free:Öage cannot be freed");

466 
µ
->
µ_lök
 = 
∑ge_‰ì_li°
;

467 
∑ge_‰ì_li°
 = 
µ
;

469 
	}
}

476 
	$∑ge_de¸ef
(
PageInfo
* 
µ
)

478 i‡(--
µ
->
µ_ªf
 == 0)

479 
	`∑ge_‰ì
(
µ
);

480 
	}
}

507 
±e_t
 *

508 
	$pml4e_wÆk
(
pml4e_t
 *
pml4e
, c⁄° *
va
, 
¸óã
)

510 
PageInfo
 *
√wPage
 = 
NULL
;

511 
pml4e_t
 *
pml4_íåy
 = &
pml4e
[
	`PML4
(
va
)];

512 i‡(!*
pml4_íåy
) {

513 i‡(!
¸óã
) {

514  
NULL
;

516 
√wPage
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

517 i‡(!
√wPage
) {

518  
NULL
;

520 
√wPage
->
µ_ªf
++;

521 *
pml4_íåy
 = (
pml4e_t
Ë(
	`∑ge2∑
(
√wPage
Ë& ~0xFFFË| 
PTE_U
 | 
PTE_W
 | 
PTE_P
;

525 
pd≥_t
 *
pdp_íåy
 = 
	`KADDR
(
	`PTE_ADDR
(*
pml4_íåy
));

526 
±e_t
 *
±e
 = 
	`pd≥_wÆk
(
pdp_íåy
, 
va
, 
¸óã
);

529 i‡(!
±e
 && 
√wPage
) {

530 *
pml4_íåy
 = 0x0;

531 
	`∑ge_de¸ef
(
√wPage
);

533  
±e
;

534 
	}
}

541 
±e_t
 *

542 
	$pd≥_wÆk
(
pd≥_t
 *
pd≥
,c⁄° *
va
,
¸óã
){

543 
PageInfo
 *
√wPage
 = 
NULL
;

544 
pd≥_t
 *
pdp_íåy
 = &
pd≥
[
	`PDPE
(
va
)];

546 i‡(!*
pdp_íåy
) {

547 i‡(!
¸óã
) {

548  
NULL
;

550 
√wPage
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

551 i‡(!
√wPage
) {

552  
NULL
;

554 
√wPage
->
µ_ªf
++;

555 *
pdp_íåy
 = (
pd≥_t
Ë(
	`∑ge2∑
(
√wPage
Ë& ~0xFFFË| 
PTE_U
 | 
PTE_W
 | 
PTE_P
;

559 
pde_t
 *
pd_íåy
 = 
	`KADDR
(
	`PTE_ADDR
(*
pdp_íåy
));

560 
±e_t
 *
±e
 = 
	`pgdú_wÆk
(
pd_íåy
, 
va
, 
¸óã
);

561 i‡(!
±e
 && 
√wPage
) {

562 *
pdp_íåy
 = 0x0;

563 
	`∑ge_de¸ef
(
√wPage
);

565  
±e
;

566 
	}
}

575 
±e_t
 *

576 
	$pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
)

578 
pde_t
 *
pd_íåy
 = &
pgdú
[
	`PDX
(
va
)];

579 
PageInfo
 *
√wPage
 = 
NULL
;

581 i‡(!*
pd_íåy
) {

582 i‡(!
¸óã
) {

583  
NULL
;

585 
√wPage
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

586 i‡(!
√wPage
) {

587  
NULL
;

589 
√wPage
->
µ_ªf
++;

590 *
pd_íåy
 = (
pde_t
Ë(
	`∑ge2∑
(
√wPage
Ë& ~0xFFFË| 
PTE_P
 | 
PTE_U
| 
PTE_W
;

594 
±e_t
 *
±e
 = 
	`KADDR
(
	`PTE_ADDR
(*
pd_íåy
));

595 i‡(!
±e
) {

596  
NULL
;

598  &
±e
[
	`PTX
(
va
)];

599 
	}
}

612 
	$boŸ_m≠_ªgi⁄
(
pml4e_t
 *
pml4e
, 
uöçå_t
 
œ
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
)

614 
±e_t
 *
±e
;

615 
i
 = 0; i < (
size
 / 
PGSIZE
); i++) {

616 
±e
 = 
	`pml4e_wÆk
(
pml4e
, (*)
œ
, 
åue
);

617 i‡(!
±e
)

618 
	`∑nic
("failedÅo findÅheÖhysical memory");

619 *
±e
 = 
∑
 | 
≥rm
 | 
PTE_P
;

620 
œ
 +
PGSIZE
;

621 
∑
 +
PGSIZE
;

623 
	}
}

651 
	$∑ge_ö£π
(
pml4e_t
 *
pml4e
, 
PageInfo
 *
µ
, *
va
, 
≥rm
)

653 
±e_t
 *
±e
 = 
	`pml4e_wÆk
(
pml4e
, 
va
, 
åue
);

654 i‡(!
±e
) {

655  -
E_NO_MEM
;

657 i‡(*
±e
 & 
PTE_P
) {

658 
	`∑ge_ªmove
(
pml4e
, 
va
);

661 
µ
->
µ_ªf
++;

662 *
±e
 = (
	`∑ge2∑
(
µ
Ë& ~0xFFFË| 
≥rm
 | 
PTE_P
;

664 
pml4e
[
	`PML4
(
va
)] |
≥rm
 | 
PTE_P
;

666 
	}
}

679 
PageInfo
 *

680 
	$∑ge_lookup
(
pml4e_t
 *
pml4e
, *
va
, 
±e_t
 **
±e_°‹e
)

682 
±e_t
 *
±e
 = 
	`pml4e_wÆk
(
pml4e
, 
va
, 
åue
);

683 i‡(
±e
 && (*±ê& 
PTE_P
)) {

684 
phyßddr_t
 
∑
 = (phyßddr_tË*
±e
;

685 i‡(
±e_°‹e
) {

686 *
±e_°‹e
 = 
±e
;

688  
	`∑2∑ge
(
∑
);

690  
NULL
;

691 
	}
}

709 
	$∑ge_ªmove
(
pml4e_t
 *
pml4e
, *
va
)

711 
±e_t
 *
±e
;

712 
PageInfo
 *
∑ge
 = 
	`∑ge_lookup
(
pml4e
, 
va
, &
±e
);

713 i‡(
∑ge
) {

714 
	`∑ge_de¸ef
(
∑ge
);

715 i‡(
±e
) {

716 *
±e
 = 0;

717 
	`éb_övÆid©e
(
pml4e
, 
va
);

720 
	}
}

727 
	$éb_övÆid©e
(
pml4e_t
 *
pml4e
, *
va
)

731 
	`övÕg
(
va
);

732 
	}
}

734 
uöçå_t
 
	gu£r_mem_check_addr
;

755 
	$u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

759 i‡((
uöçå_t
Ë
va
 >
ULIM
 || (uöçå_tËv®+ 
Àn
 >= ULIM ){

760 
u£r_mem_check_addr
 = (
uöçå_t
Ë
va
;

761  -
E_FAULT
;

763 
uöçå_t
 
lowî
 = (uöçå_t)
	`ROUNDDOWN
(
va
,
PGSIZE
);

764 
uöçå_t
 
uµî
 = (uöçå_t)
	`ROUNDUP
(
va
 + 
Àn
,
PGSIZE
);

765 
i
;

767 
i
 = 0;ò< (
uµî
 - 
lowî
)/
PGSIZE
; i++) {

768 * 
cur_va
 = (*Ë(
lowî
 + 
i
 * 
PGSIZE
);

769 
±e_t
 *
±e
 = 
	`pml4e_wÆk
(
ív
->
ív_pml4e
, 
cur_va
, 
Ál£
);

770 
u£r_mem_check_addr
 = (
uöçå_t
Ë
cur_va
 >(uöçå_t)
va
 ? (uintptr_t) cur_va : (uintptr_t) va;

771 i‡(!
±e
){

772  -
E_FAULT
;

774 i‡((*
±e
 & (
PTE_P
 | 
≥rm
)) != (PTE_P |Öerm)){

775  -
E_FAULT
;

780 
	}
}

790 
	$u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

792 i‡(
	`u£r_mem_check
(
ív
, 
va
, 
Àn
, 
≥rm
 | 
PTE_U
) < 0) {

793 
	`˝rötf
("[%08x] user_mem_checkássertion failure for "

794 "v®%08x\n", 
ív
->
ív_id
, 
u£r_mem_check_addr
);

795 
	`ív_de°roy
(
ív
);

797 
	}
}

809 
	$check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
)

811 
PageInfo
 *
µ
;

812 
pdx_limô
 = 
⁄ly_low_mem‹y
 ? 1 : 
NPDENTRIES
;

813 
uöt64_t
 
n‰ì_ba£mem
 = 0, 
n‰ì_extmem
 = 0;

814 *
fú°_‰ì_∑ge
;

816 i‡(!
∑ge_‰ì_li°
)

817 
	`∑nic
("'page_free_list' isáÇullÖointer!");

819 i‡(
⁄ly_low_mem‹y
) {

822 
PageInfo
 *
µ1
, *
µ2
;

823 
PageInfo
 **
ç
[2] = { &
µ1
, &
µ2
 };

824 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

825 
∑gëy≥
 = 
	`PDX
(
	`∑ge2∑
(
µ
)Ë>
pdx_limô
;

826 *
ç
[
∑gëy≥
] = 
µ
;

827 
ç
[
∑gëy≥
] = &
µ
->
µ_lök
;

829 *
ç
[1] = 0;

830 *
ç
[0] = 
µ2
;

831 
∑ge_‰ì_li°
 = 
µ1
;

836 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
)

837 i‡(
	`PDX
(
	`∑ge2∑
(
µ
)Ë< 
pdx_limô
)

838 
	`mem£t
(
	`∑ge2kva
(
µ
), 0x97, 128);

840 
fú°_‰ì_∑ge
 = 
	`boŸ_Æloc
(0);

841 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

843 
	`as£π
(
µ
 >
∑ges
);

844 
	`as£π
(
µ
 < 
∑ges
 + 
≈ages
);

845 
	`as£π
(((*Ë
µ
 - (*Ë
∑ges
) % (*pp) == 0);

848 
	`as£π
(
	`∑ge2∑
(
µ
) != 0);

849 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
IOPHYSMEM
);

850 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
 - 
PGSIZE
);

851 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
);

852 
	`as£π
(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
 || 
	`∑ge2kva
’pË>
fú°_‰ì_∑ge
);

854 i‡(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
)

855 ++
n‰ì_ba£mem
;

857 ++
n‰ì_extmem
;

860 
	`as£π
(
n‰ì_extmem
 > 0);

861 
	}
}

869 
	$check_∑ge_Æloc
()

871 
PageInfo
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

872 
n‰ì
;

873 
PageInfo
 *
Ê
;

874 *
c
;

875 
i
;

880 
µ0
 = 
∑ge_‰ì_li°
, 
n‰ì
 = 0;Öp0;Öp0 =Öp0->
µ_lök
) {

881 
	`mem£t
(
	`∑ge2kva
(
µ0
), 0x97, 
PGSIZE
);

884 
µ0
 = 
∑ge_‰ì_li°
, 
n‰ì
 = 0;Öp0;Öp0 =Öp0->
µ_lök
) {

886 
	`as£π
(
µ0
 >
∑ges
);

887 
	`as£π
(
µ0
 < 
∑ges
 + 
≈ages
);

890 
	`as£π
(
	`∑ge2∑
(
µ0
) != 0);

891 
	`as£π
(
	`∑ge2∑
(
µ0
Ë!
IOPHYSMEM
);

892 
	`as£π
(
	`∑ge2∑
(
µ0
Ë!
EXTPHYSMEM
 - 
PGSIZE
);

893 
	`as£π
(
	`∑ge2∑
(
µ0
Ë!
EXTPHYSMEM
);

896 
µ0
 = 
µ1
 = 
µ2
 = 0;

897 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

898 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

899 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

900 
	`as£π
(
µ0
);

901 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

902 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

903 
	`as£π
(
	`∑ge2∑
(
µ0
Ë< 
≈ages
*
PGSIZE
);

904 
	`as£π
(
	`∑ge2∑
(
µ1
Ë< 
≈ages
*
PGSIZE
);

905 
	`as£π
(
	`∑ge2∑
(
µ2
Ë< 
≈ages
*
PGSIZE
);

908 
Ê
 = 
∑ge_‰ì_li°
;

909 
∑ge_‰ì_li°
 = 0;

912 
	`as£π
(!
	`∑ge_Æloc
(0));

915 
	`∑ge_‰ì
(
µ0
);

916 
	`∑ge_‰ì
(
µ1
);

917 
	`∑ge_‰ì
(
µ2
);

918 
µ0
 = 
µ1
 = 
µ2
 = 0;

919 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

920 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

921 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

922 
	`as£π
(
µ0
);

923 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

924 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

925 
	`as£π
(!
	`∑ge_Æloc
(0));

928 
	`mem£t
(
	`∑ge2kva
(
µ0
), 1, 
PGSIZE
);

929 
	`∑ge_‰ì
(
µ0
);

930 
	`as£π
((
µ
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)));

931 
	`as£π
(
µ
 && 
µ0
 ==Öp);

932 
c
 = 
	`∑ge2kva
(
µ
);

933 
i
 = 0; i < 
PGSIZE
; i++)

934 
	`as£π
(
c
[
i
] == 0);

937 
∑ge_‰ì_li°
 = 
Ê
;

940 
	`∑ge_‰ì
(
µ0
);

941 
	`∑ge_‰ì
(
µ1
);

942 
	`∑ge_‰ì
(
µ2
);

944 
	`˝rötf
("check_page_alloc() succeeded!\n");

945 
	}
}

956 
	$check_boŸ_pml4e
(
pml4e_t
 *
pml4e
)

958 
uöt64_t
 
i
, 
n
;

960 
pml4e
 = 
boŸ_pml4e
;

963 
n
 = 
	`ROUNDUP
(
≈ages
*(
PageInfo
), 
PGSIZE
);

964 
i
 = 0; i < 
n
; i +
PGSIZE
) {

966 
	`as£π
(
	`check_va2∑
(
pml4e
, 
UPAGES
 + 
i
Ë=
	`PADDR
(
∑ges
) + i);

970 
n
 = 
	`ROUNDUP
(
NENV
*(
Env
), 
PGSIZE
);

971 
i
 = 0; i < 
n
; i +
PGSIZE
) {

973 
	`as£π
(
	`check_va2∑
(
pml4e
, 
UENVS
 + 
i
Ë=
	`PADDR
(
ívs
) + i);

977 
i
 = 0; i < 
≈ages
 * 
PGSIZE
; i += PGSIZE)

978 
	`as£π
(
	`check_va2∑
(
pml4e
, 
KERNBASE
 + 
i
) == i);

981 
i
 = 0; i < 
KSTKSIZE
; i +
PGSIZE
) {

982 
	`as£π
(
	`check_va2∑
(
pml4e
, 
KSTACKTOP
 - 
KSTKSIZE
 + 
i
Ë=
	`PADDR
(
boŸ°ack
) + i);

984 
	`as£π
(
	`check_va2∑
(
pml4e
, 
KSTACKTOP
 - 
KSTKSIZE
 - 1 ) == ~0);

986 
pd≥_t
 *
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[1]));

987 
pde_t
 *
pgdú
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[0]));

989 
i
 = 0; i < 
NPDENTRIES
; i++) {

990 
i
) {

992 
	`PDX
(
KSTACKTOP
 - 1):

993 
	`PDX
(
UPAGES
):

994 
	`PDX
(
UENVS
):

995 
	`as£π
(
pgdú
[
i
] & 
PTE_P
);

998 i‡(
i
 >
	`PDX
(
KERNBASE
)) {

999 i‡(
pgdú
[
i
] & 
PTE_P
)

1000 
	`as£π
(
pgdú
[
i
] & 
PTE_W
);

1002 
	`as£π
(
pgdú
[
i
] == 0);

1007 
	`˝rötf
("check_boot_pml4e() succeeded!\n");

1008 
	}
}

1015 
phyßddr_t


1016 
	$check_va2∑
(
pml4e_t
 *
pml4e
, 
uöçå_t
 
va
)

1018 
±e_t
 *
±e
;

1019 
pd≥_t
 *
pd≥
;

1020 
pde_t
 *
pde
;

1022 
pml4e
 = &pml4e[
	`PML4
(
va
)];

1024 if(!(*
pml4e
 & 
PTE_P
))

1026 
pd≥
 = (
pd≥_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(*
pml4e
));

1028 i‡(!(
pd≥
[
	`PDPE
(
va
)] & 
PTE_P
))

1030 
pde
 = (
pde_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(
pd≥
[
	`PDPE
(
va
)]));

1032 
pde
 = &pde[
	`PDX
(
va
)];

1033 i‡(!(*
pde
 & 
PTE_P
))

1035 
±e
 = (
±e_t
*Ë
	`KADDR
(
	`PTE_ADDR
(*
pde
));

1037 i‡(!(
±e
[
	`PTX
(
va
)] & 
PTE_P
))

1040  
	`PTE_ADDR
(
±e
[
	`PTX
(
va
)]);

1041 
	}
}

1046 
	$∑ge_check
()

1048 
PageInfo
 *
µ0
, *
µ1
, *
µ2
,*
µ3
,*
µ4
,*
µ5
;

1049 
PageInfo
 * 
Ê
;

1050 
±e_t
 *
±ï
, *
±ï1
;

1051 
pd≥_t
 *
pd≥
;

1052 
pde_t
 *
pde
;

1053 *
va
;

1054 
i
;

1055 
µ0
 = 
µ1
 = 
µ2
 = 
µ3
 = 
µ4
 = 
µ5
 =0;

1056 
	`as£π
(
µ0
 = 
	`∑ge_Æloc
(0));

1057 
	`as£π
(
µ1
 = 
	`∑ge_Æloc
(0));

1058 
	`as£π
(
µ2
 = 
	`∑ge_Æloc
(0));

1059 
	`as£π
(
µ3
 = 
	`∑ge_Æloc
(0));

1060 
	`as£π
(
µ4
 = 
	`∑ge_Æloc
(0));

1061 
	`as£π
(
µ5
 = 
	`∑ge_Æloc
(0));

1063 
	`as£π
(
µ0
);

1064 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

1065 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

1066 
	`as£π
(
µ3
 &&Öp3 !
µ2
 &&Öp3 !
µ1
 &&Öp3 !
µ0
);

1067 
	`as£π
(
µ4
 &&Öp4 !
µ3
 &&Öp4 !
µ2
 &&Öp4 !
µ1
 &&Öp4 !
µ0
);

1068 
	`as£π
(
µ5
 &&Öp5 !
µ4
 &&Öp5 !
µ3
 &&Öp5 !
µ2
 &&Öp5 !
µ1
 &&Öp5 !
µ0
);

1071 
Ê
 = 
∑ge_‰ì_li°
;

1072 
∑ge_‰ì_li°
 = 
NULL
;

1075 
	`as£π
(!
	`∑ge_Æloc
(0));

1078 
	`as£π
(
	`∑ge_lookup
(
boŸ_pml4e
, (*Ë0x0, &
±ï
Ë=
NULL
);

1081 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, 0x0, 0) < 0);

1084 
	`∑ge_‰ì
(
µ0
);

1085 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, 0x0, 0) < 0);

1086 
	`∑ge_‰ì
(
µ2
);

1087 
	`∑ge_‰ì
(
µ3
);

1091 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, 0x0, 0) == 0);

1092 
	`as£π
((
	`PTE_ADDR
(
boŸ_pml4e
[0]Ë=
	`∑ge2∑
(
µ0
Ë|| PTE_ADDR(boŸ_pml4e[0]Ë=∑ge2∑(
µ2
Ë|| PTE_ADDR(boŸ_pml4e[0]Ë=∑ge2∑(
µ3
) ));

1093 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0x0Ë=
	`∑ge2∑
(
µ1
));

1094 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1095 
	`as£π
(
µ0
->
µ_ªf
 == 1);

1096 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1098 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ3
, (*Ë
PGSIZE
, 0) == 0);

1099 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ3
));

1100 
	`as£π
(
µ3
->
µ_ªf
 == 2);

1103 
	`as£π
(!
	`∑ge_Æloc
(0));

1106 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ3
, (*Ë
PGSIZE
, 0) == 0);

1107 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ3
));

1108 
	`as£π
(
µ3
->
µ_ªf
 == 2);

1112 
	`as£π
(!
	`∑ge_Æloc
(0));

1114 
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[
	`PML4
(
PGSIZE
)]));

1115 
pde
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[
	`PDPE
(
PGSIZE
)]));

1116 
±ï
 = 
	`KADDR
(
	`PTE_ADDR
(
pde
[
	`PDX
(
PGSIZE
)]));

1117 
	`as£π
(
	`pml4e_wÆk
(
boŸ_pml4e
, (*)
PGSIZE
, 0Ë=
±ï
+
	`PTX
(PGSIZE));

1120 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ3
, (*Ë
PGSIZE
, 
PTE_U
) == 0);

1121 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ3
));

1122 
	`as£π
(
µ3
->
µ_ªf
 == 2);

1123 
	`as£π
(*
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
);

1124 
	`as£π
(
boŸ_pml4e
[0] & 
PTE_U
);

1128 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ0
, (*Ë
PTSIZE
, 0) < 0);

1131 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, (*Ë
PGSIZE
, 0) == 0);

1132 
	`as£π
(!(*
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
));

1135 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0Ë=
	`∑ge2∑
(
µ1
));

1136 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

1138 
	`as£π
(
µ1
->
µ_ªf
 == 2);

1139 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1143 
	`∑ge_ªmove
(
boŸ_pml4e
, 0x0);

1144 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0x0) == ~0);

1145 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

1146 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1147 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1151 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, (*Ë
PGSIZE
, 0) == 0);

1152 
	`as£π
(
µ1
->
µ_ªf
);

1153 
	`as£π
(
µ1
->
µ_lök
 =
NULL
);

1156 
	`∑ge_ªmove
(
boŸ_pml4e
, (*Ë
PGSIZE
);

1157 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0x0) == ~0);

1158 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
) == ~0);

1159 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1160 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1166 
	`mem£t
(
	`∑ge2kva
(
µ1
), 1, 
PGSIZE
);

1167 
	`mem£t
(
	`∑ge2kva
(
µ2
), 2, 
PGSIZE
);

1168 
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ1
, 0x0, 0);

1169 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1170 
	`as£π
(*(*)0 == 0x01010101);

1171 
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ2
, 0x0, 0);

1172 
	`as£π
(*(*)0 == 0x02020202);

1173 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1174 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1175 
	`∑ge_ªmove
(
boŸ_pgdú
, 0x0);

1176 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1180 
PageInfo
 *
µ_l1
 = 
	`∑2∑ge
(
	`PTE_ADDR
(
boŸ_pml4e
[0]));

1181 
boŸ_pml4e
[0] = 0;

1182 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1183 
	`∑ge_de¸ef
(
µ_l1
);

1185 i‡(
µ_l1
 !
µ3
Ë
	`∑ge_de¸ef
(pp3);

1186 i‡(
µ_l1
 !
µ2
Ë
	`∑ge_de¸ef
(pp2);

1187 i‡(
µ_l1
 !
µ0
Ë
	`∑ge_de¸ef
(pp0);

1188 
va
 = (*)(
PGSIZE
 * 100);

1189 
±ï
 = 
	`pml4e_wÆk
(
boŸ_pml4e
, 
va
, 1);

1190 
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[
	`PML4
(
va
)]));

1191 
pde
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[
	`PDPE
(
va
)]));

1192 
±ï1
 = 
	`KADDR
(
	`PTE_ADDR
(
pde
[
	`PDX
(
va
)]));

1193 
	`as£π
(
±ï
 =
±ï1
 + 
	`PTX
(
va
));

1196 
	`mem£t
(
	`∑ge2kva
(
µ4
), 0xFF, 
PGSIZE
);

1197 
	`pml4e_wÆk
(
boŸ_pml4e
, 0x0, 1);

1198 
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[0]));

1199 
pde
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[0]));

1200 
±ï
 = 
	`KADDR
(
	`PTE_ADDR
(
pde
[0]));

1201 
i
=0; i<
NPTENTRIES
; i++)

1202 
	`as£π
((
±ï
[
i
] & 
PTE_P
) == 0);

1203 
boŸ_pml4e
[0] = 0;

1206 
∑ge_‰ì_li°
 = 
Ê
;

1209 
	`∑ge_de¸ef
(
µ0
);

1210 
	`∑ge_de¸ef
(
µ2
);

1211 
	`∑ge_de¸ef
(
µ3
);

1214 
	`as£π
(
µ0
->
µ_ªf
 == 0);

1215 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1216 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1217 
	`as£π
(
µ3
->
µ_ªf
 == 0);

1218 
	`as£π
(
µ4
->
µ_ªf
 == 0);

1219 
	`as£π
(
µ5
->
µ_ªf
 == 0);

1221 
	`˝rötf
("check_page() succeeded!\n");

1222 
	}
}

	@pmap.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/k˛ock.h
>

11 
	~<kîn/mu…iboŸ.h
>

12 
	~<kîn/ív.h
>

13 
	~<kîn/˝u.h
>

15 
uöt64_t
 
pml4phys
;

16 
	#BOOT_PAGE_TABLE_START
 ((
uöt64_t
Ë
	`KADDR
((uöt64_tË&
pml4phys
))

	)

17 
	#BOOT_PAGE_TABLE_END
 ((
uöt64_t
Ë
	`KADDR
((uöt64_tË(&
pml4phys
Ë+ 5*
PGSIZE
))

	)

20 
size_t
 
	g≈ages
;

21 
size_t
 
	g≈ages_ba£mem
;

24 
pml4e_t
 *
	gboŸ_pml4e
;

25 
phyßddr_t
 
	gboŸ_¸3
;

26 
PageInfo
 *
	g∑ges
;

27 
PageInfo
 *
	g∑ge_‰ì_li°
;

34 
	$nvøm_ªad
(
r
)

36  
	`mc146818_ªad
(
r
) | (mc146818_read(r + 1) << 8);

37 
	}
}

40 
	$mu…iboŸ_ªad
(
mu…iboŸ_öfo_t
* 
mböfo
, 
size_t
* 
ba£mem
, size_t* 
extmem
) {

41 
i
;

43 
mem‹y_m≠_t
* 
mm≠_ba£
 = (mem‹y_m≠_t*)(
uöçå_t
)
mböfo
->
mm≠_addr
;

44 
mem‹y_m≠_t
* 
mm≠_li°
[
mböfo
->
mm≠_Àngth
/ ((memory_map_t))];

46 
	`˝rötf
("\ne820 MEMORY MAP\n");

47 
i
 = 0; i < (
mböfo
->
mm≠_Àngth
 / ((
mem‹y_m≠_t
))); i++) {

48 
mem‹y_m≠_t
* 
mm≠
 = &
mm≠_ba£
[
i
];

50 
uöt64_t
 
addr
 = 
	`APPEND_HILO
(
mm≠
->
ba£_addr_high
, mm≠->
ba£_addr_low
);

51 
uöt64_t
 
Àn
 = 
	`APPEND_HILO
(
mm≠
->
Àngth_high
, mm≠->
Àngth_low
);

53 
	`˝rötf
("size: %d,áddªss: 0x%016x,Üígth: 0x%016x,Åy≥: %x\n", 
mm≠
->
size
,

54 
addr
, 
Àn
, 
mm≠
->
ty≥
);

56 if(
mm≠
->
ty≥
 > 5 || mmap->type < 1)

57 
mm≠
->
ty≥
 = 
MB_TYPE_RESERVED
;

60 
j
 = 0;

61 ;
j
<
i
;j++) {

62 
mem‹y_m≠_t
* 
this
 = 
mm≠_li°
[
j
];

63 
uöt64_t
 
this_addr
 = 
	`APPEND_HILO
(
this
->
ba£_addr_high
,Åhis->
ba£_addr_low
);

64 if(
this_addr
 > 
addr
) {

65 
œ°
 = 
i
+1;

66 
œ°
 !
j
) {

67 *(
mm≠_li°
 + 
œ°
) = *(mmap_list +Üast - 1);

68 
œ°
--;

73 
mm≠_li°
[
j
] = 
mm≠
;

75 
	`˝rötf
("\n");

78 
i
=1;ò< (
mböfo
->
mm≠_Àngth
 / ((
mem‹y_m≠_t
))); i++) {

79 
mem‹y_m≠_t
* 
¥ev
 = 
mm≠_li°
[
i
-1];

80 
mem‹y_m≠_t
* 
this
 = 
mm≠_li°
[
i
];

82 
uöt64_t
 
this_addr
 = 
	`APPEND_HILO
(
this
->
ba£_addr_high
,Åhis->
ba£_addr_low
);

83 
uöt64_t
 
¥ev_addr
 = 
	`APPEND_HILO
(
¥ev
->
ba£_addr_high
,Öªv->
ba£_addr_low
);

84 
uöt64_t
 
¥ev_Àngth
 = 
	`APPEND_HILO
(
¥ev
->
Àngth_high
,Öªv->
Àngth_low
);

85 
uöt64_t
 
this_Àngth
 = 
	`APPEND_HILO
(
this
->
Àngth_high
,Åhis->
Àngth_low
);

88 if(
¥ev_addr
 + 
¥ev_Àngth
 =
this_addr
 && 
¥ev
->
ty≥
 =
this
->type) {

89 
this
->
Àngth_low
 = (
uöt32_t
)
¥ev_Àngth
 + 
this_Àngth
;

90 
this
->
Àngth_high
 = (
uöt32_t
)((
¥ev_Àngth
 + 
this_Àngth
)>>32);

91 
this
->
ba£_addr_low
 = 
¥ev
->base_addr_low;

92 
this
->
ba£_addr_high
 = 
¥ev
->base_addr_high;

93 
mm≠_li°
[
i
-1] = 
NULL
;

94 } if(
¥ev_addr
 + 
¥ev_Àngth
 > 
this_addr
) {

96 
uöt32_t
 
ty≥
 = 
	`ª°ri˘ive_ty≥
(
¥ev
->ty≥, 
this
->type);

97 
¥ev
->
ty≥
 =Åype;

98 
this
->
ty≥
 =Åype;

102 
i
=0;ò< (
mböfo
->
mm≠_Àngth
 / ((
mem‹y_m≠_t
))); i++) {

103 
mem‹y_m≠_t
* 
mm≠
 = 
mm≠_li°
[
i
];

104 if(
mm≠
) {

105 if(
mm≠
->
ty≥
 =
MB_TYPE_USABLE
 || mm≠->ty≥ =
MB_TYPE_ACPI_RECLM
) {

106 if(
mm≠
->
ba£_addr_low
 < 0x100000 && mm≠->
ba£_addr_high
 == 0)

107 *
ba£mem
 +
	`APPEND_HILO
(
mm≠
->
Àngth_high
, mm≠->
Àngth_low
);

109 *
extmem
 +
	`APPEND_HILO
(
mm≠
->
Àngth_high
, mm≠->
Àngth_low
);

113 
	}
}

116 
	$i386_dëe˘_mem‹y
()

118 
size_t
 
≈ages_extmem
;

119 
size_t
 
ba£mem
 = 0;

120 
size_t
 
extmem
 = 0;

123 
mu…iboŸ_öfo
[];

124 
uöçå_t
* 
mbp
 = (uöçå_t*)
mu…iboŸ_öfo
;

125 
mu…iboŸ_öfo_t
 * 
mböfo
 = (mu…iboŸ_öfo_t*)*
mbp
;

127 if(
mböfo
 && (mböfo->
Êags
 & 
MB_FLAG_MMAP
)) {

128 
	`mu…iboŸ_ªad
(
mböfo
, &
ba£mem
, &
extmem
);

130 
ba£mem
 = (
	`nvøm_ªad
(
NVRAM_BASELO
) * 1024);

131 
extmem
 = (
	`nvøm_ªad
(
NVRAM_EXTLO
) * 1024);

134 
	`as£π
(
ba£mem
);

136 
≈ages_ba£mem
 = 
ba£mem
 / 
PGSIZE
;

137 
≈ages_extmem
 = 
extmem
 / 
PGSIZE
;

139 if(
	`nvøm_ªad
(
NVRAM_EXTLO
) == 0xffff) {

141 
size_t
 
≥xtmem
 = 
	`nvøm_ªad
(
NVRAM_EXTGT16LO
) * (64 * 1024);

142 
≈ages_extmem
 = ((16 * 1024 * 1024Ë+ 
≥xtmem
 - (1 * 1024 * 1024)Ë/ 
PGSIZE
;

147 i‡(
≈ages_extmem
)

148 
≈ages
 = (
EXTPHYSMEM
 / 
PGSIZE
Ë+ 
≈ages_extmem
;

150 
≈ages
 = 
≈ages_ba£mem
;

152 
	`˝rötf
("Physical memory: %uMávailable, base = %uK,Éxtended = %uK,Çpages = %d\n",

153 
≈ages
 * 
PGSIZE
 / (1024 * 1024),

154 
≈ages_ba£mem
 * 
PGSIZE
 / 1024,

155 
≈ages_extmem
 * 
PGSIZE
 / 1024,

156 
≈ages
);

163 
uöt64_t
 
u∑ges_max
 = (
ULIM
 - 
UPAGES
Ë/ (
PageInfo
);

164 
uöt64_t
 
kîn_mem_max
 = (
UVPT
 - 
KERNBASE
Ë/ 
PGSIZE
;

165 
	`˝rötf
("PagesÜimitedÅo %llu by upageáddressÑange (%uMB), PagesÜimitedÅo %llu byÑemappedÖhys mem (%uMB)\n",

166 
u∑ges_max
, ((u∑ges_max * 
PGSIZE
) / (1024 * 1024)),

167 
kîn_mem_max
, kîn_mem_max * 
PGSIZE
 / (1024 * 1024));

168 
uöt64_t
 
max_≈ages
 = 
u∑ges_max
 < 
kîn_mem_max
 ? upages_max : kern_mem_max;

170 if(
≈ages
 > 
max_≈ages
) {

171 
≈ages
 = 
max_≈ages
 - 1024;

172 
	`˝rötf
("Usög o∆y %uK o‡thêavaûabÀ mem‹y.\n", 
max_≈ages
);

174 
	}
}

181 
mem_öô_mp
();

182 
boŸ_m≠_ªgi⁄
(
pml4e_t
 *
pml4e
, 
uöçå_t
 
va
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
);

183 
check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
);

184 
check_∑ge_Æloc
();

185 
check_boŸ_pml4e
(
pml4e_t
 *
pml4e
);

186 
phyßddr_t
 
check_va2∑
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
);

187 
∑ge_check
();

188 
∑ge_öôµ
(
PageInfo
 *
µ
);

202 
	$boŸ_Æloc
(
uöt32_t
 
n
) {

203 *
√xt‰ì
;

204 *
ªsu…
;

211 i‡(!
√xt‰ì
) {

212 
íd
[];

213 
√xt‰ì
 = 
	`ROUNDUP
((*Ë
íd
, 
PGSIZE
);

224 
ªsu…
 = 
√xt‰ì
;

225 i‡(
n
 > 0) {

226 
√xt‰ì
 = 
	`ROUNDUP
“ext‰ì + 
n
, 
PGSIZE
);

227 i‡(((
uöt64_t
Ë
√xt‰ì
 - 
KERNBASE
Ë> (
≈ages
 * 
PGSIZE
)) {

228 
	`∑nic
("Ouào‡mem‹y!", 
n
);

230 } i‡(
n
 == 0) {

234  
ªsu…
;

235 
	}
}

247 
	$x64_vm_öô
()

249 
pml4e_t
* 
pml4e
;

250 
uöt32_t
 
¸0
;

251 
uöt64_t
 
n
;

252 
r
;

253 
Env
 *
ív
;

254 
	`i386_dëe˘_mem‹y
();

259 
pml4e
 = 
	`boŸ_Æloc
(
PGSIZE
);

260 
	`mem£t
(
pml4e
, 0, 
PGSIZE
);

261 
boŸ_pml4e
 = 
pml4e
;

262 
boŸ_¸3
 = 
	`PADDR
(
pml4e
);

270 
uöt32_t
 
∑ge_°©e_size
 = (
PageInfo
);

271 
∑ges
 = (
PageInfo
*Ë
	`boŸ_Æloc
(
≈ages
 * 
∑ge_°©e_size
);

278 
uöt32_t
 
ív_size
 = 
	`ROUNDUP
((
Env
Ë* 
NENV
, 
PGSIZE
);

279 
ívs
 = 
	`boŸ_Æloc
(
ív_size
);

286 
	`∑ge_öô
();

309 
	`boŸ_m≠_ªgi⁄
(
boŸ_pml4e
, 
UPAGES
, 
≈ages
 * 
∑ge_°©e_size
, 
	`PADDR
(
∑ges
), 
PTE_U
);

310 
	`boŸ_m≠_ªgi⁄
(
boŸ_pml4e
, (
uöçå_t
Ë
∑ges
, 
PGSIZE
, 
	`PADDR
’ages), 
PTE_W
);

321 
	`boŸ_m≠_ªgi⁄
(
boŸ_pml4e
, 
UENVS
, 
ív_size
, 
	`PADDR
(
ívs
), 
PTE_U
);

322 
	`boŸ_m≠_ªgi⁄
(
boŸ_pml4e
, (
uöçå_t
Ë
ívs
, 
PGSIZE
, 
	`PADDR
”nvs), 
PTE_W
);

336 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
KSTACKTOP
 - 
KSTKSIZE
, KSTKSIZE, 
	`PADDR
(
boŸ°ack
), 
PTE_W
);

346 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
KERNBASE
, 
≈ages
 * 
PGSIZE
, 0x0, 
PTE_W
);

351 
	`mem_öô_mp
();

353 
	`check_∑ge_‰ì_li°
(1);

354 
	`check_∑ge_Æloc
();

355 
	`∑ge_check
();

356 
	`check_∑ge_‰ì_li°
(0);

357 
	`check_boŸ_pml4e
(
boŸ_pml4e
);

361 
pd≥_t
 *
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
pml4e
[1]));

362 
pde_t
 *
pgdú
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[0]));

363 
	`l¸3
(
boŸ_¸3
);

364 
	}
}

371 
	$mem_öô_mp
()

389 
uöt64_t
 
CPU_k°k_addr
;

390 
i
 = 0; i < 
NCPU
; i++) {

391 
CPU_k°k_addr
 = 
KSTACKTOP
 - (
i
 + 1Ë* 
KSTKSIZE
 - i * 
KSTKGAP
;

392 
	`boŸ_m≠_ªgi⁄
(
boŸ_pml4e
, 
CPU_k°k_addr
, 
KSTKSIZE
, 
	`PADDR
(
≥r˝u_k°acks
[
i
]), 
PTE_W
);

395 
	}
}

410 
	$∑ge_öô
()

436 
size_t
 
i
;

437 
∑ges
[0].
µ_ªf
 = 1;

438 
∑ges
[0].
µ_lök
 = 
NULL
;

440 
i
 = 1; i < 
≈ages
; i++) {

442 
uöt64_t
 
va
 = 
KERNBASE
 + 
i
 * 
PGSIZE
;

444 i‡(
va
 >
BOOT_PAGE_TABLE_START
 && v®< 
BOOT_PAGE_TABLE_END
) {

446 
∑ges
[
i
].
µ_ªf
 = 1;

447 } i‡((
i
 >
IOPHYSMEM
 / 
PGSIZE
Ë&& (ò< 
EXTPHYSMEM
 / PGSIZE)) {

450 
∑ges
[
i
].
µ_ªf
 = 1;

451 } i‡((
i
 >
EXTPHYSMEM
 / 
PGSIZE
Ë&& (ò< 
	`PADDR
(
	`boŸ_Æloc
(0)) / PGSIZE)) {

454 
∑ges
[
i
].
µ_ªf
 = 1;

455 } i‡(
i
 =(
MPENTRY_PADDR
 / 
PGSIZE
)) {

456 
∑ges
[
i
].
µ_ªf
 = 1;

457 
∑ges
[
i
].
µ_lök
 = 
NULL
;

461 
∑ges
[
i
].
µ_ªf
 = 0;

462 
∑ges
[
i
].
µ_lök
 = 
∑ge_‰ì_li°
;

463 
∑ge_‰ì_li°
 = &
∑ges
[
i
];

466 
	}
}

480 
PageInfo
 *

481 
	$∑ge_Æloc
(
Æloc_Êags
)

483 i‡(
∑ge_‰ì_li°
 =
NULL
)

484  
NULL
;

486 
PageInfo
 *
∑ge
 = 
∑ge_‰ì_li°
;

487 
∑ge_‰ì_li°
 =Öage_‰ì_li°->
µ_lök
;

491 
∑ge
->
µ_lök
 = 
NULL
;

493 i‡(
Æloc_Êags
 & 
ALLOC_ZERO
)

494 
	`mem£t
(
	`∑ge2kva
(
∑ge
), 0, 
PGSIZE
);

495  
∑ge
;

496 
	}
}

504 
	$∑ge_öôµ
(
PageInfo
 *
µ
)

506 
	`mem£t
(
µ
, 0, (*pp));

507 
	}
}

513 
	$∑ge_‰ì
(
PageInfo
 *
µ
)

515 i‡(
µ
->
µ_ªf
 !0 ||Öp->
µ_lök
 !
NULL
) {

516 
	`∑nic
("page_free:Öage cannot be freed");

518 
µ
->
µ_lök
 = 
∑ge_‰ì_li°
;

519 
∑ge_‰ì_li°
 = 
µ
;

520 
	}
}

527 
	$∑ge_de¸ef
(
PageInfo
* 
µ
)

529 i‡(--
µ
->
µ_ªf
 == 0)

530 
	`∑ge_‰ì
(
µ
);

531 
	}
}

558 
±e_t
 *

559 
	$pml4e_wÆk
(
pml4e_t
 *
pml4e
, c⁄° *
va
, 
¸óã
)

562 
PageInfo
 *
√wPage
 = 
NULL
;

563 
pml4e_t
 *
pml4_íåy
 = &
pml4e
[
	`PML4
(
va
)];

564 i‡(!*
pml4_íåy
) {

565 i‡(!
¸óã
) {

566  
NULL
;

568 
√wPage
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

569 i‡(!
√wPage
) {

570  
NULL
;

572 
√wPage
->
µ_ªf
++;

573 *
pml4_íåy
 = (
pml4e_t
Ë(
	`∑ge2∑
(
√wPage
Ë& ~0xFFFË| 
PTE_U
 | 
PTE_W
 | 
PTE_P
;

577 
pd≥_t
 *
pdp_íåy
 = 
	`KADDR
(
	`PTE_ADDR
(*
pml4_íåy
));

578 
±e_t
 *
±e
 = 
	`pd≥_wÆk
(
pdp_íåy
, 
va
, 
¸óã
);

581 i‡(!
±e
 && 
√wPage
) {

582 *
pml4_íåy
 = 0x0;

583 
	`∑ge_de¸ef
(
√wPage
);

585  
±e
;

586 
	}
}

593 
±e_t
 *

594 
	$pd≥_wÆk
(
pd≥_t
 *
pd≥
,c⁄° *
va
,
¸óã
){

596 
PageInfo
 *
√wPage
 = 
NULL
;

597 
pd≥_t
 *
pdp_íåy
 = &
pd≥
[
	`PDPE
(
va
)];

599 i‡(!*
pdp_íåy
) {

600 i‡(!
¸óã
) {

601  
NULL
;

603 
√wPage
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

604 i‡(!
√wPage
) {

605  
NULL
;

607 
√wPage
->
µ_ªf
++;

608 *
pdp_íåy
 = (
pd≥_t
Ë(
	`∑ge2∑
(
√wPage
Ë& ~0xFFFË| 
PTE_U
 | 
PTE_W
 | 
PTE_P
;

612 
pde_t
 *
pd_íåy
 = 
	`KADDR
(
	`PTE_ADDR
(*
pdp_íåy
));

613 
±e_t
 *
±e
 = 
	`pgdú_wÆk
(
pd_íåy
, 
va
, 
¸óã
);

614 i‡(!
±e
 && 
√wPage
) {

615 *
pdp_íåy
 = 0x0;

616 
	`∑ge_de¸ef
(
√wPage
);

618  
±e
;

619 
	}
}

628 
±e_t
 *

629 
	$pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
)

631 
pde_t
 *
pd_íåy
 = &
pgdú
[
	`PDX
(
va
)];

632 
PageInfo
 *
√wPage
 = 
NULL
;

634 i‡(!*
pd_íåy
) {

635 i‡(!
¸óã
) {

636  
NULL
;

638 
√wPage
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

639 i‡(!
√wPage
) {

640  
NULL
;

642 
√wPage
->
µ_ªf
++;

643 *
pd_íåy
 = (
pde_t
Ë(
	`∑ge2∑
(
√wPage
Ë& ~0xFFFË| 
PTE_P
 | 
PTE_U
| 
PTE_W
;

647 
±e_t
 *
±e
 = 
	`KADDR
(
	`PTE_ADDR
(*
pd_íåy
));

648 i‡(!
±e
) {

649  
NULL
;

651  &
±e
[
	`PTX
(
va
)];

652 
	}
}

665 
	$boŸ_m≠_ªgi⁄
(
pml4e_t
 *
pml4e
, 
uöçå_t
 
œ
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
)

667 
±e_t
 *
±e
;

668 
i
 = 0; i < (
size
 / 
PGSIZE
); i++) {

669 
±e
 = 
	`pml4e_wÆk
(
pml4e
, (*)
œ
, 
åue
);

670 i‡(!
±e
)

671 
	`∑nic
("failedÅo findÅheÖhysical memory");

672 *
±e
 = 
∑
 | 
≥rm
 | 
PTE_P
;

673 
œ
 +
PGSIZE
;

674 
∑
 +
PGSIZE
;

676 
	}
}

704 
	$∑ge_ö£π
(
pml4e_t
 *
pml4e
, 
PageInfo
 *
µ
, *
va
, 
≥rm
)

706 
±e_t
 *
±e
 = 
	`pml4e_wÆk
(
pml4e
, 
va
, 
åue
);

707 i‡(!
±e
) {

708  -
E_NO_MEM
;

710 i‡(*
±e
 & 
PTE_P
) {

711 
	`∑ge_ªmove
(
pml4e
, 
va
);

715 
µ
->
µ_ªf
++;

716 *
±e
 = (
	`∑ge2∑
(
µ
Ë& ~0xFFFË| 
≥rm
 | 
PTE_P
;

717 
pml4e
[
	`PML4
(
va
)] |
≥rm
 | 
PTE_P
;

719 
	}
}

732 
PageInfo
 *

733 
	$∑ge_lookup
(
pml4e_t
 *
pml4e
, *
va
, 
±e_t
 **
±e_°‹e
)

735 
±e_t
 *
±e
 = 
	`pml4e_wÆk
(
pml4e
, 
va
, 
åue
);

736 i‡(
±e
 && (*±ê& 
PTE_P
)) {

737 
phyßddr_t
 
∑
 = (phyßddr_tË*
±e
;

738 i‡(
±e_°‹e
) {

739 *
±e_°‹e
 = 
±e
;

741  
	`∑2∑ge
(
∑
);

743  
NULL
;

744 
	}
}

762 
	$∑ge_ªmove
(
pml4e_t
 *
pml4e
, *
va
)

764 
±e_t
 *
±e
;

765 
PageInfo
 *
∑ge
 = 
	`∑ge_lookup
(
pml4e
, 
va
, &
±e
);

766 i‡(
∑ge
) {

767 
	`∑ge_de¸ef
(
∑ge
);

768 i‡(
±e
) {

769 *
±e
 = 0;

770 
	`éb_övÆid©e
(
pml4e
, 
va
);

773 
	}
}

780 
	$éb_övÆid©e
(
pml4e_t
 *
pml4e
, *
va
)

783 
	`as£π
(
pml4e
!=
NULL
);

784 i‡(!
cuªnv
 || cuªnv->
ív_pml4e
 =
pml4e
)

785 
	`övÕg
(
va
);

786 
	}
}

794 
	$mmio_m≠_ªgi⁄
(
phyßddr_t
 
∑
, 
size_t
 
size
)

800 
uöçå_t
 
ba£
 = 
MMIOBASE
;

821 
uöt64_t
 
mmio_size
 = 
	`ROUNDUP
(
size
, 
PGSIZE
);

822 i‡(
ba£
 + 
mmio_size
 > 
MMIOLIM
) {

823 
	`∑nic
("MMIO memory overflows.\n");

825 
	`boŸ_m≠_ªgi⁄
(
boŸ_pml4e
, 
ba£
, 
mmio_size
, 
∑
, 
PTE_PCD
 | 
PTE_PWT
 | 
PTE_W
);

826 
ba£
 +
mmio_size
;

828  (*Ë(
ba£
 - 
mmio_size
);

830 
	}
}

832 
uöçå_t
 
	gu£r_mem_check_addr
;

853 
	$u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

857 i‡((
uöçå_t
Ë
va
 >
ULIM
 || (uöçå_tËv®+ 
Àn
 >= ULIM ){

858 
u£r_mem_check_addr
 = (
uöçå_t
Ë
va
;

859  -
E_FAULT
;

863 
uöçå_t
 
lowî
 = (uöçå_t)
	`ROUNDDOWN
(
va
,
PGSIZE
);

864 
uöçå_t
 
uµî
 = (uöçå_t)
	`ROUNDUP
(
va
 + 
Àn
,
PGSIZE
);

865 
i
;

867 
i
 = 0;ò< (
uµî
 - 
lowî
)/
PGSIZE
; i++) {

868 * 
cur_va
 = (*Ë(
lowî
 + 
i
 * 
PGSIZE
);

869 
±e_t
 *
±e
 = 
	`pml4e_wÆk
(
ív
->
ív_pml4e
, 
cur_va
, 
Ál£
);

870 
u£r_mem_check_addr
 = (
uöçå_t
Ë
cur_va
 >(uöçå_t)
va
 ? (uintptr_t) cur_va : (uintptr_t) va;

871 i‡(!
±e
){

872  -
E_FAULT
;

874 i‡((*
±e
 & (
PTE_P
 | 
≥rm
)) != (PTE_P |Öerm)){

875  -
E_FAULT
;

880 
	}
}

890 
	$u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

892 i‡(
	`u£r_mem_check
(
ív
, 
va
, 
Àn
, 
≥rm
 | 
PTE_U
) < 0) {

893 
	`˝rötf
("[%08x] user_mem_checkássertion failure for "

894 "v®%08x\n", 
ív
->
ív_id
, 
u£r_mem_check_addr
);

895 
	`ív_de°roy
(
ív
);

897 
	}
}

909 
	$check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
)

911 
PageInfo
 *
µ
;

912 
pdx_limô
 = 
⁄ly_low_mem‹y
 ? 1 : 
NPDENTRIES
;

913 
uöt64_t
 
n‰ì_ba£mem
 = 0, 
n‰ì_extmem
 = 0;

914 *
fú°_‰ì_∑ge
;

916 i‡(!
∑ge_‰ì_li°
)

917 
	`∑nic
("'page_free_list' isáÇullÖointer!");

919 i‡(
⁄ly_low_mem‹y
) {

922 
PageInfo
 *
µ1
, *
µ2
;

923 
PageInfo
 **
ç
[2] = { &
µ1
, &
µ2
 };

924 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

925 
∑gëy≥
 = 
	`PDX
(
	`∑ge2∑
(
µ
)Ë>
pdx_limô
;

926 *
ç
[
∑gëy≥
] = 
µ
;

927 
ç
[
∑gëy≥
] = &
µ
->
µ_lök
;

929 *
ç
[1] = 0;

930 *
ç
[0] = 
µ2
;

931 
∑ge_‰ì_li°
 = 
µ1
;

936 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
)

937 i‡(
	`PDX
(
	`∑ge2∑
(
µ
)Ë< 
pdx_limô
)

938 
	`mem£t
(
	`∑ge2kva
(
µ
), 0x97, 128);

940 
fú°_‰ì_∑ge
 = 
	`boŸ_Æloc
(0);

941 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

943 
	`as£π
(
µ
 >
∑ges
);

944 
	`as£π
(
µ
 < 
∑ges
 + 
≈ages
);

945 
	`as£π
(((*Ë
µ
 - (*Ë
∑ges
) % (*pp) == 0);

948 
	`as£π
(
	`∑ge2∑
(
µ
) != 0);

949 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
IOPHYSMEM
);

950 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
 - 
PGSIZE
);

951 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
);

952 
	`as£π
(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
 || 
	`∑ge2kva
’pË>
fú°_‰ì_∑ge
);

954 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
MPENTRY_PADDR
);

956 i‡(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
)

957 ++
n‰ì_ba£mem
;

959 ++
n‰ì_extmem
;

962 
	`as£π
(
n‰ì_extmem
 > 0);

963 
	}
}

971 
	$check_∑ge_Æloc
()

973 
PageInfo
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

974 
n‰ì
;

975 
PageInfo
 *
Ê
;

976 *
c
;

977 
i
;

982 
µ0
 = 
∑ge_‰ì_li°
, 
n‰ì
 = 0;Öp0;Öp0 =Öp0->
µ_lök
) {

983 
	`mem£t
(
	`∑ge2kva
(
µ0
), 0x97, 
PGSIZE
);

986 
µ0
 = 
∑ge_‰ì_li°
, 
n‰ì
 = 0;Öp0;Öp0 =Öp0->
µ_lök
) {

988 
	`as£π
(
µ0
 >
∑ges
);

989 
	`as£π
(
µ0
 < 
∑ges
 + 
≈ages
);

992 
	`as£π
(
	`∑ge2∑
(
µ0
) != 0);

993 
	`as£π
(
	`∑ge2∑
(
µ0
Ë!
IOPHYSMEM
);

994 
	`as£π
(
	`∑ge2∑
(
µ0
Ë!
EXTPHYSMEM
 - 
PGSIZE
);

995 
	`as£π
(
	`∑ge2∑
(
µ0
Ë!
EXTPHYSMEM
);

998 
µ0
 = 
µ1
 = 
µ2
 = 0;

999 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

1000 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

1001 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

1002 
	`as£π
(
µ0
);

1003 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

1004 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

1005 
	`as£π
(
	`∑ge2∑
(
µ0
Ë< 
≈ages
*
PGSIZE
);

1006 
	`as£π
(
	`∑ge2∑
(
µ1
Ë< 
≈ages
*
PGSIZE
);

1007 
	`as£π
(
	`∑ge2∑
(
µ2
Ë< 
≈ages
*
PGSIZE
);

1010 
Ê
 = 
∑ge_‰ì_li°
;

1011 
∑ge_‰ì_li°
 = 0;

1014 
	`as£π
(!
	`∑ge_Æloc
(0));

1017 
	`∑ge_‰ì
(
µ0
);

1018 
	`∑ge_‰ì
(
µ1
);

1019 
	`∑ge_‰ì
(
µ2
);

1020 
µ0
 = 
µ1
 = 
µ2
 = 0;

1021 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

1022 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

1023 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

1024 
	`as£π
(
µ0
);

1025 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

1026 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

1027 
	`as£π
(!
	`∑ge_Æloc
(0));

1030 
	`mem£t
(
	`∑ge2kva
(
µ0
), 1, 
PGSIZE
);

1031 
	`∑ge_‰ì
(
µ0
);

1032 
	`as£π
((
µ
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)));

1033 
	`as£π
(
µ
 && 
µ0
 ==Öp);

1034 
c
 = 
	`∑ge2kva
(
µ
);

1035 
i
 = 0; i < 
PGSIZE
; i++)

1036 
	`as£π
(
c
[
i
] == 0);

1039 
∑ge_‰ì_li°
 = 
Ê
;

1042 
	`∑ge_‰ì
(
µ0
);

1043 
	`∑ge_‰ì
(
µ1
);

1044 
	`∑ge_‰ì
(
µ2
);

1046 
	`˝rötf
("check_page_alloc() succeeded!\n");

1047 
	}
}

1058 
	$check_boŸ_pml4e
(
pml4e_t
 *
pml4e
)

1060 
uöt64_t
 
i
, 
n
;

1062 
pml4e
 = 
boŸ_pml4e
;

1065 
n
 = 
	`ROUNDUP
(
≈ages
*(
PageInfo
), 
PGSIZE
);

1066 
i
 = 0; i < 
n
; i +
PGSIZE
) {

1068 
	`as£π
(
	`check_va2∑
(
pml4e
, 
UPAGES
 + 
i
Ë=
	`PADDR
(
∑ges
) + i);

1072 
n
 = 
	`ROUNDUP
(
NENV
*(
Env
), 
PGSIZE
);

1073 
i
 = 0; i < 
n
; i +
PGSIZE
) {

1074 
	`as£π
(
	`check_va2∑
(
pml4e
, 
UENVS
 + 
i
Ë=
	`PADDR
(
ívs
) + i);

1077 
i
 = 0; i < 
≈ages
 * 
PGSIZE
; i += PGSIZE)

1078 
	`as£π
(
	`check_va2∑
(
pml4e
, 
KERNBASE
 + 
i
) == i);

1082 
n
 = 0;Ç < 
NCPU
;Ç++) {

1083 
uöt64_t
 
ba£
 = 
KSTACKTOP
 - (
KSTKSIZE
 + 
KSTKGAP
Ë* (
n
 + 1);

1084 
i
 = 0; i < 
KSTKSIZE
; i +
PGSIZE
)

1085 
	`as£π
(
	`check_va2∑
(
pml4e
, 
ba£
 + 
KSTKGAP
 + 
i
)

1086 =
	`PADDR
(
≥r˝u_k°acks
[
n
]Ë+ 
i
);

1087 
i
 = 0; i < 
KSTKGAP
; i +
PGSIZE
)

1088 
	`as£π
(
	`check_va2∑
(
pml4e
, 
ba£
 + 
i
) == ~0);

1091 
pd≥_t
 *
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[1]));

1092 
pde_t
 *
pgdú
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[0]));

1094 
i
 = 0; i < 
NPDENTRIES
; i++) {

1095 
i
) {

1097 
	`PDX
(
KSTACKTOP
 - 1):

1098 
	`PDX
(
UPAGES
):

1099 
	`PDX
(
UENVS
):

1100 
	`as£π
(
pgdú
[
i
] & 
PTE_P
);

1103 i‡(
i
 >
	`PDX
(
KERNBASE
)) {

1104 i‡(
pgdú
[
i
] & 
PTE_P
)

1105 
	`as£π
(
pgdú
[
i
] & 
PTE_W
);

1107 
	`as£π
(
pgdú
[
i
] == 0);

1112 
	`˝rötf
("check_boot_pml4e() succeeded!\n");

1113 
	}
}

1120 
phyßddr_t


1121 
	$check_va2∑
(
pml4e_t
 *
pml4e
, 
uöçå_t
 
va
)

1123 
±e_t
 *
±e
;

1124 
pd≥_t
 *
pd≥
;

1125 
pde_t
 *
pde
;

1127 
pml4e
 = &pml4e[
	`PML4
(
va
)];

1129 if(!(*
pml4e
 & 
PTE_P
))

1131 
pd≥
 = (
pd≥_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(*
pml4e
));

1133 i‡(!(
pd≥
[
	`PDPE
(
va
)] & 
PTE_P
))

1135 
pde
 = (
pde_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(
pd≥
[
	`PDPE
(
va
)]));

1137 
pde
 = &pde[
	`PDX
(
va
)];

1138 i‡(!(*
pde
 & 
PTE_P
))

1140 
±e
 = (
±e_t
*Ë
	`KADDR
(
	`PTE_ADDR
(*
pde
));

1142 i‡(!(
±e
[
	`PTX
(
va
)] & 
PTE_P
))

1145  
	`PTE_ADDR
(
±e
[
	`PTX
(
va
)]);

1146 
	}
}

1151 
	$∑ge_check
()

1153 
PageInfo
 *
µ0
, *
µ1
, *
µ2
,*
µ3
,*
µ4
,*
µ5
;

1154 
PageInfo
 * 
Ê
;

1155 
±e_t
 *
±ï
, *
±ï1
;

1156 
pd≥_t
 *
pd≥
;

1157 
pde_t
 *
pde
;

1158 *
va
;

1159 
i
;

1160 
uöçå_t
 
mm1
, 
mm2
;

1161 
µ0
 = 
µ1
 = 
µ2
 = 
µ3
 = 
µ4
 = 
µ5
 =0;

1162 
	`as£π
(
µ0
 = 
	`∑ge_Æloc
(0));

1163 
	`as£π
(
µ1
 = 
	`∑ge_Æloc
(0));

1164 
	`as£π
(
µ2
 = 
	`∑ge_Æloc
(0));

1165 
	`as£π
(
µ3
 = 
	`∑ge_Æloc
(0));

1166 
	`as£π
(
µ4
 = 
	`∑ge_Æloc
(0));

1167 
	`as£π
(
µ5
 = 
	`∑ge_Æloc
(0));

1169 
	`as£π
(
µ0
);

1170 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

1171 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

1172 
	`as£π
(
µ3
 &&Öp3 !
µ2
 &&Öp3 !
µ1
 &&Öp3 !
µ0
);

1173 
	`as£π
(
µ4
 &&Öp4 !
µ3
 &&Öp4 !
µ2
 &&Öp4 !
µ1
 &&Öp4 !
µ0
);

1174 
	`as£π
(
µ5
 &&Öp5 !
µ4
 &&Öp5 !
µ3
 &&Öp5 !
µ2
 &&Öp5 !
µ1
 &&Öp5 !
µ0
);

1177 
Ê
 = 
∑ge_‰ì_li°
;

1178 
∑ge_‰ì_li°
 = 
NULL
;

1181 
	`as£π
(!
	`∑ge_Æloc
(0));

1184 
	`as£π
(
	`∑ge_lookup
(
boŸ_pml4e
, (*Ë0x0, &
±ï
Ë=
NULL
);

1187 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, 0x0, 0) < 0);

1190 
	`∑ge_‰ì
(
µ0
);

1191 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, 0x0, 0) < 0);

1192 
	`∑ge_‰ì
(
µ2
);

1193 
	`∑ge_‰ì
(
µ3
);

1197 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, 0x0, 0) == 0);

1198 
	`as£π
((
	`PTE_ADDR
(
boŸ_pml4e
[0]Ë=
	`∑ge2∑
(
µ0
Ë|| PTE_ADDR(boŸ_pml4e[0]Ë=∑ge2∑(
µ2
Ë|| PTE_ADDR(boŸ_pml4e[0]Ë=∑ge2∑(
µ3
) ));

1199 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0x0Ë=
	`∑ge2∑
(
µ1
));

1200 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1201 
	`as£π
(
µ0
->
µ_ªf
 == 1);

1202 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1204 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ3
, (*Ë
PGSIZE
, 0) == 0);

1205 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ3
));

1206 
	`as£π
(
µ3
->
µ_ªf
 == 2);

1209 
	`as£π
(!
	`∑ge_Æloc
(0));

1212 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ3
, (*Ë
PGSIZE
, 0) == 0);

1213 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ3
));

1214 
	`as£π
(
µ3
->
µ_ªf
 == 2);

1218 
	`as£π
(!
	`∑ge_Æloc
(0));

1220 
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[
	`PML4
(
PGSIZE
)]));

1221 
pde
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[
	`PDPE
(
PGSIZE
)]));

1222 
±ï
 = 
	`KADDR
(
	`PTE_ADDR
(
pde
[
	`PDX
(
PGSIZE
)]));

1223 
	`as£π
(
	`pml4e_wÆk
(
boŸ_pml4e
, (*)
PGSIZE
, 0Ë=
±ï
+
	`PTX
(PGSIZE));

1226 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ3
, (*Ë
PGSIZE
, 
PTE_U
) == 0);

1227 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ3
));

1228 
	`as£π
(
µ3
->
µ_ªf
 == 2);

1229 
	`as£π
(*
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
);

1230 
	`as£π
(
boŸ_pml4e
[0] & 
PTE_U
);

1234 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ0
, (*Ë
PTSIZE
, 0) < 0);

1237 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, (*Ë
PGSIZE
, 0) == 0);

1238 
	`as£π
(!(*
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
));

1241 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0Ë=
	`∑ge2∑
(
µ1
));

1242 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

1244 
	`as£π
(
µ1
->
µ_ªf
 == 2);

1245 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1249 
	`∑ge_ªmove
(
boŸ_pml4e
, 0x0);

1250 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0x0) == ~0);

1251 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

1252 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1253 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1257 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, (*Ë
PGSIZE
, 0) == 0);

1258 
	`as£π
(
µ1
->
µ_ªf
);

1259 
	`as£π
(
µ1
->
µ_lök
 =
NULL
);

1262 
	`∑ge_ªmove
(
boŸ_pml4e
, (*Ë
PGSIZE
);

1263 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0x0) == ~0);

1264 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
) == ~0);

1265 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1266 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1272 
	`mem£t
(
	`∑ge2kva
(
µ1
), 1, 
PGSIZE
);

1273 
	`mem£t
(
	`∑ge2kva
(
µ2
), 2, 
PGSIZE
);

1274 
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ1
, 0x0, 0);

1275 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1276 
	`as£π
(*(*)0 == 0x01010101);

1277 
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ2
, 0x0, 0);

1278 
	`as£π
(*(*)0 == 0x02020202);

1279 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1280 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1281 
	`∑ge_ªmove
(
boŸ_pgdú
, 0x0);

1282 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1286 
PageInfo
 *
µ_l1
 = 
	`∑2∑ge
(
	`PTE_ADDR
(
boŸ_pml4e
[0]));

1287 
boŸ_pml4e
[0] = 0;

1288 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1289 
	`∑ge_de¸ef
(
µ_l1
);

1291 i‡(
µ_l1
 !
µ3
Ë
	`∑ge_de¸ef
(pp3);

1292 i‡(
µ_l1
 !
µ2
Ë
	`∑ge_de¸ef
(pp2);

1293 i‡(
µ_l1
 !
µ0
Ë
	`∑ge_de¸ef
(pp0);

1294 
va
 = (*)(
PGSIZE
 * 100);

1295 
±ï
 = 
	`pml4e_wÆk
(
boŸ_pml4e
, 
va
, 1);

1296 
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[
	`PML4
(
va
)]));

1297 
pde
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[
	`PDPE
(
va
)]));

1298 
±ï1
 = 
	`KADDR
(
	`PTE_ADDR
(
pde
[
	`PDX
(
va
)]));

1299 
	`as£π
(
±ï
 =
±ï1
 + 
	`PTX
(
va
));

1302 
	`mem£t
(
	`∑ge2kva
(
µ4
), 0xFF, 
PGSIZE
);

1303 
	`pml4e_wÆk
(
boŸ_pml4e
, 0x0, 1);

1304 
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[0]));

1305 
pde
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[0]));

1306 
±ï
 = 
	`KADDR
(
	`PTE_ADDR
(
pde
[0]));

1307 
i
=0; i<
NPTENTRIES
; i++)

1308 
	`as£π
((
±ï
[
i
] & 
PTE_P
) == 0);

1309 
boŸ_pml4e
[0] = 0;

1312 
∑ge_‰ì_li°
 = 
Ê
;

1315 
	`∑ge_de¸ef
(
µ0
);

1316 
	`∑ge_de¸ef
(
µ2
);

1317 
	`∑ge_de¸ef
(
µ3
);

1320 
	`as£π
(
µ0
->
µ_ªf
 == 0);

1321 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1322 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1323 
	`as£π
(
µ3
->
µ_ªf
 == 0);

1324 
	`as£π
(
µ4
->
µ_ªf
 == 0);

1325 
	`as£π
(
µ5
->
µ_ªf
 == 0);

1328 
mm1
 = (
uöçå_t
Ë
	`mmio_m≠_ªgi⁄
(0, 4097);

1329 
mm2
 = (
uöçå_t
Ë
	`mmio_m≠_ªgi⁄
(0, 4096);

1331 
	`as£π
(
mm1
 >
MMIOBASE
 && mm1 + 8096 < 
MMIOLIM
);

1332 
	`as£π
(
mm2
 >
MMIOBASE
 && mm2 + 8096 < 
MMIOLIM
);

1334 
	`as£π
(
mm1
 % 
PGSIZE
 =0 && 
mm2
 % PGSIZE == 0);

1336 
	`as£π
(
mm1
 + 8096 <
mm2
);

1339 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
mm1
) == 0);

1340 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
mm1
+
PGSIZE
) == PGSIZE);

1341 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
mm2
) == 0);

1342 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
mm2
+
PGSIZE
) == ~0);

1344 
	`as£π
(*
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
mm1
, 0Ë& (
PTE_W
|
PTE_PWT
|
PTE_PCD
));

1345 
	`as£π
(!(*
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
mm1
, 0Ë& 
PTE_U
));

1347 *
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
mm1
, 0) = 0;

1348 *
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
mm1
 + 
PGSIZE
, 0) = 0;

1349 *
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
mm2
, 0) = 0;

1351 
	`˝rötf
("check_page() succeeded!\n");

1352 
	}
}

	@pmap.h

3 #i‚de‡
JOS_KERN_PMAP_H


4 
	#JOS_KERN_PMAP_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/memœyout.h
>

10 
	~<öc/as£π.h
>

11 
	gEnv
;

13 
boŸ°ackt›
[], 
boŸ°ack
[];

15 
PageInfo
 *
∑ges
;

16 
size_t
 
≈ages
;

18 
pml4e_t
 *
boŸ_pml4e
;

26 
	#PADDR
(
kva
) \

28 
phyßddr_t
 
__m_kva
 = (phyßddr_tË(
kva
); \

29 i‡(
__m_kva
 < 
KERNBASE
) \

30 
	`∑nic
("PADDR cÆÀd wôh invÆid kv®%08lx", 
__m_kva
);\

31 
__m_kva
 - 
KERNBASE
; \

32 })

	)

36 
	#KADDR
(
∑
) \

38 
phyßddr_t
 
__m_∑
 = (
∑
); \

39 
uöt32_t
 
__m_µn
 = 
	`PPN
(
__m_∑
);\

40 i‡(
__m_µn
 >
≈ages
) \

41 
	`∑nic
("KADDR cÆÀd wôh invÆidÖ®%08lx", 
__m_∑
);\

42 (*Ë((
uöt64_t
)(
__m_∑
 + 
KERNBASE
)); \

43 })

	)

48 
	mALLOC_ZERO
 = 1<<0,

51 
x64_vm_öô
();

53 
∑ge_öô
();

54 
PageInfo
 * 
∑ge_Æloc
(
Æloc_Êags
);

55 
∑ge_‰ì
(
PageInfo
 *
µ
);

56 
∑ge_ö£π
(
pml4e_t
 *
pml4e
, 
PageInfo
 *
µ
, *
va
, 
≥rm
);

57 
∑ge_ªmove
(
pml4e_t
 *
pml4e
, *
va
);

58 
PageInfo
 *
∑ge_lookup
(
pml4e_t
 *
pml4e
, *
va
, 
±e_t
 **
±e_°‹e
);

59 
∑ge_de¸ef
(
PageInfo
 *
µ
);

61 
éb_övÆid©e
(
pml4e_t
 *
pml4e
, *
va
);

63 * 
mmio_m≠_ªgi⁄
(
phyßddr_t
 
∑
, 
size_t
 
size
);

65 
u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
);

66 
u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
);

68 
ölöe
 
µn_t


69 
	$∑ge2µn
(
PageInfo
 *
µ
)

71  
µ
 - 
∑ges
;

72 
	}
}

74 
ölöe
 
phyßddr_t


75 
	$∑ge2∑
(
PageInfo
 *
µ
)

77  
	`∑ge2µn
(
µ
Ë<< 
PGSHIFT
;

78 
	}
}

80 
ölöe
 
PageInfo
*

81 
	$∑2∑ge
(
phyßddr_t
 
∑
)

83 i‡(
	`PPN
(
∑
Ë>
≈ages
)

84 
	`∑nic
("pa2page called with invalidÖa");

85  &
∑ges
[
	`PPN
(
∑
)];

86 
	}
}

88 
ölöe
 *

89 
	$∑ge2kva
(
PageInfo
 *
µ
)

91  
	`KADDR
(
	`∑ge2∑
(
µ
));

92 
	}
}

94 
±e_t
 *
pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
);

96 
±e_t
 *
pml4e_wÆk
(
pml4e_t
 *
pml4e
, c⁄° *
va
, 
¸óã
);

98 
±e_t
 *
pd≥_wÆk
(
pd≥_t
 *
pd≥
,c⁄° *
va
,
¸óã
);

	@pmap_saved.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/k˛ock.h
>

11 
	~<kîn/mu…iboŸ.h
>

12 
	~<kîn/ív.h
>

14 
uöt64_t
 
pml4phys
;

15 
	#BOOT_PAGE_TABLE_START
 ((
uöt64_t
Ë
	`KADDR
((uöt64_tË&
pml4phys
))

	)

16 
	#BOOT_PAGE_TABLE_END
 ((
uöt64_t
Ë
	`KADDR
((uöt64_tË(&
pml4phys
Ë+ 5*
PGSIZE
))

	)

19 
size_t
 
	g≈ages
;

20 
size_t
 
	g≈ages_ba£mem
;

23 
pml4e_t
 *
	gboŸ_pml4e
;

24 
phyßddr_t
 
	gboŸ_¸3
;

25 
PageInfo
 *
	g∑ges
;

26 
PageInfo
 *
	g∑ge_‰ì_li°
;

33 
	$nvøm_ªad
(
r
)

35  
	`mc146818_ªad
(
r
) | (mc146818_read(r + 1) << 8);

36 
	}
}

39 
	$mu…iboŸ_ªad
(
mu…iboŸ_öfo_t
* 
mböfo
, 
size_t
* 
ba£mem
, size_t* 
extmem
) {

40 
i
;

42 
mem‹y_m≠_t
* 
mm≠_ba£
 = (mem‹y_m≠_t*)(
uöçå_t
)
mböfo
->
mm≠_addr
;

43 
mem‹y_m≠_t
* 
mm≠_li°
[
mböfo
->
mm≠_Àngth
/ ((memory_map_t))];

45 
	`˝rötf
("\ne820 MEMORY MAP\n");

46 
i
 = 0; i < (
mböfo
->
mm≠_Àngth
 / ((
mem‹y_m≠_t
))); i++) {

47 
mem‹y_m≠_t
* 
mm≠
 = &
mm≠_ba£
[
i
];

49 
uöt64_t
 
addr
 = 
	`APPEND_HILO
(
mm≠
->
ba£_addr_high
, mm≠->
ba£_addr_low
);

50 
uöt64_t
 
Àn
 = 
	`APPEND_HILO
(
mm≠
->
Àngth_high
, mm≠->
Àngth_low
);

52 
	`˝rötf
("size: %d,áddªss: 0x%016x,Üígth: 0x%016x,Åy≥: %x\n", 
mm≠
->
size
,

53 
addr
, 
Àn
, 
mm≠
->
ty≥
);

55 if(
mm≠
->
ty≥
 > 5 || mmap->type < 1)

56 
mm≠
->
ty≥
 = 
MB_TYPE_RESERVED
;

59 
j
 = 0;

60 ;
j
<
i
;j++) {

61 
mem‹y_m≠_t
* 
this
 = 
mm≠_li°
[
j
];

62 
uöt64_t
 
this_addr
 = 
	`APPEND_HILO
(
this
->
ba£_addr_high
,Åhis->
ba£_addr_low
);

63 if(
this_addr
 > 
addr
) {

64 
œ°
 = 
i
+1;

65 
œ°
 !
j
) {

66 *(
mm≠_li°
 + 
œ°
) = *(mmap_list +Üast - 1);

67 
œ°
--;

72 
mm≠_li°
[
j
] = 
mm≠
;

74 
	`˝rötf
("\n");

77 
i
=1;ò< (
mböfo
->
mm≠_Àngth
 / ((
mem‹y_m≠_t
))); i++) {

78 
mem‹y_m≠_t
* 
¥ev
 = 
mm≠_li°
[
i
-1];

79 
mem‹y_m≠_t
* 
this
 = 
mm≠_li°
[
i
];

81 
uöt64_t
 
this_addr
 = 
	`APPEND_HILO
(
this
->
ba£_addr_high
,Åhis->
ba£_addr_low
);

82 
uöt64_t
 
¥ev_addr
 = 
	`APPEND_HILO
(
¥ev
->
ba£_addr_high
,Öªv->
ba£_addr_low
);

83 
uöt64_t
 
¥ev_Àngth
 = 
	`APPEND_HILO
(
¥ev
->
Àngth_high
,Öªv->
Àngth_low
);

84 
uöt64_t
 
this_Àngth
 = 
	`APPEND_HILO
(
this
->
Àngth_high
,Åhis->
Àngth_low
);

87 if(
¥ev_addr
 + 
¥ev_Àngth
 =
this_addr
 && 
¥ev
->
ty≥
 =
this
->type) {

88 
this
->
Àngth_low
 = (
uöt32_t
)
¥ev_Àngth
 + 
this_Àngth
;

89 
this
->
Àngth_high
 = (
uöt32_t
)((
¥ev_Àngth
 + 
this_Àngth
)>>32);

90 
this
->
ba£_addr_low
 = 
¥ev
->base_addr_low;

91 
this
->
ba£_addr_high
 = 
¥ev
->base_addr_high;

92 
mm≠_li°
[
i
-1] = 
NULL
;

93 } if(
¥ev_addr
 + 
¥ev_Àngth
 > 
this_addr
) {

95 
uöt32_t
 
ty≥
 = 
	`ª°ri˘ive_ty≥
(
¥ev
->ty≥, 
this
->type);

96 
¥ev
->
ty≥
 =Åype;

97 
this
->
ty≥
 =Åype;

101 
i
=0;ò< (
mböfo
->
mm≠_Àngth
 / ((
mem‹y_m≠_t
))); i++) {

102 
mem‹y_m≠_t
* 
mm≠
 = 
mm≠_li°
[
i
];

103 if(
mm≠
) {

104 if(
mm≠
->
ty≥
 =
MB_TYPE_USABLE
 || mm≠->ty≥ =
MB_TYPE_ACPI_RECLM
) {

105 if(
mm≠
->
ba£_addr_low
 < 0x100000 && mm≠->
ba£_addr_high
 == 0)

106 *
ba£mem
 +
	`APPEND_HILO
(
mm≠
->
Àngth_high
, mm≠->
Àngth_low
);

108 *
extmem
 +
	`APPEND_HILO
(
mm≠
->
Àngth_high
, mm≠->
Àngth_low
);

112 
	}
}

115 
	$i386_dëe˘_mem‹y
()

117 
size_t
 
≈ages_extmem
;

118 
size_t
 
ba£mem
 = 0;

119 
size_t
 
extmem
 = 0;

122 
mu…iboŸ_öfo
[];

123 
uöçå_t
* 
mbp
 = (uöçå_t*)
mu…iboŸ_öfo
;

124 
mu…iboŸ_öfo_t
 * 
mböfo
 = (mu…iboŸ_öfo_t*)*
mbp
;

126 if(
mböfo
 && (mböfo->
Êags
 & 
MB_FLAG_MMAP
)) {

127 
	`mu…iboŸ_ªad
(
mböfo
, &
ba£mem
, &
extmem
);

129 
ba£mem
 = (
	`nvøm_ªad
(
NVRAM_BASELO
) * 1024);

130 
extmem
 = (
	`nvøm_ªad
(
NVRAM_EXTLO
) * 1024);

133 
	`as£π
(
ba£mem
);

135 
≈ages_ba£mem
 = 
ba£mem
 / 
PGSIZE
;

136 
≈ages_extmem
 = 
extmem
 / 
PGSIZE
;

138 if(
	`nvøm_ªad
(
NVRAM_EXTLO
) == 0xffff) {

140 
size_t
 
≥xtmem
 = 
	`nvøm_ªad
(
NVRAM_EXTGT16LO
) * (64 * 1024);

141 
≈ages_extmem
 = ((16 * 1024 * 1024Ë+ 
≥xtmem
 - (1 * 1024 * 1024)Ë/ 
PGSIZE
;

146 i‡(
≈ages_extmem
)

147 
≈ages
 = (
EXTPHYSMEM
 / 
PGSIZE
Ë+ 
≈ages_extmem
;

149 
≈ages
 = 
≈ages_ba£mem
;

151 
	`˝rötf
("Physical memory: %uMávailable, base = %uK,Éxtended = %uK,Çpages = %d\n",

152 
≈ages
 * 
PGSIZE
 / (1024 * 1024),

153 
≈ages_ba£mem
 * 
PGSIZE
 / 1024,

154 
≈ages_extmem
 * 
PGSIZE
 / 1024,

155 
≈ages
);

162 
uöt64_t
 
u∑ges_max
 = (
ULIM
 - 
UPAGES
Ë/ (
PageInfo
);

163 
uöt64_t
 
kîn_mem_max
 = (
UVPT
 - 
KERNBASE
Ë/ 
PGSIZE
;

164 
	`˝rötf
("PagesÜimitedÅo %llu by upageáddressÑange (%uMB), PagesÜimitedÅo %llu byÑemappedÖhys mem (%uMB)\n",

165 
u∑ges_max
, ((u∑ges_max * 
PGSIZE
) / (1024 * 1024)),

166 
kîn_mem_max
, kîn_mem_max * 
PGSIZE
 / (1024 * 1024));

167 
uöt64_t
 
max_≈ages
 = 
u∑ges_max
 < 
kîn_mem_max
 ? upages_max : kern_mem_max;

169 if(
≈ages
 > 
max_≈ages
) {

170 
≈ages
 = 
max_≈ages
 - 1024;

171 
	`˝rötf
("Usög o∆y %uK o‡thêavaûabÀ mem‹y.\n", 
max_≈ages
);

173 
	}
}

180 
boŸ_m≠_ªgi⁄
(
pml4e_t
 *
pml4e
, 
uöçå_t
 
va
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
);

181 
check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
);

182 
check_∑ge_Æloc
();

183 
check_boŸ_pml4e
(
pml4e_t
 *
pml4e
);

184 
phyßddr_t
 
check_va2∑
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
);

185 
∑ge_check
();

186 
∑ge_öôµ
(
PageInfo
 *
µ
);

200 
	$boŸ_Æloc
(
uöt32_t
 
n
)

202 *
√xt‰ì
;

203 *
ªsu…
;

210 i‡(!
√xt‰ì
) {

211 
íd
[];

212 
√xt‰ì
 = 
	`ROUNDUP
((*Ë
íd
, 
PGSIZE
);

221 
ªsu…
 = 
√xt‰ì
;

222 i‡(
n
 > 0) {

223 
√xt‰ì
 = 
	`ROUNDUP
“ext‰ì + 
n
, 
PGSIZE
);

224 i‡(((
uöt64_t
Ë
√xt‰ì
 - 
KERNBASE
Ë> (
≈ages
 * 
PGSIZE
)) {

225 
	`∑nic
("Ouào‡mem‹y!", 
n
);

227 } i‡(
n
 == 0) {

231  
ªsu…
;

232 
	}
}

244 
	$x64_vm_öô
()

246 
pml4e_t
* 
pml4e
;

247 
uöt32_t
 
¸0
;

248 
uöt64_t
 
n
;

249 
r
;

250 
Env
 *
ív
;

251 
	`i386_dëe˘_mem‹y
();

256 
pml4e
 = 
	`boŸ_Æloc
(
PGSIZE
);

257 
	`mem£t
(
pml4e
, 0, 
PGSIZE
);

258 
boŸ_pml4e
 = 
pml4e
;

259 
boŸ_¸3
 = 
	`PADDR
(
pml4e
);

267 
uöt32_t
 
∑ge_°©e_size
 = (
PageInfo
);

268 
∑ges
 = (
PageInfo
*Ë
	`boŸ_Æloc
(
≈ages
 * 
∑ge_°©e_size
);

274 
ív
 = (
Env
 *Ë
	`boŸ_Æloc
 (
NENV
 * (Env));

275 
ívs
 = 
ív
;

281 
	`∑ge_öô
();

303 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
UPAGES
, 
≈ages
 * 
∑ge_°©e_size
, 
	`PADDR
(
∑ges
), 
PTE_U
);

304 
	`boŸ_m≠_ªgi⁄
(
pml4e
, (
uöçå_t
Ë
∑ges
, 
PGSIZE
, 
	`PADDR
’ages), 
PTE_W
);

313 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
UENVS
, 
NENV
 * (
Env
Ë,
	`PADDR
(
ívs
),
PTE_U
);

314 
	`boŸ_m≠_ªgi⁄
(
pml4e
, (
uöçå_t
Ë
ív
, 
PGSIZE
,
	`PADDR
(
ívs
),
PTE_W
);

327 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
KSTACKTOP
 - 
KSTKSIZE
, KSTKSIZE, 
	`PADDR
(
boŸ°ack
), 
PTE_W
);

336 
	`boŸ_m≠_ªgi⁄
(
pml4e
, 
KERNBASE
, 
≈ages
 * 
PGSIZE
, 0x0, 
PTE_W
);

338 
	`check_∑ge_‰ì_li°
(1);

339 
	`check_∑ge_Æloc
();

340 
	`∑ge_check
();

341 
	`check_∑ge_‰ì_li°
(0);

342 
	`check_boŸ_pml4e
(
boŸ_pml4e
);

346 
pd≥_t
 *
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
pml4e
[1]));

347 
pde_t
 *
pgdú
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[0]));

348 
	`l¸3
(
boŸ_¸3
);

349 
	}
}

365 
	$∑ge_öô
()

387 
size_t
 
i
;

388 
∑ges
[0].
µ_ªf
 = 1;

389 
∑ges
[0].
µ_lök
 = 
NULL
;

391 
i
 = 1; i < 
≈ages
; i++) {

393 
uöt64_t
 
va
 = 
KERNBASE
 + 
i
 * 
PGSIZE
;

395 i‡(
va
 >
BOOT_PAGE_TABLE_START
 && v®< 
BOOT_PAGE_TABLE_END
) {

397 
∑ges
[
i
].
µ_ªf
 = 1;

398 } i‡((
i
 >
IOPHYSMEM
 / 
PGSIZE
Ë&& (ò< 
EXTPHYSMEM
 / PGSIZE)) {

401 
∑ges
[
i
].
µ_ªf
 = 1;

402 } i‡((
i
 >
EXTPHYSMEM
 / 
PGSIZE
Ë&& (ò< 
	`PADDR
(
	`boŸ_Æloc
(0)) / PGSIZE)) {

405 
∑ges
[
i
].
µ_ªf
 = 1;

408 
∑ges
[
i
].
µ_ªf
 = 0;

409 
∑ges
[
i
].
µ_lök
 = 
∑ge_‰ì_li°
;

410 
∑ge_‰ì_li°
 = &
∑ges
[
i
];

414 
	}
}

428 
PageInfo
 *

429 
	$∑ge_Æloc
(
Æloc_Êags
)

431 i‡(
∑ge_‰ì_li°
 =
NULL
)

432  
NULL
;

434 
PageInfo
 *
∑ge
 = 
∑ge_‰ì_li°
;

435 
∑ge_‰ì_li°
 =Öage_‰ì_li°->
µ_lök
;

439 
∑ge
->
µ_lök
 = 
NULL
;

441 i‡(
Æloc_Êags
 & 
ALLOC_ZERO
)

442 
	`mem£t
(
	`∑ge2kva
(
∑ge
), 0, 
PGSIZE
);

443  
∑ge
;

444 
	}
}

452 
	$∑ge_öôµ
(
PageInfo
 *
µ
)

454 
	`mem£t
(
µ
, 0, (*pp));

455 
	}
}

461 
	$∑ge_‰ì
(
PageInfo
 *
µ
)

463 i‡(
µ
->
µ_ªf
 !0 ||Öp->
µ_lök
 !
NULL
) {

464 
	`∑nic
("page_free:Öage cannot be freed");

466 
µ
->
µ_lök
 = 
∑ge_‰ì_li°
;

467 
∑ge_‰ì_li°
 = 
µ
;

469 
	}
}

476 
	$∑ge_de¸ef
(
PageInfo
* 
µ
)

478 i‡(--
µ
->
µ_ªf
 == 0)

479 
	`∑ge_‰ì
(
µ
);

480 
	}
}

507 
±e_t
 *

508 
	$pml4e_wÆk
(
pml4e_t
 *
pml4e
, c⁄° *
va
, 
¸óã
)

510 
PageInfo
 *
√wPage
 = 
NULL
;

511 
pml4e_t
 *
pml4_íåy
 = &
pml4e
[
	`PML4
(
va
)];

512 i‡(!*
pml4_íåy
) {

513 i‡(!
¸óã
) {

514  
NULL
;

516 
√wPage
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

517 i‡(!
√wPage
) {

518  
NULL
;

520 
√wPage
->
µ_ªf
++;

521 *
pml4_íåy
 = (
pml4e_t
Ë(
	`∑ge2∑
(
√wPage
Ë& ~0xFFFË| 
PTE_U
 | 
PTE_W
 | 
PTE_P
;

525 
pd≥_t
 *
pdp_íåy
 = 
	`KADDR
(
	`PTE_ADDR
(*
pml4_íåy
));

526 
±e_t
 *
±e
 = 
	`pd≥_wÆk
(
pdp_íåy
, 
va
, 
¸óã
);

529 i‡(!
±e
 && 
√wPage
) {

530 *
pml4_íåy
 = 0x0;

531 
	`∑ge_de¸ef
(
√wPage
);

533  
±e
;

534 
	}
}

541 
±e_t
 *

542 
	$pd≥_wÆk
(
pd≥_t
 *
pd≥
,c⁄° *
va
,
¸óã
){

543 
PageInfo
 *
√wPage
 = 
NULL
;

544 
pd≥_t
 *
pdp_íåy
 = &
pd≥
[
	`PDPE
(
va
)];

546 i‡(!*
pdp_íåy
) {

547 i‡(!
¸óã
) {

548  
NULL
;

550 
√wPage
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

551 i‡(!
√wPage
) {

552  
NULL
;

554 
√wPage
->
µ_ªf
++;

555 *
pdp_íåy
 = (
pd≥_t
Ë(
	`∑ge2∑
(
√wPage
Ë& ~0xFFFË| 
PTE_U
 | 
PTE_W
 | 
PTE_P
;

559 
pde_t
 *
pd_íåy
 = 
	`KADDR
(
	`PTE_ADDR
(*
pdp_íåy
));

560 
±e_t
 *
±e
 = 
	`pgdú_wÆk
(
pd_íåy
, 
va
, 
¸óã
);

561 i‡(!
±e
 && 
√wPage
) {

562 *
pdp_íåy
 = 0x0;

563 
	`∑ge_de¸ef
(
√wPage
);

565  
±e
;

566 
	}
}

575 
±e_t
 *

576 
	$pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
)

578 
pde_t
 *
pd_íåy
 = &
pgdú
[
	`PDX
(
va
)];

579 
PageInfo
 *
√wPage
 = 
NULL
;

581 i‡(!*
pd_íåy
) {

582 i‡(!
¸óã
) {

583  
NULL
;

585 
√wPage
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

586 i‡(!
√wPage
) {

587  
NULL
;

589 
√wPage
->
µ_ªf
++;

590 *
pd_íåy
 = (
pde_t
Ë(
	`∑ge2∑
(
√wPage
Ë& ~0xFFFË| 
PTE_P
 | 
PTE_U
| 
PTE_W
;

594 
±e_t
 *
±e
 = 
	`KADDR
(
	`PTE_ADDR
(*
pd_íåy
));

595 i‡(!
±e
) {

596  
NULL
;

598  &
±e
[
	`PTX
(
va
)];

599 
	}
}

612 
	$boŸ_m≠_ªgi⁄
(
pml4e_t
 *
pml4e
, 
uöçå_t
 
œ
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
)

614 
±e_t
 *
±e
;

615 
i
 = 0; i < (
size
 / 
PGSIZE
); i++) {

616 
±e
 = 
	`pml4e_wÆk
(
pml4e
, (*)
œ
, 
åue
);

617 i‡(!
±e
)

618 
	`∑nic
("failedÅo findÅheÖhysical memory");

619 *
±e
 = 
∑
 | 
≥rm
 | 
PTE_P
;

620 
œ
 +
PGSIZE
;

621 
∑
 +
PGSIZE
;

623 
	}
}

651 
	$∑ge_ö£π
(
pml4e_t
 *
pml4e
, 
PageInfo
 *
µ
, *
va
, 
≥rm
)

653 
±e_t
 *
±e
 = 
	`pml4e_wÆk
(
pml4e
, 
va
, 
åue
);

654 i‡(!
±e
) {

655  -
E_NO_MEM
;

657 i‡(*
±e
 & 
PTE_P
) {

658 
	`∑ge_ªmove
(
pml4e
, 
va
);

661 
µ
->
µ_ªf
++;

662 *
±e
 = (
	`∑ge2∑
(
µ
Ë& ~0xFFFË| 
≥rm
 | 
PTE_P
;

664 
pml4e
[
	`PML4
(
va
)] |
≥rm
 | 
PTE_P
;

666 
	}
}

679 
PageInfo
 *

680 
	$∑ge_lookup
(
pml4e_t
 *
pml4e
, *
va
, 
±e_t
 **
±e_°‹e
)

682 
±e_t
 *
±e
 = 
	`pml4e_wÆk
(
pml4e
, 
va
, 
åue
);

683 i‡(
±e
 && (*±ê& 
PTE_P
)) {

684 
phyßddr_t
 
∑
 = (phyßddr_tË*
±e
;

685 i‡(
±e_°‹e
) {

686 *
±e_°‹e
 = 
±e
;

688  
	`∑2∑ge
(
∑
);

690  
NULL
;

691 
	}
}

709 
	$∑ge_ªmove
(
pml4e_t
 *
pml4e
, *
va
)

711 
±e_t
 *
±e
;

712 
PageInfo
 *
∑ge
 = 
	`∑ge_lookup
(
pml4e
, 
va
, &
±e
);

713 i‡(
∑ge
) {

714 
	`∑ge_de¸ef
(
∑ge
);

715 i‡(
±e
) {

716 *
±e
 = 0;

717 
	`éb_övÆid©e
(
pml4e
, 
va
);

720 
	}
}

727 
	$éb_övÆid©e
(
pml4e_t
 *
pml4e
, *
va
)

731 
	`övÕg
(
va
);

732 
	}
}

734 
uöçå_t
 
	gu£r_mem_check_addr
;

755 
	$u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

759 i‡((
uöçå_t
Ë
va
 >
ULIM
 || (uöçå_tËv®+ 
Àn
 >= ULIM ){

760 
u£r_mem_check_addr
 = (
uöçå_t
Ë
va
;

761  -
E_FAULT
;

763 
uöçå_t
 
lowî
 = (uöçå_t)
	`ROUNDDOWN
(
va
,
PGSIZE
);

764 
uöçå_t
 
uµî
 = (uöçå_t)
	`ROUNDUP
(
va
 + 
Àn
,
PGSIZE
);

765 
i
;

767 
i
 = 0;ò< (
uµî
 - 
lowî
)/
PGSIZE
; i++) {

768 * 
cur_va
 = (*Ë(
lowî
 + 
i
 * 
PGSIZE
);

769 
±e_t
 *
±e
 = 
	`pml4e_wÆk
(
ív
->
ív_pml4e
, 
cur_va
, 
Ál£
);

770 
u£r_mem_check_addr
 = (
uöçå_t
Ë
cur_va
 >(uöçå_t)
va
 ? (uintptr_t) cur_va : (uintptr_t) va;

771 i‡(!
±e
){

772  -
E_FAULT
;

774 i‡((*
±e
 & (
PTE_P
 | 
≥rm
)) != (PTE_P |Öerm)){

775  -
E_FAULT
;

780 
	}
}

790 
	$u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

792 i‡(
	`u£r_mem_check
(
ív
, 
va
, 
Àn
, 
≥rm
 | 
PTE_U
) < 0) {

793 
	`˝rötf
("[%08x] user_mem_checkássertion failure for "

794 "v®%08x\n", 
ív
->
ív_id
, 
u£r_mem_check_addr
);

795 
	`ív_de°roy
(
ív
);

797 
	}
}

809 
	$check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
)

811 
PageInfo
 *
µ
;

812 
pdx_limô
 = 
⁄ly_low_mem‹y
 ? 1 : 
NPDENTRIES
;

813 
uöt64_t
 
n‰ì_ba£mem
 = 0, 
n‰ì_extmem
 = 0;

814 *
fú°_‰ì_∑ge
;

816 i‡(!
∑ge_‰ì_li°
)

817 
	`∑nic
("'page_free_list' isáÇullÖointer!");

819 i‡(
⁄ly_low_mem‹y
) {

822 
PageInfo
 *
µ1
, *
µ2
;

823 
PageInfo
 **
ç
[2] = { &
µ1
, &
µ2
 };

824 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

825 
∑gëy≥
 = 
	`PDX
(
	`∑ge2∑
(
µ
)Ë>
pdx_limô
;

826 *
ç
[
∑gëy≥
] = 
µ
;

827 
ç
[
∑gëy≥
] = &
µ
->
µ_lök
;

829 *
ç
[1] = 0;

830 *
ç
[0] = 
µ2
;

831 
∑ge_‰ì_li°
 = 
µ1
;

836 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
)

837 i‡(
	`PDX
(
	`∑ge2∑
(
µ
)Ë< 
pdx_limô
)

838 
	`mem£t
(
	`∑ge2kva
(
µ
), 0x97, 128);

840 
fú°_‰ì_∑ge
 = 
	`boŸ_Æloc
(0);

841 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

843 
	`as£π
(
µ
 >
∑ges
);

844 
	`as£π
(
µ
 < 
∑ges
 + 
≈ages
);

845 
	`as£π
(((*Ë
µ
 - (*Ë
∑ges
) % (*pp) == 0);

848 
	`as£π
(
	`∑ge2∑
(
µ
) != 0);

849 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
IOPHYSMEM
);

850 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
 - 
PGSIZE
);

851 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
);

852 
	`as£π
(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
 || 
	`∑ge2kva
’pË>
fú°_‰ì_∑ge
);

854 i‡(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
)

855 ++
n‰ì_ba£mem
;

857 ++
n‰ì_extmem
;

860 
	`as£π
(
n‰ì_extmem
 > 0);

861 
	}
}

869 
	$check_∑ge_Æloc
()

871 
PageInfo
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

872 
n‰ì
;

873 
PageInfo
 *
Ê
;

874 *
c
;

875 
i
;

880 
µ0
 = 
∑ge_‰ì_li°
, 
n‰ì
 = 0;Öp0;Öp0 =Öp0->
µ_lök
) {

881 
	`mem£t
(
	`∑ge2kva
(
µ0
), 0x97, 
PGSIZE
);

884 
µ0
 = 
∑ge_‰ì_li°
, 
n‰ì
 = 0;Öp0;Öp0 =Öp0->
µ_lök
) {

886 
	`as£π
(
µ0
 >
∑ges
);

887 
	`as£π
(
µ0
 < 
∑ges
 + 
≈ages
);

890 
	`as£π
(
	`∑ge2∑
(
µ0
) != 0);

891 
	`as£π
(
	`∑ge2∑
(
µ0
Ë!
IOPHYSMEM
);

892 
	`as£π
(
	`∑ge2∑
(
µ0
Ë!
EXTPHYSMEM
 - 
PGSIZE
);

893 
	`as£π
(
	`∑ge2∑
(
µ0
Ë!
EXTPHYSMEM
);

896 
µ0
 = 
µ1
 = 
µ2
 = 0;

897 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

898 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

899 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

900 
	`as£π
(
µ0
);

901 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

902 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

903 
	`as£π
(
	`∑ge2∑
(
µ0
Ë< 
≈ages
*
PGSIZE
);

904 
	`as£π
(
	`∑ge2∑
(
µ1
Ë< 
≈ages
*
PGSIZE
);

905 
	`as£π
(
	`∑ge2∑
(
µ2
Ë< 
≈ages
*
PGSIZE
);

908 
Ê
 = 
∑ge_‰ì_li°
;

909 
∑ge_‰ì_li°
 = 0;

912 
	`as£π
(!
	`∑ge_Æloc
(0));

915 
	`∑ge_‰ì
(
µ0
);

916 
	`∑ge_‰ì
(
µ1
);

917 
	`∑ge_‰ì
(
µ2
);

918 
µ0
 = 
µ1
 = 
µ2
 = 0;

919 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

920 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

921 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

922 
	`as£π
(
µ0
);

923 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

924 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

925 
	`as£π
(!
	`∑ge_Æloc
(0));

928 
	`mem£t
(
	`∑ge2kva
(
µ0
), 1, 
PGSIZE
);

929 
	`∑ge_‰ì
(
µ0
);

930 
	`as£π
((
µ
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)));

931 
	`as£π
(
µ
 && 
µ0
 ==Öp);

932 
c
 = 
	`∑ge2kva
(
µ
);

933 
i
 = 0; i < 
PGSIZE
; i++)

934 
	`as£π
(
c
[
i
] == 0);

937 
∑ge_‰ì_li°
 = 
Ê
;

940 
	`∑ge_‰ì
(
µ0
);

941 
	`∑ge_‰ì
(
µ1
);

942 
	`∑ge_‰ì
(
µ2
);

944 
	`˝rötf
("check_page_alloc() succeeded!\n");

945 
	}
}

956 
	$check_boŸ_pml4e
(
pml4e_t
 *
pml4e
)

958 
uöt64_t
 
i
, 
n
;

960 
pml4e
 = 
boŸ_pml4e
;

963 
n
 = 
	`ROUNDUP
(
≈ages
*(
PageInfo
), 
PGSIZE
);

964 
i
 = 0; i < 
n
; i +
PGSIZE
) {

966 
	`as£π
(
	`check_va2∑
(
pml4e
, 
UPAGES
 + 
i
Ë=
	`PADDR
(
∑ges
) + i);

970 
n
 = 
	`ROUNDUP
(
NENV
*(
Env
), 
PGSIZE
);

971 
i
 = 0; i < 
n
; i +
PGSIZE
) {

973 
	`as£π
(
	`check_va2∑
(
pml4e
, 
UENVS
 + 
i
Ë=
	`PADDR
(
ívs
) + i);

977 
i
 = 0; i < 
≈ages
 * 
PGSIZE
; i += PGSIZE)

978 
	`as£π
(
	`check_va2∑
(
pml4e
, 
KERNBASE
 + 
i
) == i);

981 
i
 = 0; i < 
KSTKSIZE
; i +
PGSIZE
) {

982 
	`as£π
(
	`check_va2∑
(
pml4e
, 
KSTACKTOP
 - 
KSTKSIZE
 + 
i
Ë=
	`PADDR
(
boŸ°ack
) + i);

984 
	`as£π
(
	`check_va2∑
(
pml4e
, 
KSTACKTOP
 - 
KSTKSIZE
 - 1 ) == ~0);

986 
pd≥_t
 *
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[1]));

987 
pde_t
 *
pgdú
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[0]));

989 
i
 = 0; i < 
NPDENTRIES
; i++) {

990 
i
) {

992 
	`PDX
(
KSTACKTOP
 - 1):

993 
	`PDX
(
UPAGES
):

994 
	`PDX
(
UENVS
):

995 
	`as£π
(
pgdú
[
i
] & 
PTE_P
);

998 i‡(
i
 >
	`PDX
(
KERNBASE
)) {

999 i‡(
pgdú
[
i
] & 
PTE_P
)

1000 
	`as£π
(
pgdú
[
i
] & 
PTE_W
);

1002 
	`as£π
(
pgdú
[
i
] == 0);

1007 
	`˝rötf
("check_boot_pml4e() succeeded!\n");

1008 
	}
}

1015 
phyßddr_t


1016 
	$check_va2∑
(
pml4e_t
 *
pml4e
, 
uöçå_t
 
va
)

1018 
±e_t
 *
±e
;

1019 
pd≥_t
 *
pd≥
;

1020 
pde_t
 *
pde
;

1022 
pml4e
 = &pml4e[
	`PML4
(
va
)];

1024 if(!(*
pml4e
 & 
PTE_P
))

1026 
pd≥
 = (
pd≥_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(*
pml4e
));

1028 i‡(!(
pd≥
[
	`PDPE
(
va
)] & 
PTE_P
))

1030 
pde
 = (
pde_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(
pd≥
[
	`PDPE
(
va
)]));

1032 
pde
 = &pde[
	`PDX
(
va
)];

1033 i‡(!(*
pde
 & 
PTE_P
))

1035 
±e
 = (
±e_t
*Ë
	`KADDR
(
	`PTE_ADDR
(*
pde
));

1037 i‡(!(
±e
[
	`PTX
(
va
)] & 
PTE_P
))

1040  
	`PTE_ADDR
(
±e
[
	`PTX
(
va
)]);

1041 
	}
}

1046 
	$∑ge_check
()

1048 
PageInfo
 *
µ0
, *
µ1
, *
µ2
,*
µ3
,*
µ4
,*
µ5
;

1049 
PageInfo
 * 
Ê
;

1050 
±e_t
 *
±ï
, *
±ï1
;

1051 
pd≥_t
 *
pd≥
;

1052 
pde_t
 *
pde
;

1053 *
va
;

1054 
i
;

1055 
µ0
 = 
µ1
 = 
µ2
 = 
µ3
 = 
µ4
 = 
µ5
 =0;

1056 
	`as£π
(
µ0
 = 
	`∑ge_Æloc
(0));

1057 
	`as£π
(
µ1
 = 
	`∑ge_Æloc
(0));

1058 
	`as£π
(
µ2
 = 
	`∑ge_Æloc
(0));

1059 
	`as£π
(
µ3
 = 
	`∑ge_Æloc
(0));

1060 
	`as£π
(
µ4
 = 
	`∑ge_Æloc
(0));

1061 
	`as£π
(
µ5
 = 
	`∑ge_Æloc
(0));

1063 
	`as£π
(
µ0
);

1064 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

1065 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

1066 
	`as£π
(
µ3
 &&Öp3 !
µ2
 &&Öp3 !
µ1
 &&Öp3 !
µ0
);

1067 
	`as£π
(
µ4
 &&Öp4 !
µ3
 &&Öp4 !
µ2
 &&Öp4 !
µ1
 &&Öp4 !
µ0
);

1068 
	`as£π
(
µ5
 &&Öp5 !
µ4
 &&Öp5 !
µ3
 &&Öp5 !
µ2
 &&Öp5 !
µ1
 &&Öp5 !
µ0
);

1071 
Ê
 = 
∑ge_‰ì_li°
;

1072 
∑ge_‰ì_li°
 = 
NULL
;

1075 
	`as£π
(!
	`∑ge_Æloc
(0));

1078 
	`as£π
(
	`∑ge_lookup
(
boŸ_pml4e
, (*Ë0x0, &
±ï
Ë=
NULL
);

1081 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, 0x0, 0) < 0);

1084 
	`∑ge_‰ì
(
µ0
);

1085 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, 0x0, 0) < 0);

1086 
	`∑ge_‰ì
(
µ2
);

1087 
	`∑ge_‰ì
(
µ3
);

1091 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, 0x0, 0) == 0);

1092 
	`as£π
((
	`PTE_ADDR
(
boŸ_pml4e
[0]Ë=
	`∑ge2∑
(
µ0
Ë|| PTE_ADDR(boŸ_pml4e[0]Ë=∑ge2∑(
µ2
Ë|| PTE_ADDR(boŸ_pml4e[0]Ë=∑ge2∑(
µ3
) ));

1093 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0x0Ë=
	`∑ge2∑
(
µ1
));

1094 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1095 
	`as£π
(
µ0
->
µ_ªf
 == 1);

1096 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1098 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ3
, (*Ë
PGSIZE
, 0) == 0);

1099 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ3
));

1100 
	`as£π
(
µ3
->
µ_ªf
 == 2);

1103 
	`as£π
(!
	`∑ge_Æloc
(0));

1106 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ3
, (*Ë
PGSIZE
, 0) == 0);

1107 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ3
));

1108 
	`as£π
(
µ3
->
µ_ªf
 == 2);

1112 
	`as£π
(!
	`∑ge_Æloc
(0));

1114 
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[
	`PML4
(
PGSIZE
)]));

1115 
pde
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[
	`PDPE
(
PGSIZE
)]));

1116 
±ï
 = 
	`KADDR
(
	`PTE_ADDR
(
pde
[
	`PDX
(
PGSIZE
)]));

1117 
	`as£π
(
	`pml4e_wÆk
(
boŸ_pml4e
, (*)
PGSIZE
, 0Ë=
±ï
+
	`PTX
(PGSIZE));

1120 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ3
, (*Ë
PGSIZE
, 
PTE_U
) == 0);

1121 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ3
));

1122 
	`as£π
(
µ3
->
µ_ªf
 == 2);

1123 
	`as£π
(*
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
);

1124 
	`as£π
(
boŸ_pml4e
[0] & 
PTE_U
);

1128 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ0
, (*Ë
PTSIZE
, 0) < 0);

1131 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, (*Ë
PGSIZE
, 0) == 0);

1132 
	`as£π
(!(*
	`pml4e_wÆk
(
boŸ_pml4e
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
));

1135 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0Ë=
	`∑ge2∑
(
µ1
));

1136 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

1138 
	`as£π
(
µ1
->
µ_ªf
 == 2);

1139 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1143 
	`∑ge_ªmove
(
boŸ_pml4e
, 0x0);

1144 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0x0) == ~0);

1145 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

1146 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1147 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1151 
	`as£π
(
	`∑ge_ö£π
(
boŸ_pml4e
, 
µ1
, (*Ë
PGSIZE
, 0) == 0);

1152 
	`as£π
(
µ1
->
µ_ªf
);

1153 
	`as£π
(
µ1
->
µ_lök
 =
NULL
);

1156 
	`∑ge_ªmove
(
boŸ_pml4e
, (*Ë
PGSIZE
);

1157 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 0x0) == ~0);

1158 
	`as£π
(
	`check_va2∑
(
boŸ_pml4e
, 
PGSIZE
) == ~0);

1159 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1160 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1166 
	`mem£t
(
	`∑ge2kva
(
µ1
), 1, 
PGSIZE
);

1167 
	`mem£t
(
	`∑ge2kva
(
µ2
), 2, 
PGSIZE
);

1168 
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ1
, 0x0, 0);

1169 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1170 
	`as£π
(*(*)0 == 0x01010101);

1171 
	`∑ge_ö£π
(
boŸ_pgdú
, 
µ2
, 0x0, 0);

1172 
	`as£π
(*(*)0 == 0x02020202);

1173 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1174 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1175 
	`∑ge_ªmove
(
boŸ_pgdú
, 0x0);

1176 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1180 
PageInfo
 *
µ_l1
 = 
	`∑2∑ge
(
	`PTE_ADDR
(
boŸ_pml4e
[0]));

1181 
boŸ_pml4e
[0] = 0;

1182 
	`as£π
(
µ3
->
µ_ªf
 == 1);

1183 
	`∑ge_de¸ef
(
µ_l1
);

1185 i‡(
µ_l1
 !
µ3
Ë
	`∑ge_de¸ef
(pp3);

1186 i‡(
µ_l1
 !
µ2
Ë
	`∑ge_de¸ef
(pp2);

1187 i‡(
µ_l1
 !
µ0
Ë
	`∑ge_de¸ef
(pp0);

1188 
va
 = (*)(
PGSIZE
 * 100);

1189 
±ï
 = 
	`pml4e_wÆk
(
boŸ_pml4e
, 
va
, 1);

1190 
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[
	`PML4
(
va
)]));

1191 
pde
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[
	`PDPE
(
va
)]));

1192 
±ï1
 = 
	`KADDR
(
	`PTE_ADDR
(
pde
[
	`PDX
(
va
)]));

1193 
	`as£π
(
±ï
 =
±ï1
 + 
	`PTX
(
va
));

1196 
	`mem£t
(
	`∑ge2kva
(
µ4
), 0xFF, 
PGSIZE
);

1197 
	`pml4e_wÆk
(
boŸ_pml4e
, 0x0, 1);

1198 
pd≥
 = 
	`KADDR
(
	`PTE_ADDR
(
boŸ_pml4e
[0]));

1199 
pde
 = 
	`KADDR
(
	`PTE_ADDR
(
pd≥
[0]));

1200 
±ï
 = 
	`KADDR
(
	`PTE_ADDR
(
pde
[0]));

1201 
i
=0; i<
NPTENTRIES
; i++)

1202 
	`as£π
((
±ï
[
i
] & 
PTE_P
) == 0);

1203 
boŸ_pml4e
[0] = 0;

1206 
∑ge_‰ì_li°
 = 
Ê
;

1209 
	`∑ge_de¸ef
(
µ0
);

1210 
	`∑ge_de¸ef
(
µ2
);

1211 
	`∑ge_de¸ef
(
µ3
);

1214 
	`as£π
(
µ0
->
µ_ªf
 == 0);

1215 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1216 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1217 
	`as£π
(
µ3
->
µ_ªf
 == 0);

1218 
	`as£π
(
µ4
->
µ_ªf
 == 0);

1219 
	`as£π
(
µ5
->
µ_ªf
 == 0);

1221 
	`˝rötf
("check_page() succeeded!\n");

1222 
	}
}

	@printf.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/°dio.h
>

6 
	~<öc/°d¨g.h
>

10 
	$putch
(
ch
, *
˙t
)

12 
	`˝utch¨
(
ch
);

13 *
˙t
++;

14 
	}
}

17 
	$v˝rötf
(c⁄° *
fmt
, 
va_li°
 
≠
)

19 
˙t
 = 0;

20 
va_li°
 
aq
;

21 
	`va_c›y
(
aq
,
≠
);

22 
	`v¥ötfmt
((*)
putch
, &
˙t
, 
fmt
, 
aq
);

23 
	`va_íd
(
aq
);

24  
˙t
;

26 
	}
}

29 
	$˝rötf
(c⁄° *
fmt
, ...)

31 
va_li°
 
≠
;

32 
˙t
;

33 
	`va_°¨t
(
≠
, 
fmt
);

34 
va_li°
 
aq
;

35 
	`va_c›y
(
aq
,
≠
);

36 
˙t
 = 
	`v˝rötf
(
fmt
, 
aq
);

37 
	`va_íd
(
aq
);

39  
˙t
;

40 
	}
}

	@sched.c

1 
	~<öc/as£π.h
>

2 
	~<öc/x86.h
>

3 
	~<kîn/•ölock.h
>

4 
	~<kîn/ív.h
>

5 
	~<kîn/pm≠.h
>

6 
	~<kîn/m⁄ô‹.h
>

8 
sched_hÆt
();

14 
	$sched_yõld
()

16 
Env
 *
idÀ
;

50 
idÀ
 = 
cuªnv
;

52 
uöt16_t
 
ív_ödex
 = 
idÀ
 ? 
	`ENVX
(idÀ->
ív_id
) : -1;

54 
uöt16_t
 
√xt_ív_id
;

55 
i
 = 1; i < 
NENV
; i++) {

56 
√xt_ív_id
 = (
ív_ödex
 + 
i
Ë% 
NENV
;

57 i‡((
ívs
[
√xt_ív_id
].
ív_°©us
 =
ENV_RUNNABLE
)) {

58 
	`ív_run
(&
ívs
[
√xt_ív_id
]);

63 if(
idÀ
 !
NULL
 && idÀ->
ív_°©us
 =
ENV_RUNNING
 && idÀ =
cuªnv
) {

64 
	`ív_run
(
idÀ
);

67 
	`sched_hÆt
();

68 
	}
}

76 
	$sched_hÆt
()

78 
i
;

82 
i
 = 0; i < 
NENV
; i++) {

83 i‡((
ívs
[
i
].
ív_°©us
 =
ENV_RUNNABLE
 ||

84 
ívs
[
i
].
ív_°©us
 =
ENV_RUNNING
 ||

85 
ívs
[
i
].
ív_°©us
 =
ENV_DYING
))

88 i‡(
i
 =
NENV
) {

89 
	`˝rötf
("NoÑunnableÉnvironments inÅhe system!\n");

91 
	`m⁄ô‹
(
NULL
);

95 
cuªnv
 = 
NULL
;

96 
	`l¸3
(
	`PADDR
(
boŸ_pml4e
));

101 
	`xchg
(&
this˝u
->
˝u_°©us
, 
CPU_HALTED
);

104 
	`u∆ock_kî√l
();

107 
asm
 volatile (

114 : : "a" (
this˝u
->
˝u_ts
.
ts_e•0
));

115 
	}
}

	@sched.h

3 #i‚de‡
JOS_KERN_SCHED_H


4 
	#JOS_KERN_SCHED_H


	)

5 #i‚de‡
JOS_KERNEL


10 
	$sched_yõld
(Ë
	`__©åibuã__
((
n‹ëu∫
));

	@spinlock.c

3 
	~<öc/ty≥s.h
>

4 
	~<öc/as£π.h
>

5 
	~<öc/x86.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/°rög.h
>

8 
	~<kîn/˝u.h
>

9 
	~<kîn/•ölock.h
>

10 
	~<kîn/kdebug.h
>

13 
•ölock
 
	gkî√l_lock
 = {

14 #ifde‡
DEBUG_SPINLOCK


15 .
«me
 = "kernel_lock"

19 #ifde‡
DEBUG_SPINLOCK


22 
	$gë_ˇŒî_pcs
(
uöt64_t
 
pcs
[])

24 
uöt64_t
 *
rbp
;

25 
i
;

27 
rbp
 = (
uöt64_t
 *)
	`ªad_rbp
();

28 
i
 = 0; i < 10; i++){

29 i‡(
rbp
 =0 ||Ñb∞< (
uöt64_t
 *)
ULIM
)

31 
pcs
[
i
] = 
rbp
[1];

32 
rbp
 = (
uöt64_t
 *)rbp[0];

34 ; 
i
 < 10; i++)

35 
pcs
[
i
] = 0;

36 
	}
}

40 
	$hﬁdög
(
•ölock
 *
lock
)

42  
lock
->
locked
 &&Üock->
˝u
 =
this˝u
;

43 
	}
}

47 
	$__•ö_öôlock
(
•ölock
 *
lk
, *
«me
)

49 
lk
->
locked
 = 0;

50 #ifde‡
DEBUG_SPINLOCK


51 
lk
->
«me
 =Çame;

52 
lk
->
˝u
 = 0;

54 
	}
}

61 
	$•ö_lock
(
•ölock
 *
lk
)

63 #ifde‡
DEBUG_SPINLOCK


64 i‡(
	`hﬁdög
(
lk
))

65 
	`∑nic
("CPU %d c™nŸácquúê%s:áÃódy hﬁdög", 
	`˝unum
(), 
lk
->
«me
);

71 
	`xchg
(&
lk
->
locked
, 1) != 0)

72 
asm
 volatile ("pause");

75 #ifde‡
DEBUG_SPINLOCK


76 
lk
->
˝u
 = 
this˝u
;

77 
	`gë_ˇŒî_pcs
(
lk
->
pcs
);

79 
	}
}

83 
	$•ö_u∆ock
(
•ölock
 *
lk
)

85 #ifde‡
DEBUG_SPINLOCK


86 i‡(!
	`hﬁdög
(
lk
)) {

87 
i
;

88 
uöt32_t
 
pcs
[10];

90 
	`memmove
(
pcs
, 
lk
->pcs, Öcs);

91 i‡(!
lk
->
˝u
)

92 
	`˝rötf
("CPU %d cannotÑelease %s:Çot held byány CPU\nAcquiredát:",

93 
	`˝unum
(), 
lk
->
«me
);

95 
	`˝rötf
("CPU %d cannotÑelease %s: held by CPU %d\nAcquiredát:",

96 
	`˝unum
(), 
lk
->
«me
,Ük->
˝u
->
˝u_id
);

97 
i
 = 0; i < 10 && 
pcs
[i]; i++) {

98 
Rùdebugöfo
 
öfo
;

99 i‡(
	`debugöfo_rù
(
pcs
[
i
], &
öfo
) >= 0)

100 
	`˝rötf
(" %08x %s:%d: %.*s+%x\n", 
pcs
[
i
],

101 
öfo
.
rù_fûe
, info.
rù_löe
,

102 
öfo
.
rù_‚_«mñí
, info.
rù_‚_«me
,

103 
pcs
[
i
] - 
öfo
.
rù_‚_addr
);

105 
	`˝rötf
(" %08x\n", 
pcs
[
i
]);

107 
	`∑nic
("spin_unlock");

110 
lk
->
pcs
[0] = 0;

111 
lk
->
˝u
 = 0;

123 
	`xchg
(&
lk
->
locked
, 0);

124 
	}
}

	@spinlock.h

1 #i‚de‡
JOS_INC_SPINLOCK_H


2 
	#JOS_INC_SPINLOCK_H


	)

4 
	~<öc/ty≥s.h
>

7 
	#DEBUG_SPINLOCK


	)

10 
	s•ölock
 {

11 
	mlocked
;

13 #ifde‡
DEBUG_SPINLOCK


15 *
	m«me
;

16 
CpuInfo
 *
	m˝u
;

17 
uöçå_t
 
	mpcs
[10];

22 
__•ö_öôlock
(
•ölock
 *
lk
, *
«me
);

23 
•ö_lock
(
•ölock
 *
lk
);

24 
•ö_u∆ock
(
•ölock
 *
lk
);

26 
	#•ö_öôlock
(
lock
Ë
	`__•ö_öôlock
÷ock, #lock)

	)

28 
•ölock
 
kî√l_lock
;

30 
ölöe
 

31 
	$lock_kî√l
()

33 
	`•ö_lock
(&
kî√l_lock
);

34 
	}
}

36 
ölöe
 

37 
	$u∆ock_kî√l
()

39 
	`•ö_u∆ock
(&
kî√l_lock
);

45 
asm
 volatile("pause");

46 
	}
}

	@syscall.c

1 
	~<öc/ty≥s.h
>

2 
	~<öc/as£π.h
>

3 
	~<öc/îr‹.h
>

7 
	~<öc/x86.h
>

8 
	~<öc/îr‹.h
>

9 
	~<öc/°rög.h
>

10 
	~<öc/as£π.h
>

12 
	~<kîn/ív.h
>

13 
	~<kîn/pm≠.h
>

14 
	~<kîn/å≠.h
>

15 
	~<kîn/sysˇŒ.h
>

16 
	~<kîn/c⁄sﬁe.h
>

17 
	~<kîn/sched.h
>

23 
	$sys_˝uts
(c⁄° *
s
, 
size_t
 
Àn
)

29 
	`u£r_mem_as£π
(
cuªnv
, (*Ë
s
, 
Àn
, 
PTE_U
);

32 
	`˝rötf
("%.*s", 
Àn
, 
s
);

33 
	}
}

38 
	$sys_cgëc
()

40  
	`c⁄s_gëc
();

41 
	}
}

44 
ívid_t


45 
	$sys_gëívid
()

47  
cuªnv
->
ív_id
;

48 
	}
}

56 
	$sys_ív_de°roy
(
ívid_t
 
ívid
)

58 
r
;

59 
Env
 *
e
;

61 i‡((
r
 = 
	`ívid2ív
(
ívid
, &
e
, 1)) < 0)

62  
r
;

63 
	`ív_de°roy
(
e
);

65 
	}
}

69 
	$sys_yõld
()

71 
	`sched_yõld
();

72 
	}
}

78 
ívid_t


79 
	$sys_exof‹k
()

88 
Env
 *
chûd_ív
;

89 
ªt
 = 
	`ív_Æloc
(&
chûd_ív
, 
cuªnv
->
ív_id
);

90 i‡(
ªt
 < 0) {

91  -
E_BAD_ENV
;

93 
chûd_ív
->
ív_°©us
 = 
ENV_NOT_RUNNABLE
;

94 
chûd_ív
->
ív_tf
 = 
cuªnv
->env_tf;

95 
chûd_ív
->
ív_tf
.
tf_ªgs
.
ªg_øx
 = 0;

97  
chûd_ív
->
ív_id
;

99 
	}
}

109 
	$sys_ív_£t_°©us
(
ívid_t
 
ívid
, 
°©us
)

118 i‡((
°©us
 !
ENV_RUNNABLE
Ë&& (°©u†!
ENV_NOT_RUNNABLE
)) {

119  -
E_INVAL
;

122 
Env
 *
ív
;

124 
ªt
 = 
	`ívid2ív
(
ívid
, &
ív
, 1);

125 i‡(
ªt
 < 0) {

126  -
E_BAD_ENV
;

128 
ív
->
ív_°©us
 = 
°©us
;

131 
	}
}

141 
	$sys_ív_£t_å≠‰ame
(
ívid_t
 
ívid
, 
Tøp‰ame
 *
tf
)

146 
	`∑nic
("sys_env_set_trapframeÇot implemented");

147 
	}
}

158 
	$sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ívid
, *
func
)

164 
Env
 *
ív
;

166 
ªt
 = 
	`ívid2ív
(
ívid
, &
ív
, 1);

168 i‡(
ªt
 < 0) {

171  -
E_BAD_ENV
;

173 
ív
->
ív_pgÁu…_upˇŒ
 = 
func
;

177 
	}
}

199 
	$sys_∑ge_Æloc
(
ívid_t
 
ívid
, *
va
, 
≥rm
)

209 
Env
 *
ív
;

210 
ªt
 = 
	`ívid2ív
(
ívid
, &
ív
, 1);

211 i‡(
ªt
 < 0) {

212  -
E_BAD_ENV
;

216 i‡(((
uöçå_t
Ë
va
 >
UTOP
Ë|| ((uöçå_tËv®% 
PGSIZE
 != 0)) {

217  -
E_INVAL
;

223 i‡(!(
≥rm
 & (
PTE_U
 | 
PTE_P
))) {

224  -
E_INVAL
;

229 
PageInfo
 *
∑ge
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

230 i‡(!
∑ge
)

231  -
E_NO_MEM
;

234 
ªt
 = 
	`∑ge_ö£π
(
ív
->
ív_pml4e
, 
∑ge
, 
va
, 
≥rm
);

235 i‡(
ªt
 < 0) {

236  -
E_BAD_ENV
;

238 
	`mem£t
(
	`∑ge2kva
(
∑ge
), 0, 
PGSIZE
);

242 
	}
}

261 
	$sys_∑ge_m≠
(
ívid_t
 
§˚nvid
, *
§cva
,

262 
ívid_t
 
d°ívid
, *
d°va
, 
≥rm
)

272 
Env
 *
§˚nv
, *
d°ív
;

276 
ªt
 = 
	`ívid2ív
(
§˚nvid
, &
§˚nv
, 0);

277 i‡(
ªt
 < 0) {

278  -
E_BAD_ENV
;

281 
ªt
 = 
	`ívid2ív
(
d°ívid
, &
d°ív
, 0);

282 i‡(
ªt
 < 0) {

283  -
E_BAD_ENV
;

288 i‡((
uöçå_t
Ë
§cva
 >
UTOP
 || (uöçå_tË§cv®% 
PGSIZE
 != 0) {

289  -
E_INVAL
;

292 i‡((
uöçå_t
Ë
d°va
 >
UTOP
 || (uöçå_tËd°v®% 
PGSIZE
 != 0) {

293  -
E_INVAL
;

297 
±e_t
 *
±e
;

298 
PageInfo
 *
∑ge
 = 
	`∑ge_lookup
(
§˚nv
->
ív_pml4e
, 
§cva
, &
±e
);

299 i‡(!
∑ge
) {

300  -
E_INVAL
;

304 i‡(!(
≥rm
 & (
PTE_U
 | 
PTE_P
)Ë|| (≥rm & ~
PTE_SYSCALL
)) {

305  -
E_INVAL
;

310 i‡(
≥rm
 & 
PTE_W
 && !(*
±e
 & PTE_W)) {

311  -
E_INVAL
;

315 
ªt
 = 
	`∑ge_ö£π
(
d°ív
->
ív_pml4e
, 
∑ge
, 
d°va
, 
≥rm
);

316 i‡(
ªt
 < 0) {

317  -
E_NO_MEM
;

322 
	}
}

332 
	$sys_∑ge_unm≠
(
ívid_t
 
ívid
, *
va
)

337 
PageInfo
 *
∑ge
;

338 
Env
 *
ív
;

342 
ªt
 = 
	`ívid2ív
(
ívid
, &
ív
, 1);

343 i‡(
ªt
 < 0) {

344  -
E_BAD_ENV
;

348 i‡((
uöçå_t
Ë
va
 >
UTOP
 || (uöçå_t)v®% 
PGSIZE
 != 0)

349  -
E_INVAL
;

351 
	`∑ge_ªmove
(
ív
->
ív_pml4e
, 
va
);

355 
	}
}

401 
	$sys_ùc_åy_£nd
(
ívid_t
 
ívid
, 
uöt32_t
 
vÆue
, *
§cva
, 
≥rm
)

404 
Env
 *
ív
;

405 
ªt
;

409 
ªt
 = 
	`ívid2ív
(
ívid
, &
ív
, 0);

410 i‡(
ªt
 < 0) {

411  -
E_BAD_ENV
;

414 i‡(!
ív
->
ív_ùc_ªcvög
) {

415  -
E_IPC_NOT_RECV
;

418 
±e_t
 *
±e
;

419 
PageInfo
 *
∑ge
;

423 i‡((
uöçå_t
)
§cva
 < 
UTOP
) {

425 i‡(
	`PGOFF
(
§cva
) != 0) {

426  -
E_INVAL
;

429 i‡((
≥rm
 & (
PTE_U
 | 
PTE_P
)) != (PTE_U | PTE_P)) {

430  -
E_INVAL
;

432 i‡((
≥rm
 & ~(
PTE_SYSCALL
)) != 0) {

433  -
E_INVAL
;

437 i‡((
∑ge
 = 
	`∑ge_lookup
(
cuªnv
->
ív_pml4e
, 
§cva
, &
±e
)Ë=
NULL
) {

438  -
E_INVAL
;

442 i‡((*
±e
 & 
PTE_W
Ë=0 && (
≥rm
 & PTE_W) == PTE_W) {

443  -
E_INVAL
;

445 
ªt
 = 
	`∑ge_ö£π
(
ív
->
ív_pml4e
, 
∑ge
,Énv->
ív_ùc_d°va
, 
≥rm
);

446 i‡(
ªt
 < 0) {

447  -
E_NO_MEM
;

449 
ív
->
ív_ùc_≥rm
 = 
≥rm
;

451 
ív
->
ív_ùc_≥rm
 = 0;

453 
ív
->
ív_ùc_ªcvög
 = 0;

454 
ív
->
ív_ùc_‰om
 = 
cuªnv
->
ív_id
;

455 
ív
->
ív_ùc_vÆue
 = 
vÆue
;

456 
ív
->
ív_°©us
 = 
ENV_RUNNABLE
;

459 
	}
}

473 
	$sys_ùc_ªcv
(*
d°va
)

476 i‡((
uöçå_t
)
d°va
 < 
UTOP
 && 
	`PGOFF
(dstva) != 0) {

477  -
E_INVAL
;

479 
cuªnv
->
ív_ùc_ªcvög
 = 1;

480 
cuªnv
->
ív_ùc_d°va
 = 
d°va
;

481 
cuªnv
->
ív_°©us
 = 
ENV_NOT_RUNNABLE
;

484 
	}
}

491 
öt64_t


492 
	$sysˇŒ
(
uöt64_t
 
sysˇŒno
, uöt64_à
a1
, uöt64_à
a2
, uöt64_à
a3
, uöt64_à
a4
, uöt64_à
a5
)

500 
sysˇŒno
) {

501 
SYS_˝uts
:

502 
	`sys_˝uts
((c⁄° *Ë
a1
, 
a2
);

504 
SYS_cgëc
:

505  
	`sys_cgëc
();

506 
SYS_gëívid
:

507  
	`sys_gëívid
();

508 
SYS_ív_de°roy
:

509  
	`sys_ív_de°roy
((
ívid_t
)
a1
);

510 
SYS_yõld
:

511 
	`sys_yõld
();

513 
SYS_exof‹k
:

514  
	`sys_exof‹k
();

515 
SYS_ív_£t_°©us
:

516  
	`sys_ív_£t_°©us
((
ívid_t
)
a1
, 
a2
);

517 
SYS_∑ge_m≠
:

518  
	`sys_∑ge_m≠
((
ívid_t
)
a1
, (*)
a2
, 
a3
, (*)
a4
, 
a5
);

520 
SYS_∑ge_unm≠
:

521  
	`sys_∑ge_unm≠
((
ívid_t
)
a1
, (*)
a2
);

522 
SYS_∑ge_Æloc
:

523  
	`sys_∑ge_Æloc
((
ívid_t
)
a1
, (*)
a2
, 
a3
);

524 
SYS_ív_£t_pgÁu…_upˇŒ
:

525  
	`sys_ív_£t_pgÁu…_upˇŒ
((
ívid_t
)
a1
, (*)
a2
);

526 
SYS_ùc_ªcv
:

527  
	`sys_ùc_ªcv
((*)
a1
);

528 
SYS_ùc_åy_£nd
:

529  
	`sys_ùc_åy_£nd
(
a1
, 
a2
, (*)
a3
, 
a4
);

531  -
E_NO_SYS
;

533 
	}
}

	@syscall.h

1 #i‚de‡
JOS_KERN_SYSCALL_H


2 
	#JOS_KERN_SYSCALL_H


	)

3 #i‚de‡
JOS_KERNEL


7 
	~<öc/sysˇŒ.h
>

9 
öt64_t
 
sysˇŒ
(
uöt64_t
 
num
, uöt64_à
a1
, uöt64_à
a2
, uöt64_à
a3
, uöt64_à
a4
, uöt64_à
a5
);

	@temp.c

1 
SETGATE
(
idt
[
T_DIVIDE
], 1, 
GD_KT
, 
DIVIDE_F
, 0);

2 
SETGATE
(
idt
[
T_DEBUG
], 1, 
GD_KT
, 
DEBUG_F
, 0);

3 
SETGATE
(
idt
[
T_NMI
], 0, 
GD_KT
, 
NMI_F
, 0);

4 
SETGATE
(
idt
[
T_BRKPT
], 1, 
GD_KT
, 
BRKPT_F
, 3);

5 
SETGATE
(
idt
[
T_OFLOW
], 1, 
GD_KT
, 
OFLOW_F
, 0);

6 
SETGATE
(
idt
[
T_BOUND
], 1, 
GD_KT
, 
OFLOW_F
, 0);

7 
SETGATE
(
idt
[
T_ILLOP
], 1, 
GD_KT
, 
ILLOP_F
, 0);

8 
SETGATE
(
idt
[
T_DEVICE
], 1, 
GD_KT
, 
DEVICE_F
, 0);

9 
SETGATE
(
idt
[
T_DBLFLT
], 1, 
GD_KT
, 
DBLFLT_F
, 0);

10 
SETGATE
(
idt
[
T_TSS
],1,
GD_KT
,
TSS_F
, 0);

11 
SETGATE
(
idt
[
T_SEGNP
],1,
GD_KT
,
SEGNP_F
, 0);

12 
SETGATE
(
idt
[
T_STACK
],1,
GD_KT
,
STACK_F
, 0);

13 
SETGATE
(
idt
[
T_GPFLT
],1,
GD_KT
,
GPFLT_F
, 0);

14 
SETGATE
(
idt
[
T_PGFLT
],1,
GD_KT
,
PGFLT_F
, 0);

15 
SETGATE
(
idt
[
T_FPERR
],1,
GD_KT
,
FPERR_F
, 0);

16 
SETGATE
(
idt
[
T_ALIGN
],1,
GD_KT
,
ALIGN_F
, 0);

17 
SETGATE
(
idt
[
T_MCHK
],1,
GD_KT
,
MCHK_F
, 0);

18 
SETGATE
(
idt
[
T_SIMDERR
],1,
GD_KT
,
SIMDERR_F
, 0);

19 
SETGATE
(
idt
[
T_SYSCALL
],1,
GD_KT
,
SYSCALL_F
, 3);

21 
DIVIDE_F
();

22 
DEBUG_F
();

23 
NMI_F
();

24 
BRKPT_F
();

25 
OFLOW_F
();

26 
BOUND_F
();

27 
ILLOP_F
();

28 
DEVICE_F
();

29 
DBLFLT_F
();

30 
TSS_F
();

31 
SEGNP_F
();

32 
STACK_F
();

33 
GPFLT_F
();

34 
PGFLT_F
();

35 
FPERR_F
();

36 
ALIGN_F
();

37 
MCHK_F
();

38 
SIMDERR_F
();

39 
SYSCALL_F
();

40 
DEFAULT_F
();

45 
uöt32_t
 
	gív_size
 = 
ROUNDUP
((
Env
Ë* 
NENV
, 
PGSIZE
);

46 
	gívs
 = 
boŸ_Æloc
(
ív_size
);

47 
	gív
 = 
ívs
;

49 
boŸ_m≠_ªgi⁄
(
pml4e
, 
UENVS
, 
ív_size
, 
PADDR
(
ívs
), 
PTE_U
);

50 
boŸ_m≠_ªgi⁄
(
pml4e
, (
uöçå_t
Ë
ívs
, 
PGSIZE
, 
PADDR
”nvs), 
PTE_W
);

52 
	$TRAPHANDLER_NOEC
(
DIVIDE_F
, 
T_DIVIDE
)

53 
	$TRAPHANDLER_NOEC
(
DEBUG_F
, 
T_DEBUG
)

54 
	$TRAPHANDLER_NOEC
(
NMI_F
, 
T_NMI
)

55 
	$TRAPHANDLER_NOEC
(
BRKPT_F
, 
T_BRKPT
)

56 
	$TRAPHANDLER_NOEC
(
OFLOW_F
, 
T_OFLOW
)

57 
	$TRAPHANDLER_NOEC
(
BOUND_F
, 
T_BOUND
)

58 
	$TRAPHANDLER_NOEC
(
ILLOP_F
, 
T_ILLOP
)

59 
	$TRAPHANDLER_NOEC
(
DEVICE_F
, 
T_DEVICE
)

60 
	$TRAPHANDLER
(
DBLFLT_F
, 
T_DBLFLT
)

61 
	$TRAPHANDLER
(
TSS_F
, 
T_TSS
)

62 
	$TRAPHANDLER
(
SEGNP_F
, 
T_SEGNP
)

63 
	$TRAPHANDLER
(
STACK_F
, 
T_STACK
)

64 
	$TRAPHANDLER
(
GPFLT_F
, 
T_GPFLT
)

65 
	$TRAPHANDLER
(
PGFLT_F
, 
T_PGFLT
)

66 
	$TRAPHANDLER_NOEC
(
FPERR_F
, 
T_FPERR
)

67 
	$TRAPHANDLER
(
ALIGN_F
, 
T_ALIGN
)

68 
	$TRAPHANDLER_NOEC
(
MCHK_F
, 
T_MCHK
)

69 
	$TRAPHANDLER_NOEC
(
SIMDERR_F
, 
T_SIMDERR
)

70 
	$TRAPHANDLER_NOEC
(
SYSCALL_F
, 
T_SYSCALL
)

71 
	$TRAPHANDLER
(
DEFAULT_F
, 
T_DEFAULT
)

73 
_Æ…øps
:

74 
subq
 
$8
,%
r•


75 
movq
 
$0
, (%
r•
)

76 
mov
 %
ds
,(%
r•
)

77 
subq
 
$8
,%
r•


78 
movq
 
$0
, (%
r•
)

79 
mov
 %
es
,(%
r•
)

80 
PUSHA


81 
mov
 %
r•
,%
rdi


82 
ˇŒ
 
å≠


83 
POPA_


84 
	`mov
 (%
r•
),%
es


85 
addq
 
$8
, %
r•


86 
	`mov
 (%
r•
), %
ds


87 
addq
 
$8
, %
r•


89 i‡(
tf
->
tf_å≠no
 =
T_PGFLT
) {

90 
	`∑ge_Áu…_h™dÀr
(
tf
);

92 
	}
}

93 i‡(
	gtf
->
	gtf_å≠no
==
T_BRKPT
) {

94 
m⁄ô‹
(
tf
);

98 i‡(
	gtf
->
	gtf_å≠no
 =
T_SYSCALL
) {

99 
uöt64_t
 
sysˇŒ_no
,
a1
,
a2
,
a3
,
a4
,
a5
,
ªt
;

100 
	gsysˇŒ_no
 = 
tf
->
tf_ªgs
.
ªg_øx
;

101 
	ga1
 = 
tf
->
tf_ªgs
.
ªg_rdx
;

102 
	ga2
 = 
tf
->
tf_ªgs
.
ªg_rcx
;

103 
	ga3
 = 
tf
->
tf_ªgs
.
ªg_rbx
;

104 
	ga4
 = 
tf
->
tf_ªgs
.
ªg_rdi
;

105 
	ga5
 = 
tf
->
tf_ªgs
.
ªg_rsi
;

106 
	gªt
 = 
sysˇŒ
(
sysˇŒ_no
,
a1
,
a2
,
a3
,
a4
,
a5
);

107 
	gtf
->
	gtf_ªgs
.
	gªg_øx
 = 
ªt
;

111 i‡((
	gtf
->
	gtf_cs
 & 3) == 0)

112 
∑nic
("Page fault occured in kernel mode");

	@trap.c

1 
	~<öc/mmu.h
>

2 
	~<öc/x86.h
>

3 
	~<öc/as£π.h
>

5 
	~<kîn/pm≠.h
>

6 
	~<kîn/å≠.h
>

7 
	~<kîn/c⁄sﬁe.h
>

8 
	~<kîn/m⁄ô‹.h
>

9 
	~<kîn/ív.h
>

10 
	~<kîn/sysˇŒ.h
>

11 
	~<kîn/sched.h
>

12 
	~<kîn/k˛ock.h
>

13 
	~<kîn/picúq.h
>

14 
	~<kîn/˝u.h
>

15 
	~<kîn/•ölock.h
>

17 
uöçå_t
 
gdtdesc_64
;

18 
Task°©e
 
	gts
;

19 
Segdesc
 
gdt
[];

20 
gdt_pd
;

22 
DIVIDE_F
();

23 
DEBUG_F
();

24 
NMI_F
();

25 
BRKPT_F
();

26 
OFLOW_F
();

27 
BOUND_F
();

28 
ILLOP_F
();

29 
DEVICE_F
();

30 
DBLFLT_F
();

31 
TSS_F
();

32 
SEGNP_F
();

33 
STACK_F
();

34 
GPFLT_F
();

35 
PGFLT_F
();

36 
FPERR_F
();

37 
ALIGN_F
();

38 
MCHK_F
();

39 
SIMDERR_F
();

40 
SYSCALL_F
();

42 
TIMER_F
();

43 
KBD_F
();

44 
SERIAL_F
();

45 
SPURIOUS_F
();

46 
IDE_F
();

47 
ERROR_F
();

54 
Tøp‰ame
 *
	gœ°_tf
;

59 
G©edesc
 
	gidt
[256] = { { 0 } };

60 
P£udodesc
 
	gidt_pd
 = {0,0};

63 c⁄° *
	$å≠«me
(
å≠no
)

65 c⁄° * c⁄° 
ex˙ames
[] = {

88 i‡(
å≠no
 < (
ex˙ames
)/(excnames[0]))

89  
ex˙ames
[
å≠no
];

90 i‡(
å≠no
 =
T_SYSCALL
)

92 i‡(
å≠no
 >
IRQ_OFFSET
 &&Årapno < IRQ_OFFSET + 16)

95 
	}
}

99 
	$å≠_öô
()

101 
Segdesc
 
gdt
[];

104 
	`SETGATE
(
idt
[
T_DIVIDE
], 0, 
GD_KT
, 
DIVIDE_F
, 0);

105 
	`SETGATE
(
idt
[
T_DEBUG
], 0, 
GD_KT
, 
DEBUG_F
, 0);

106 
	`SETGATE
(
idt
[
T_NMI
], 0, 
GD_KT
, 
DEBUG_F
, 0);

107 
	`SETGATE
(
idt
[
T_BRKPT
], 0, 
GD_KT
, 
BRKPT_F
, 3);

108 
	`SETGATE
(
idt
[
T_OFLOW
], 0, 
GD_KT
, 
OFLOW_F
, 0);

109 
	`SETGATE
(
idt
[
T_BOUND
], 0, 
GD_KT
, 
OFLOW_F
, 0);

110 
	`SETGATE
(
idt
[
T_ILLOP
], 0, 
GD_KT
, 
ILLOP_F
, 0);

111 
	`SETGATE
(
idt
[
T_DEVICE
], 0, 
GD_KT
, 
DEVICE_F
, 0);

112 
	`SETGATE
(
idt
[
T_DBLFLT
], 0, 
GD_KT
, 
DBLFLT_F
, 0);

113 
	`SETGATE
(
idt
[
T_TSS
],0,
GD_KT
,
TSS_F
, 0);

114 
	`SETGATE
(
idt
[
T_SEGNP
],0,
GD_KT
,
SEGNP_F
, 0);

115 
	`SETGATE
(
idt
[
T_STACK
],0,
GD_KT
,
STACK_F
, 0);

116 
	`SETGATE
(
idt
[
T_GPFLT
],0,
GD_KT
,
GPFLT_F
, 0);

117 
	`SETGATE
(
idt
[
T_PGFLT
],0,
GD_KT
,
PGFLT_F
, 0);

118 
	`SETGATE
(
idt
[
T_FPERR
],0,
GD_KT
,
FPERR_F
, 0);

119 
	`SETGATE
(
idt
[
T_ALIGN
],0,
GD_KT
,
ALIGN_F
, 0);

120 
	`SETGATE
(
idt
[
T_MCHK
],0,
GD_KT
,
MCHK_F
, 0);

121 
	`SETGATE
(
idt
[
T_SIMDERR
],0,
GD_KT
,
SIMDERR_F
, 0);

122 
	`SETGATE
(
idt
[
T_SYSCALL
],0,
GD_KT
,
SYSCALL_F
, 3);

124 
	`SETGATE
(
idt
[
IRQ_OFFSET
 + 
IRQ_TIMER
], 0, 
GD_KT
, 
TIMER_F
,0);

125 
	`SETGATE
(
idt
[
IRQ_OFFSET
 + 
IRQ_KBD
], 0, 
GD_KT
, 
KBD_F
,0);

126 
	`SETGATE
(
idt
[
IRQ_OFFSET
 + 
IRQ_SERIAL
], 0, 
GD_KT
, 
SERIAL_F
,0);

127 
	`SETGATE
(
idt
[
IRQ_OFFSET
 + 
IRQ_SPURIOUS
], 0, 
GD_KT
, 
SPURIOUS_F
,0);

128 
	`SETGATE
(
idt
[
IRQ_OFFSET
 + 
IRQ_IDE
], 0, 
GD_KT
, 
IDE_F
,0);

129 
	`SETGATE
(
idt
[
IRQ_OFFSET
 + 
IRQ_ERROR
], 0, 
GD_KT
, 
ERROR_F
,0);

131 
idt_pd
.
pd_lim
 = (
idt
)-1;

132 
idt_pd
.
pd_ba£
 = (
uöt64_t
)
idt
;

134 
	`å≠_öô_≥r˝u
();

135 
	}
}

139 
	$å≠_öô_≥r˝u
()

164 
this_˝u_id
 = 
this˝u
->
˝u_id
;

166 
this˝u
->
˝u_ts
.
ts_e•0
 = 
KSTACKTOP
 - 
this_˝u_id
 * (
KSTKSIZE
 + 
KSTKGAP
);

169 
Segdesc
 * 
CPU_gdt
 = &
gdt
[(
GD_TSS0
 >> 3Ë+ 2 * 
this_˝u_id
];

172 
	`SETTSS
((
Sy°emSegdesc64
 *Ë
CPU_gdt
, 
STS_T64A
, (
uöt64_t
Ë(&
this˝u
->
˝u_ts
), (
Task°©e
), 0);

173 
	`…r
(
GD_TSS0
 + 2 * (
this_˝u_id
 << 3));

174 
	`lidt
(&
idt_pd
);

188 
	}
}

191 
	$¥öt_å≠‰ame
(
Tøp‰ame
 *
tf
)

193 
	`˝rötf
("TRAP fømê© %∞‰om CPU %d\n", 
tf
, 
	`˝unum
());

194 
	`¥öt_ªgs
(&
tf
->
tf_ªgs
);

195 
	`˝rötf
("É† 0x----%04x\n", 
tf
->
tf_es
);

196 
	`˝rötf
(" d† 0x----%04x\n", 
tf
->
tf_ds
);

197 
	`˝rötf
("Åø∞0x%08x %s\n", 
tf
->
tf_å≠no
, 
	`å≠«me
(tf->tf_trapno));

200 i‡(
tf
 =
œ°_tf
 &&Åf->
tf_å≠no
 =
T_PGFLT
)

201 
	`˝rötf
(" cr2 0x%08x\n", 
	`r¸2
());

202 
	`˝rötf
("Éº 0x%08x", 
tf
->
tf_îr
);

207 i‡(
tf
->
tf_å≠no
 =
T_PGFLT
)

208 
	`˝rötf
(" [%s, %s, %s]\n",

209 
tf
->
tf_îr
 & 4 ? "user" : "kernel",

210 
tf
->
tf_îr
 & 2 ? "write" : "read",

211 
tf
->
tf_îr
 & 1 ? "protection" : "not-present");

213 
	`˝rötf
("\n");

214 
	`˝rötf
("Ñù 0x%08x\n", 
tf
->
tf_rù
);

215 
	`˝rötf
(" c† 0x----%04x\n", 
tf
->
tf_cs
);

216 
	`˝rötf
(" fœg 0x%08x\n", 
tf
->
tf_eÊags
);

217 i‡((
tf
->
tf_cs
 & 3) != 0) {

218 
	`˝rötf
("Ñ• 0x%08x\n", 
tf
->
tf_r•
);

219 
	`˝rötf
(" s† 0x----%04x\n", 
tf
->
tf_ss
);

221 
	}
}

224 
	$¥öt_ªgs
(
PushRegs
 *
ªgs
)

226 
	`˝rötf
("Ñ15 0x%08x\n", 
ªgs
->
ªg_r15
);

227 
	`˝rötf
("Ñ14 0x%08x\n", 
ªgs
->
ªg_r14
);

228 
	`˝rötf
("Ñ13 0x%08x\n", 
ªgs
->
ªg_r13
);

229 
	`˝rötf
("Ñ12 0x%08x\n", 
ªgs
->
ªg_r12
);

230 
	`˝rötf
("Ñ11 0x%08x\n", 
ªgs
->
ªg_r11
);

231 
	`˝rötf
("Ñ10 0x%08x\n", 
ªgs
->
ªg_r10
);

232 
	`˝rötf
("Ñ9 0x%08x\n", 
ªgs
->
ªg_r9
);

233 
	`˝rötf
("Ñ8 0x%08x\n", 
ªgs
->
ªg_r8
);

234 
	`˝rötf
("Ñdò 0x%08x\n", 
ªgs
->
ªg_rdi
);

235 
	`˝rötf
("Ñsò 0x%08x\n", 
ªgs
->
ªg_rsi
);

236 
	`˝rötf
("Ñb∞ 0x%08x\n", 
ªgs
->
ªg_rbp
);

237 
	`˝rötf
("Ñbx 0x%08x\n", 
ªgs
->
ªg_rbx
);

238 
	`˝rötf
("Ñdx 0x%08x\n", 
ªgs
->
ªg_rdx
);

239 
	`˝rötf
("Ñcx 0x%08x\n", 
ªgs
->
ªg_rcx
);

240 
	`˝rötf
("Ñax 0x%08x\n", 
ªgs
->
ªg_øx
);

241 
	}
}

244 
	$å≠_di•©ch
(
Tøp‰ame
 *
tf
)

248 i‡(
tf
->
tf_å≠no
 =
T_PGFLT
) {

249 
	`∑ge_Áu…_h™dÀr
(
tf
);

252 i‡(
tf
->
tf_å≠no
==
T_BRKPT
) {

253 
	`m⁄ô‹
(
tf
);

257 i‡(
tf
->
tf_å≠no
 =
T_SYSCALL
) {

258 
uöt64_t
 
sysˇŒ_no
,
a1
,
a2
,
a3
,
a4
,
a5
,
ªt
;

259 
sysˇŒ_no
 = 
tf
->
tf_ªgs
.
ªg_øx
;

260 
a1
 = 
tf
->
tf_ªgs
.
ªg_rdx
;

261 
a2
 = 
tf
->
tf_ªgs
.
ªg_rcx
;

262 
a3
 = 
tf
->
tf_ªgs
.
ªg_rbx
;

263 
a4
 = 
tf
->
tf_ªgs
.
ªg_rdi
;

264 
a5
 = 
tf
->
tf_ªgs
.
ªg_rsi
;

265 
ªt
 = 
	`sysˇŒ
(
sysˇŒ_no
,
a1
,
a2
,
a3
,
a4
,
a5
);

266 
tf
->
tf_ªgs
.
ªg_øx
 = 
ªt
;

273 i‡(
tf
->
tf_å≠no
 =
IRQ_OFFSET
 + 
IRQ_SPURIOUS
) {

274 
	`˝rötf
("Spurious interrupt on irq 7\n");

275 
	`¥öt_å≠‰ame
(
tf
);

282 i‡(
tf
->
tf_å≠no
 =
IRQ_OFFSET
 + 
IRQ_TIMER
) {

284 
	`œpic_eoi
();

286 
	`sched_yõld
();

294 
	`¥öt_å≠‰ame
(
tf
);

295 i‡(
tf
->
tf_cs
 =
GD_KT
)

296 
	`∑nic
("unhandledÅrap in kernel");

298 
	`ív_de°roy
(
cuªnv
);

301 
	}
}

304 
	$å≠
(
Tøp‰ame
 *
tf
)

309 
asm
 volatile("cld" ::: "cc");

312 *
∑nic°r
;

313 i‡(
∑nic°r
)

314 
asm
 volatile("hlt");

318 i‡(
	`xchg
(&
this˝u
->
˝u_°©us
, 
CPU_STARTED
Ë=
CPU_HALTED
)

319 
	`lock_kî√l
();

323 
	`as£π
(!(
	`ªad_eÊags
(Ë& 
FL_IF
));

325 i‡((
tf
->
tf_cs
 & 3) == 3) {

330 
	`lock_kî√l
();

331 
	`as£π
(
cuªnv
);

334 i‡(
cuªnv
->
ív_°©us
 =
ENV_DYING
) {

335 
	`ív_‰ì
(
cuªnv
);

336 
cuªnv
 = 
NULL
;

337 
	`sched_yõld
();

343 
cuªnv
->
ív_tf
 = *
tf
;

345 
tf
 = &
cuªnv
->
ív_tf
;

350 
œ°_tf
 = 
tf
;

353 
	`å≠_di•©ch
(
tf
);

358 i‡(
cuªnv
 && cuªnv->
ív_°©us
 =
ENV_RUNNING
)

359 
	`ív_run
(
cuªnv
);

361 
	`sched_yõld
();

362 
	}
}

366 
	$∑ge_Áu…_h™dÀr
(
Tøp‰ame
 *
tf
)

368 
uöt64_t
 
Áu…_va
;

371 
Áu…_va
 = 
	`r¸2
();

377 i‡((
tf
->
tf_cs
 & 3) == 0)

378 
	`∑nic
("Page fault occured in kernel mode");

415 i‡(
cuªnv
->
ív_pgÁu…_upˇŒ
) {

416 
UTøp‰ame
 *
utf
;

418 i‡(
tf
->
tf_r•
 >
UXSTACKTOP
 - 
PGSIZE
 &&Åf->tf_rsp < UXSTACKTOP) {

420 
utf
 = (
UTøp‰ame
 *)(
tf
->
tf_r•
 - 8 - (UTrapframe));

423 
utf
 = (
UTøp‰ame
 *)(
UXSTACKTOP
 - (UTrapframe));

425 
	`u£r_mem_as£π
(
cuªnv
, (*)
utf
, (
UTøp‰ame
), 
PTE_W
 | 
PTE_U
 | 
PTE_P
);

428 
utf
->
utf_r•
 = 
tf
->
tf_r•
;

429 
utf
->
utf_rù
 = 
tf
->
tf_rù
;

430 
utf
->
utf_eÊags
 = 
tf
->
tf_eÊags
;

431 
utf
->
utf_ªgs
 = 
tf
->
tf_ªgs
;

432 
utf
->
utf_îr
 = 
tf
->
tf_îr
;

433 
utf
->
utf_Áu…_va
 = 
Áu…_va
;

436 
tf
->
tf_r•
 = (
uöçå_t
)
utf
;

437 
tf
->
tf_rù
 = (
uöçå_t
)
cuªnv
->
ív_pgÁu…_upˇŒ
;

438 
	`ív_run
(
cuªnv
);

444 
	`˝rötf
("[%08x] u£∏Áu… v®%08x i∞%08x\n", 
cuªnv
->
ív_id
, 
Áu…_va
, 
tf
->
tf_rù
);

445 
	`¥öt_å≠‰ame
(
tf
);

446 
	`ív_de°roy
(
cuªnv
);

447 
	}
}

	@trap.h

3 #i‚de‡
JOS_KERN_TRAP_H


4 
	#JOS_KERN_TRAP_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/å≠.h
>

10 
	~<öc/mmu.h
>

13 
G©edesc
 
idt
[];

14 
P£udodesc
 
idt_pd
;

16 
å≠_öô
();

17 
å≠_öô_≥r˝u
();

18 
¥öt_ªgs
(
PushRegs
 *
ªgs
);

19 
¥öt_å≠‰ame
(
Tøp‰ame
 *
tf
);

20 
∑ge_Áu…_h™dÀr
(
Tøp‰ame
 *);

21 
backåa˚
(
Tøp‰ame
 *);

	@trap_1.c

1 
	~<öc/mmu.h
>

2 
	~<öc/x86.h
>

3 
	~<öc/as£π.h
>

5 
	~<kîn/pm≠.h
>

6 
	~<kîn/å≠.h
>

7 
	~<kîn/c⁄sﬁe.h
>

8 
	~<kîn/m⁄ô‹.h
>

9 
	~<kîn/ív.h
>

10 
	~<kîn/sysˇŒ.h
>

12 
uöçå_t
 
gdtdesc_64
;

13 
Task°©e
 
	gts
;

14 
Segdesc
 
gdt
[];

15 
gdt_pd
;

21 
Tøp‰ame
 *
	gœ°_tf
;

26 
G©edesc
 
	gidt
[256] = { { 0 } };

27 
P£udodesc
 
	gidt_pd
 = {0,0};

30 c⁄° *
	$å≠«me
(
å≠no
)

32 c⁄° * c⁄° 
ex˙ames
[] = {

55 i‡(
å≠no
 < (
ex˙ames
)/(excnames[0]))

56  
ex˙ames
[
å≠no
];

57 i‡(
å≠no
 =
T_SYSCALL
)

60 
	}
}

63 
T16_DIVIDE
();

64 
T16_DEBUG
();

65 
T16_NMI
();

66 
T16_BRKPT
();

67 
T16_OFLOW
();

68 
T16_BOUND
();

69 
T16_ILLOP
();

70 
T16_DEVICE
();

71 
T16_DBLFLT
();

72 
T16_TSS
();

73 
T16_SEGNP
();

74 
T16_STACK
();

75 
T16_GPFLT
();

76 
T16_PGFLT
();

77 
T16_FPERR
();

78 
T16_ALIGN
();

79 
T16_MCHK
();

80 
T16_SIMDERR
();

81 
T16_SYSCALL
();

85 
	$å≠_öô
()

87 
Segdesc
 
gdt
[];

90 
	`SETGATE
(
idt
[
T_DIVIDE
],1,
GD_KT
,
T16_DIVIDE
, 0);

91 
	`SETGATE
(
idt
[
T_DEBUG
],1,
GD_KT
,
T16_DEBUG
, 0);

92 
	`SETGATE
(
idt
[
T_NMI
],0,
GD_KT
,
T16_DEBUG
, 0);

93 
	`SETGATE
(
idt
[
T_BRKPT
],1,
GD_KT
,
T16_BRKPT
, 3);

94 
	`SETGATE
(
idt
[
T_OFLOW
],1,
GD_KT
,
T16_OFLOW
, 0);

95 
	`SETGATE
(
idt
[
T_BOUND
],1,
GD_KT
,
T16_BOUND
, 0);

96 
	`SETGATE
(
idt
[
T_ILLOP
],1,
GD_KT
,
T16_ILLOP
, 0);

97 
	`SETGATE
(
idt
[
T_DEVICE
],1,
GD_KT
,
T16_DEVICE
, 0);

98 
	`SETGATE
(
idt
[
T_DBLFLT
],1,
GD_KT
,
T16_DBLFLT
, 0);

99 
	`SETGATE
(
idt
[
T_TSS
],1,
GD_KT
,
T16_TSS
, 0);

100 
	`SETGATE
(
idt
[
T_SEGNP
],1,
GD_KT
,
T16_SEGNP
, 0);

101 
	`SETGATE
(
idt
[
T_STACK
],1,
GD_KT
,
T16_STACK
, 0);

102 
	`SETGATE
(
idt
[
T_GPFLT
],1,
GD_KT
,
T16_GPFLT
, 0);

103 
	`SETGATE
(
idt
[
T_PGFLT
],1,
GD_KT
,
T16_PGFLT
, 0);

104 
	`SETGATE
(
idt
[
T_FPERR
],1,
GD_KT
,
T16_FPERR
, 0);

105 
	`SETGATE
(
idt
[
T_ALIGN
],1,
GD_KT
,
T16_ALIGN
, 0);

106 
	`SETGATE
(
idt
[
T_MCHK
],1,
GD_KT
,
T16_MCHK
, 0);

107 
	`SETGATE
(
idt
[
T_SIMDERR
],1,
GD_KT
,
T16_SIMDERR
, 0);

108 
	`SETGATE
(
idt
[
T_SYSCALL
],1,
GD_KT
,
T16_SYSCALL
, 3);

109 
idt_pd
.
pd_lim
 = (
idt
)-1;

110 
idt_pd
.
pd_ba£
 = (
uöt64_t
)
idt
;

112 
	`å≠_öô_≥r˝u
();

113 
	}
}

117 
	$å≠_öô_≥r˝u
()

122 
ts
.
ts_e•0
 = 
KSTACKTOP
;

125 
	`SETTSS
((
Sy°emSegdesc64
 *)((
gdt_pd
>>16)+40),
STS_T64A
, (
uöt64_t
Ë(&
ts
),(
Task°©e
), 0);

128 
	`…r
(
GD_TSS0
);

131 
	`lidt
(&
idt_pd
);

132 
	}
}

135 
	$¥öt_å≠‰ame
(
Tøp‰ame
 *
tf
)

137 
	`˝rötf
("TRAP fømê© %p\n", 
tf
);

138 
	`¥öt_ªgs
(&
tf
->
tf_ªgs
);

139 
	`˝rötf
("É† 0x----%04x\n", 
tf
->
tf_es
);

140 
	`˝rötf
(" d† 0x----%04x\n", 
tf
->
tf_ds
);

141 
	`˝rötf
("Åø∞0x%08x %s\n", 
tf
->
tf_å≠no
, 
	`å≠«me
(tf->tf_trapno));

144 i‡(
tf
 =
œ°_tf
 &&Åf->
tf_å≠no
 =
T_PGFLT
)

145 
	`˝rötf
(" cr2 0x%08x\n", 
	`r¸2
());

146 
	`˝rötf
("Éº 0x%08x", 
tf
->
tf_îr
);

151 i‡(
tf
->
tf_å≠no
 =
T_PGFLT
)

152 
	`˝rötf
(" [%s, %s, %s]\n",

153 
tf
->
tf_îr
 & 4 ? "user" : "kernel",

154 
tf
->
tf_îr
 & 2 ? "write" : "read",

155 
tf
->
tf_îr
 & 1 ? "protection" : "not-present");

157 
	`˝rötf
("\n");

158 
	`˝rötf
("Ñù 0x%08x\n", 
tf
->
tf_rù
);

159 
	`˝rötf
(" c† 0x----%04x\n", 
tf
->
tf_cs
);

160 
	`˝rötf
(" fœg 0x%08x\n", 
tf
->
tf_eÊags
);

161 i‡((
tf
->
tf_cs
 & 3) != 0) {

162 
	`˝rötf
("Ñ• 0x%08x\n", 
tf
->
tf_r•
);

163 
	`˝rötf
(" s† 0x----%04x\n", 
tf
->
tf_ss
);

165 
	}
}

168 
	$¥öt_ªgs
(
PushRegs
 *
ªgs
)

170 
	`˝rötf
("Ñ15 0x%08x\n", 
ªgs
->
ªg_r15
);

171 
	`˝rötf
("Ñ14 0x%08x\n", 
ªgs
->
ªg_r14
);

172 
	`˝rötf
("Ñ13 0x%08x\n", 
ªgs
->
ªg_r13
);

173 
	`˝rötf
("Ñ12 0x%08x\n", 
ªgs
->
ªg_r12
);

174 
	`˝rötf
("Ñ11 0x%08x\n", 
ªgs
->
ªg_r11
);

175 
	`˝rötf
("Ñ10 0x%08x\n", 
ªgs
->
ªg_r10
);

176 
	`˝rötf
("Ñ9 0x%08x\n", 
ªgs
->
ªg_r9
);

177 
	`˝rötf
("Ñ8 0x%08x\n", 
ªgs
->
ªg_r8
);

178 
	`˝rötf
("Ñdò 0x%08x\n", 
ªgs
->
ªg_rdi
);

179 
	`˝rötf
("Ñsò 0x%08x\n", 
ªgs
->
ªg_rsi
);

180 
	`˝rötf
("Ñb∞ 0x%08x\n", 
ªgs
->
ªg_rbp
);

181 
	`˝rötf
("Ñbx 0x%08x\n", 
ªgs
->
ªg_rbx
);

182 
	`˝rötf
("Ñdx 0x%08x\n", 
ªgs
->
ªg_rdx
);

183 
	`˝rötf
("Ñcx 0x%08x\n", 
ªgs
->
ªg_rcx
);

184 
	`˝rötf
("Ñax 0x%08x\n", 
ªgs
->
ªg_øx
);

185 
	}
}

188 
	$å≠_di•©ch
(
Tøp‰ame
 *
tf
)

192 i‡(
tf
->
tf_å≠no
 =
T_PGFLT
) {

193 
	`∑ge_Áu…_h™dÀr
(
tf
);

196 i‡(
tf
->
tf_å≠no
==
T_BRKPT
) {

197 
	`m⁄ô‹
(
tf
);

201 i‡(
tf
->
tf_å≠no
 =
T_SYSCALL
) {

202 
uöt64_t
 
sysˇŒ_no
,
a1
,
a2
,
a3
,
a4
,
a5
,
ªt
;

203 
sysˇŒ_no
 = 
tf
->
tf_ªgs
.
ªg_øx
;

204 
a1
 = 
tf
->
tf_ªgs
.
ªg_rdx
;

205 
a2
 = 
tf
->
tf_ªgs
.
ªg_rcx
;

206 
a3
 = 
tf
->
tf_ªgs
.
ªg_rbx
;

207 
a4
 = 
tf
->
tf_ªgs
.
ªg_rdi
;

208 
a5
 = 
tf
->
tf_ªgs
.
ªg_rsi
;

209 
ªt
 = 
	`sysˇŒ
(
sysˇŒ_no
,
a1
,
a2
,
a3
,
a4
,
a5
);

210 
tf
->
tf_ªgs
.
ªg_øx
 = 
ªt
;

215 
	`¥öt_å≠‰ame
(
tf
);

216 i‡(
tf
->
tf_cs
 =
GD_KT
)

217 
	`∑nic
("unhandledÅrap in kernel");

219 
	`ív_de°roy
(
cuªnv
);

222 
	}
}

225 
	$å≠
(
Tøp‰ame
 *
tf
)

230 
asm
 volatile("cld" ::: "cc");

237 
	`˝rötf
("Incomög TRAP fømê© %p\n", 
tf
);

239 i‡((
tf
->
tf_cs
 & 3) == 3) {

241 
	`as£π
(
cuªnv
);

246 
cuªnv
->
ív_tf
 = *
tf
;

248 
tf
 = &
cuªnv
->
ív_tf
;

253 
œ°_tf
 = 
tf
;

256 
	`å≠_di•©ch
(
tf
);

259 
	`as£π
(
cuªnv
 && cuªnv->
ív_°©us
 =
ENV_RUNNING
);

260 
	`ív_run
(
cuªnv
);

261 
	}
}

265 
	$∑ge_Áu…_h™dÀr
(
Tøp‰ame
 *
tf
)

267 
uöt64_t
 
Áu…_va
;

270 
Áu…_va
 = 
	`r¸2
();

276 i‡((
tf
->
tf_cs
 & 3) == 0)

277 
	`∑nic
("Page fault occured in kernel mode");

283 
	`˝rötf
("[%08x] user fault va %08x ip %08x\n",

284 
cuªnv
->
ív_id
, 
Áu…_va
, 
tf
->
tf_rù
);

285 
	`¥öt_å≠‰ame
(
tf
);

286 
	`ív_de°roy
(
cuªnv
);

287 
	}
}

	@
1
.
1
/usr/include
44
439
console.c
console.h
cpu.h
dwarf.h
dwarf_api.h
dwarf_define.h
dwarf_elf.h
dwarf_error.h
dwarf_lineno.h
elf_rw.c
env copy.c
env.c
env.h
init.c
kclock.c
kclock.h
kdebug.c
kdebug.h
lapic.c
libdwarf_frame.c
libdwarf_lineno.c
libdwarf_rw.c
macro.h
monitor.c
monitor.h
mpconfig.c
multiboot.h
picirq.c
picirq.h
pmap copy.c
pmap.c
pmap.h
pmap_saved.c
printf.c
sched.c
sched.h
spinlock.c
spinlock.h
syscall.c
syscall.h
temp.c
trap.c
trap.h
trap_1.c
